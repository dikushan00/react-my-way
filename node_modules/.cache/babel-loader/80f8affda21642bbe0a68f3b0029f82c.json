{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Header\\\\Header.tsx\";\n\nimport React, { useState } from 'react';\nimport s from './Header.module.css';\nimport { NavLink } from \"react-router-dom\";\nimport userPhoto from \"../../img/user(1).svg\";\nimport logoImg from '../../img/logo.png';\n\nvar Header = function Header(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogInfoMode = _useState2[0],\n      setLogInfoMode = _useState2[1];\n\n  var logout = function logout() {\n    props.logoutMe();\n  };\n\n  var elem = document.getElementById(\"accountDrop\");\n\n  function onClickClose(elem) {\n    // вызвать в момент показа окна, где elem - окно\n    function outsideClickListener(event) {\n      if (!elem.contains(event.target) && isVisible(elem)) {\n        // проверяем, что клик не по элементу и элемент виден\n        elem.style.display = 'none'; //скрыть\n\n        document.removeEventListener('click', outsideClickListener);\n      }\n    }\n\n    document.addEventListener('click', outsideClickListener);\n  }\n\n  function isVisible(elem) {\n    //открыто ли условное окно\n    return !!elem && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  }\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: s.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"logo\",\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 42\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.authArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, props.isAuth ? /*#__PURE__*/React.createElement(\"div\", {\n    className: s.accountInfo,\n    onClick: function onClick() {\n      return setLogInfoMode(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, props.state.photos ? props.state.photos.large && /*#__PURE__*/React.createElement(\"img\", {\n    src: props.state.photos.large,\n    className: s.userImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 55\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: userPhoto,\n    className: s.userImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }\n  }), props.login, isLogInfoMode && /*#__PURE__*/React.createElement(\"div\", {\n    className: s.accountDrop,\n    id: \"accountDrop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, props.login), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: logout,\n    className: \"btn\",\n    style: {\n      marginTop: \"15px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, \"logout\"))) : /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }, \"Login\")));\n};\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Header/Header.tsx"],"names":["React","useState","s","NavLink","logoImg","Header","props","isLogInfoMode","setLogInfoMode","logout","logoutMe","elem","document","getElementById","onClickClose","outsideClickListener","event","contains","target","isVisible","style","display","removeEventListener","addEventListener","offsetWidth","offsetHeight","getClientRects","length","header","authArea","isAuth","accountInfo","state","photos","large","userImg","userPhoto","login","accountDrop","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport userPhoto from '../../img/user(1).svg'\r\nimport logoImg from '../../img/logo.png'\r\nimport {ProfileInitialStateType} from \"../../redux/profile_reducer\";\r\n\r\ntype PropsType = {\r\n    logoutMe: () => void\r\n    state: ProfileInitialStateType\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\nconst Header: React.FC<PropsType> = (props) => {\r\n\r\n    const [isLogInfoMode, setLogInfoMode] = useState(false)\r\n\r\n    const logout = () => {\r\n        props.logoutMe()\r\n    }\r\n\r\n    const elem = document.getElementById(\"accountDrop\");\r\n\r\n    function onClickClose(elem: HTMLElement) { // вызвать в момент показа окна, где elem - окно\r\n        function outsideClickListener(event: any) {\r\n            if (!elem.contains(event.target) && isVisible(elem)) {  // проверяем, что клик не по элементу и элемент виден\r\n                 elem.style.display = 'none'; //скрыть\r\n                 document.removeEventListener('click', outsideClickListener);\r\n            }\r\n        }\r\n        document.addEventListener('click', outsideClickListener)\r\n    }\r\n    function isVisible(elem: HTMLElement) { //открыто ли условное окно\r\n       return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\r\n    }\r\n\r\n    return <header className={s.header}>\r\n        <NavLink className=\"logo\" to='/'><img src={logoImg} /></NavLink>\r\n        <div className={s.authArea}>\r\n            { props.isAuth\r\n                ? <div className={s.accountInfo} onClick = {() => setLogInfoMode(true)}>\r\n                    { props.state.photos \r\n                        ? props.state.photos.large && <img src={props.state.photos.large} className={s.userImg}/> \r\n                        : <img src={userPhoto} className={s.userImg}/>}\r\n                    {props.login}\r\n                    {\r\n                        isLogInfoMode \r\n                        && <div className={s.accountDrop} id=\"accountDrop\">\r\n                            <NavLink to=\"/profile\">{props.login}</NavLink>\r\n                            <button onClick={logout} className = \"btn\" style={{marginTop: \"15px\"}}>logout</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : <NavLink to=\"/login\">Login</NavLink> }\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header;"]},"metadata":{},"sourceType":"module"}