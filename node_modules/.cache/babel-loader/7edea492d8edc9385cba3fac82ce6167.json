{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, unfollow, getUsers, setCurrentPage, setPageCount, switch_follow, toggleProgress } from \"../../redux/users_reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getCurrentPage, getIsFetching, getPageCount, getPageSize, getToggleProgressArr, getUsersList } from \"../../redux/users_selector\";\n\nvar UsersContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(UsersContainer, _React$Component);\n\n  function UsersContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.pageEvent = function (p) {\n      _this.props.getUsers(p, _this.props.pageSize);\n    };\n\n    return _this;\n  }\n\n  _createClass(UsersContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 38\n        }\n      }) : /*#__PURE__*/React.createElement(Users, {\n        currentPage: this.props.currentPage,\n        pageCount: this.props.pageCount,\n        pageSize: this.props.pageSize,\n        switch_follow: this.props.switch_follow,\n        state: this.props.state,\n        pageEvent: this.pageEvent,\n        toggleProgressArr: this.props.toggleProgressArr,\n        toggleProgress: this.props.toggleProgress,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return UsersContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: getUsersList(state),\n    currentPage: getCurrentPage(state),\n    pageCount: getPageCount(state),\n    pageSize: getPageSize(state),\n    isFetching: getIsFetching(state),\n    toggleProgressArr: getToggleProgressArr(state)\n  };\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\n  switch_follow: switch_follow,\n  setCurrentPage: setCurrentPage,\n  setPageCount: setPageCount,\n  toggleProgress: toggleProgress,\n  getUsers: getUsers,\n  follow: follow,\n  unfollow: unfollow\n}))(UsersContainer); //\n// const mapDispatchToProps = (dispatch) => {\n//\n//     return {\n//         switch_follow: (usersId) => {\n//             dispatch(switch_followAC(usersId))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage))\n//         },\n//         setCountPage: (pageCount) => {\n//             dispatch(setPageCountAC(pageCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","unfollow","getUsers","setCurrentPage","setPageCount","switch_follow","toggleProgress","Users","Preloader","withAuthRedirect","compose","getCurrentPage","getIsFetching","getPageCount","getPageSize","getToggleProgressArr","getUsersList","UsersContainer","pageEvent","p","props","pageSize","currentPage","isFetching","pageCount","state","toggleProgressArr","Component","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EAEIC,QAFJ,EAGIC,QAHJ,EAIIC,cAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,cAPJ,QAQO,2BARP;AASA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SACIC,cADJ,EAEIC,aAFJ,EAGIC,YAHJ,EAIIC,WAJJ,EAKIC,oBALJ,EAK0BC,YAL1B,QAMO,4BANP;;IAQMC,c;;;;;;;;;;;;;;;;UAMFC,S,GAAY,UAACC,CAAD,EAAO;AACf,YAAKC,KAAL,CAAWlB,QAAX,CAAqBiB,CAArB,EAAwB,MAAKC,KAAL,CAAWC,QAAnC;AACH,K;;;;;;;wCANmB;AAChB,WAAKD,KAAL,CAAWlB,QAAX,CAAoB,KAAKkB,KAAL,CAAWE,WAA/B,EAA4C,KAAKF,KAAL,CAAWC,QAAvD;AACH;;;6BAMQ;AACL,0BAAO,0CACF,KAAKD,KAAL,CAAWG,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,gBACG,oBAAC,KAAD;AACI,QAAA,WAAW,EAAE,KAAKH,KAAL,CAAWE,WAD5B;AAEI,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWI,SAF1B;AAGI,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,QAHzB;AAII,QAAA,aAAa,EAAE,KAAKD,KAAL,CAAWf,aAJ9B;AAKI,QAAA,KAAK,EAAE,KAAKe,KAAL,CAAWK,KALtB;AAMI,QAAA,SAAS,EAAE,KAAKP,SANpB;AAOI,QAAA,iBAAiB,EAAI,KAAKE,KAAL,CAAWM,iBAPpC;AAQI,QAAA,cAAc,EAAI,KAAKN,KAAL,CAAWd,cARjC;AASI,QAAA,MAAM,EAAI,KAAKc,KAAL,CAAWpB,MATzB;AAUI,QAAA,QAAQ,EAAI,KAAKoB,KAAL,CAAWnB,QAV3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,CAAP;AAeH;;;;EA1BwBH,KAAK,CAAC6B,S;;AA6BnC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAW;AAE/B,SAAO;AACHA,IAAAA,KAAK,EAAET,YAAY,CAACS,KAAD,CADhB;AAEHH,IAAAA,WAAW,EAAEX,cAAc,CAACc,KAAD,CAFxB;AAGHD,IAAAA,SAAS,EAAEX,YAAY,CAACY,KAAD,CAHpB;AAIHJ,IAAAA,QAAQ,EAAEP,WAAW,CAACW,KAAD,CAJlB;AAKHF,IAAAA,UAAU,EAAEX,aAAa,CAACa,KAAD,CALtB;AAMHC,IAAAA,iBAAiB,EAAEX,oBAAoB,CAACU,KAAD;AANpC,GAAP;AAQH,CAVD;;AAYA,eAAef,OAAO,CAClBD,gBADkB,EAElBV,OAAO,CAAC6B,eAAD,EAAkB;AACrBvB,EAAAA,aAAa,EAAbA,aADqB;AAErBF,EAAAA,cAAc,EAAdA,cAFqB;AAGrBC,EAAAA,YAAY,EAAZA,YAHqB;AAIrBE,EAAAA,cAAc,EAAdA,cAJqB;AAKrBJ,EAAAA,QAAQ,EAARA,QALqB;AAMrBF,EAAAA,MAAM,EAANA,MANqB;AAOrBC,EAAAA,QAAQ,EAARA;AAPqB,CAAlB,CAFW,CAAP,CAWbgB,cAXa,CAAf,C,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    getUsers,\r\n    setCurrentPage,\r\n    setPageCount,\r\n    switch_follow,\r\n    toggleProgress\r\n} from \"../../redux/users_reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getPageCount,\r\n    getPageSize,\r\n    getToggleProgressArr, getUsersList\r\n} from \"../../redux/users_selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    pageEvent = (p) => {\r\n        this.props.getUsers( p, this.props.pageSize )\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    currentPage={this.props.currentPage}\r\n                    pageCount={this.props.pageCount}\r\n                    pageSize={this.props.pageSize}\r\n                    switch_follow={this.props.switch_follow}\r\n                    state={this.props.state}\r\n                    pageEvent={this.pageEvent}\r\n                    toggleProgressArr = {this.props.toggleProgressArr}\r\n                    toggleProgress = {this.props.toggleProgress}\r\n                    follow = {this.props.follow}\r\n                    unfollow = {this.props.unfollow}\r\n                />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        state: getUsersList(state),\r\n        currentPage: getCurrentPage(state),\r\n        pageCount: getPageCount(state),\r\n        pageSize: getPageSize(state),\r\n        isFetching: getIsFetching(state),\r\n        toggleProgressArr: getToggleProgressArr(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        switch_follow,\r\n        setCurrentPage,\r\n        setPageCount,\r\n        toggleProgress,\r\n        getUsers,\r\n        follow,\r\n        unfollow\r\n    })\r\n)(UsersContainer)\r\n\r\n\r\n\r\n\r\n//\r\n// const mapDispatchToProps = (dispatch) => {\r\n//\r\n//     return {\r\n//         switch_follow: (usersId) => {\r\n//             dispatch(switch_followAC(usersId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (currentPage) => {\r\n//             dispatch(setCurrentPageAC(currentPage))\r\n//         },\r\n//         setCountPage: (pageCount) => {\r\n//             dispatch(setPageCountAC(pageCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}