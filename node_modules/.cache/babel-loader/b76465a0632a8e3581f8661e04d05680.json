{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ProfileAPI, UsersAPI } from \"../api/api\";\nvar UPDATE_NEW_POST = \"UPDATE-NEW-POST\";\nvar ADD_NEW_POST = \"ADD-NEW-POST\";\nvar PROFILE_INFO = \"PROFILE_INFO\";\nvar SET_STATUS = \"SET_STATUS\";\nvar initialState = {\n  postsData: [{\n    \"id\": 1,\n    \"message\": \"Hello, how are you?\",\n    \"likesCount\": 5\n  }, {\n    \"id\": 2,\n    \"message\": \"My, first post!\",\n    \"likesCount\": 2\n  }, {\n    \"id\": 3,\n    \"message\": \"Hello, everyone\",\n    \"likesCount\": 10\n  }],\n  newPostText: '',\n  profile: null,\n  status: ''\n};\n\nvar profile_reducer = function profile_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_NEW_POST:\n      {\n        if (state.newPostText.length > 0) {\n          return _objectSpread({}, state, {\n            postsData: [].concat(_toConsumableArray(state.postsData), [{\n              \"id\": 5,\n              \"message\": state.newPostText,\n              \"likesCount\": 14\n            }]),\n            newPostText: ''\n          });\n        }\n\n        return state;\n      }\n\n    case UPDATE_NEW_POST:\n      {\n        return _objectSpread({}, state, {\n          newPostText: action.newText\n        });\n      }\n\n    case PROFILE_INFO:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var addPost = function addPost() {\n  return {\n    type: ADD_NEW_POST\n  };\n};\nexport var updateNewPost = function updateNewPost(text) {\n  return {\n    type: UPDATE_NEW_POST,\n    newText: text\n  };\n};\nexport var profileInfo = function profileInfo(profile) {\n  return {\n    type: PROFILE_INFO,\n    profile: profile\n  };\n};\nexport var setStatus = function setStatus(status) {\n  return {\n    type: SET_STATUS,\n    status: status\n  };\n};\nexport var check_auth = function check_auth(userId) {\n  return function (dispatch) {\n    ProfileAPI.checkAuth(userId).then(function (data) {\n      dispatch(profileInfo(data));\n    });\n  };\n};\nexport var getStatus = function getStatus(status) {\n  return function (dispatch) {\n    ProfileAPI.getStatus(status).then(function (data) {\n      dispatch(setStatus(data));\n    });\n  };\n};\nexport var updateStatus = function updateStatus(status) {\n  return function (dispatch) {\n    ProfileAPI.updateStatus(status).then(function (data) {\n      dispatch(setStatus(data));\n    });\n  };\n};\nexport default profile_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/profile_reducer.js"],"names":["ProfileAPI","UsersAPI","UPDATE_NEW_POST","ADD_NEW_POST","PROFILE_INFO","SET_STATUS","initialState","postsData","newPostText","profile","status","profile_reducer","state","action","type","length","newText","addPost","updateNewPost","text","profileInfo","setStatus","check_auth","userId","dispatch","checkAuth","then","data","getStatus","updateStatus"],"mappings":"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","sourcesContent":["import {ProfileAPI, UsersAPI} from \"../api/api\";\r\n\r\nconst UPDATE_NEW_POST = \"UPDATE-NEW-POST\";\r\nconst ADD_NEW_POST = \"ADD-NEW-POST\";\r\nconst PROFILE_INFO = \"PROFILE_INFO\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\"id\": 1, \"message\": \"Hello, how are you?\", \"likesCount\": 5},\r\n        {\"id\": 2, \"message\": \"My, first post!\", \"likesCount\": 2},\r\n        {\"id\": 3, \"message\": \"Hello, everyone\", \"likesCount\": 10},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nlet profile_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_NEW_POST: {\r\n\r\n            if (state.newPostText.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    postsData: [...state.postsData, {\r\n                        \"id\": 5,\r\n                        \"message\": state.newPostText,\r\n                        \"likesCount\": 14\r\n                    }],\r\n                    newPostText: ''\r\n                }\r\n            }\r\n\r\n            return state\r\n\r\n        }\r\n\r\n        case UPDATE_NEW_POST: {\r\n\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n\r\n        case PROFILE_INFO: {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const addPost = () => ({type: ADD_NEW_POST});\r\nexport const updateNewPost = (text) => ({type: UPDATE_NEW_POST, newText: text});\r\nexport const profileInfo = (profile) => ({type: PROFILE_INFO, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const check_auth = (userId) => {\r\n    return (dispatch) => {\r\n        ProfileAPI.checkAuth(userId).then((data) => {\r\n            dispatch(profileInfo(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStatus = (status) => {\r\n    return (dispatch) => {\r\n        ProfileAPI.getStatus(status).then((data) => {\r\n            dispatch(setStatus(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        ProfileAPI.updateStatus(status).then((data) => {\r\n            dispatch(setStatus(data))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default profile_reducer"]},"metadata":{},"sourceType":"module"}