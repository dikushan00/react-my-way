{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Header\\\\HeaderSearchForm.tsx\";\n\nimport { Field, Form, Formik, useFormik } from 'formik';\nimport React from 'react';\n\nvar HeaderSearchForm = function HeaderSearchForm() {\n  var submit = function submit(values, _ref) {\n    var setSubmitting = _ref.setSubmitting;\n    setSubmitting(false);\n  }; // const submitForm = useFormikContext()\n\n\n  var formik = useFormik({\n    initialValues: {\n      fullName: \"\"\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(values.fullName);\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      fullName: \"\"\n    },\n    onSubmit: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        handleChange = _ref2.handleChange,\n        submitForm = _ref2.submitForm;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"fullName\",\n      placeholder: \"Enter name...\",\n      onChange: function onChange(e) {\n        console.log(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }));\n  }));\n};\n\nexport default HeaderSearchForm;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Header/HeaderSearchForm.tsx"],"names":["Field","Form","Formik","useFormik","React","HeaderSearchForm","submit","values","setSubmitting","formik","initialValues","fullName","onSubmit","console","log","alert","JSON","stringify","handleChange","submitForm","e","target","value"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,SAA9B,QAAiE,QAAjE;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAE3B,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,QAAgG;AAAA,QAAtEC,aAAsE,QAAtEA,aAAsE;AAC3GA,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFH,CAF2B,CAM3B;;;AACA,MAAMC,MAAM,GAAGN,SAAS,CAAC;AACrBO,IAAAA,aAAa,EAAE;AACXC,MAAAA,QAAQ,EAAE;AADC,KADM;AAIrBC,IAAAA,QAAQ,EAAE,kBAAAL,MAAM,EAAI;AAChBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACI,QAAnB;AACFI,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeV,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD;AAPoB,GAAD,CAAxB;AAUA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,MAAD;AACA,IAAA,aAAa,EAAK;AACdI,MAAAA,QAAQ,EAAE;AADI,KADlB;AAIA,IAAA,QAAQ,EAAIL,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMQ;AAAA,QAAEC,MAAF,SAAEA,MAAF;AAAA,QAAUW,YAAV,SAAUA,YAAV;AAAA,QAAwBC,UAAxB,SAAwBA,UAAxB;AAAA,wBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,MAAd;AAAqB,MAAA,IAAI,EAAG,UAA5B;AAAuC,MAAA,WAAW,EAAG,eAArD;AAAqE,MAAA,QAAQ,EAAI,kBAACC,CAAD,EAAY;AAACP,QAAAA,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACC,MAAF,CAASC,KAArB;AAA4B,OAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA;AAAA,GANR,CADG,CAAP;AAwBH,CAzCD;;AA2CA,eAAejB,gBAAf","sourcesContent":["import { Field, Form, Formik, useFormik, useFormikContext } from 'formik'\r\nimport React from 'react'\r\nimport { ChangeEvent } from 'react';\r\n\r\nconst HeaderSearchForm = () => {\r\n\r\n    const submit = (values: FormValuesType, {setSubmitting} : {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        setSubmitting(false)\r\n      }\r\n\r\n    // const submitForm = useFormikContext()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            fullName: \"\",\r\n        },\r\n        onSubmit: values => {\r\n            console.log(values.fullName)\r\n          alert(JSON.stringify(values, null, 2));\r\n        },\r\n      });\r\n\r\n    return <div>\r\n        <Formik\r\n        initialValues =  {{\r\n            fullName: \"\",\r\n        }}\r\n        onSubmit = {submit}>\r\n            {\r\n                ({values, handleChange, submitForm}) => (\r\n                <Form>\r\n                    <Field type = \"text\" name = \"fullName\" placeholder = \"Enter name...\" onChange = {(e: any) => {console.log(e.target.value)}}/>\r\n                </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        {/* @ts-ignore*/}\r\n        {/* <form onSubmit = {formik.handleSubmit} onChange = {(e) => { formik.handleSubmit; submitForm() } }>\r\n            <input \r\n                id = \"name\"\r\n                name = \"fullName\"\r\n                type = \"text\" \r\n                onChange = {formik.handleChange}\r\n                placeholder = \"Enter name...\"/>\r\n        </form> */}\r\n    </div>\r\n}\r\n\r\nexport default HeaderSearchForm\r\n\r\ntype FormValuesType = {\r\n    fullName: string\r\n}"]},"metadata":{},"sourceType":"module"}