{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar ADD_NEW_MESSAGE = \"ADD-NEW-MESSAGE\";\nvar UPDATE_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE\";\nvar id = 4;\nvar initialState = {\n  userData: [{\n    \"id\": 1,\n    \"name\": \"Dmitri\"\n  }, {\n    \"id\": 2,\n    \"name\": \"Svetlana\"\n  }, {\n    \"id\": 3,\n    \"name\": \"Nauryz\"\n  }, {\n    \"id\": 4,\n    \"name\": \"Dinmukhamed\"\n  }, {\n    \"id\": 5,\n    \"name\": \"Mukhit\"\n  }],\n  messageData: [{\n    \"id\": 1,\n    \"message\": \"Yo\"\n  }, {\n    \"id\": 2,\n    \"message\": \"Hello\"\n  }, {\n    \"id\": 1,\n    \"message\": \"How are you\"\n  }],\n  newMessageText: ''\n};\n\nvar dialogs_reducer = function dialogs_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n      {\n        var newMessage = {\n          \"id\": id,\n          \"message\": state.newMessageText\n        };\n        id += 2;\n\n        var copyState = _objectSpread({}, state);\n\n        if (state.newMessageText.length > 0) {\n          copyState.messageData = _toConsumableArray(state.messageData);\n          copyState.messageData.push(newMessage);\n          copyState.newMessageText = '';\n        }\n\n        return copyState;\n      }\n\n    case UPDATE_NEW_MESSAGE:\n      {\n        var _copyState = _objectSpread({}, state);\n\n        _copyState.newMessageText = action.newMessage;\n        return _copyState;\n      }\n  }\n\n  return state;\n};\n\nexport var addMessageActionCreater = function addMessageActionCreater() {\n  return {\n    type: ADD_NEW_MESSAGE\n  };\n};\nexport var updateMessageActionCreater = function updateMessageActionCreater(message) {\n  return {\n    type: UPDATE_NEW_MESSAGE,\n    newMessage: message\n  };\n};\nexport default dialogs_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/dialogs_reducer.js"],"names":["ADD_NEW_MESSAGE","UPDATE_NEW_MESSAGE","id","initialState","userData","messageData","newMessageText","dialogs_reducer","state","action","type","newMessage","copyState","length","push","addMessageActionCreater","updateMessageActionCreater","message"],"mappings":";;AAAA,IAAMA,eAAe,GAAG,iBAAxB;AACA,IAAMC,kBAAkB,GAAG,oBAA3B;AACA,IAAIC,EAAE,GAAG,CAAT;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,CACN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GADM,EAEN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GAFM,EAGN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GAHM,EAIN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GAJM,EAKN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GALM,CADK;AAQfC,EAAAA,WAAW,EAAE,CACT;AAAC,UAAM,CAAP;AAAU,eAAW;AAArB,GADS,EAET;AAAC,UAAM,CAAP;AAAU,eAAW;AAArB,GAFS,EAGT;AAAC,UAAM,CAAP;AAAU,eAAW;AAArB,GAHS,CARE;AAafC,EAAAA,cAAc,EAAE;AAbD,CAAnB;;AAgBA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAEpD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKV,eAAL;AAAqB;AAEjB,YAAIW,UAAU,GAAI;AAAC,gBAAMT,EAAP;AAAW,qBAAWM,KAAK,CAACF;AAA5B,SAAlB;AACAJ,QAAAA,EAAE,IAAE,CAAJ;;AAEA,YAAIU,SAAS,qBAAOJ,KAAP,CAAb;;AAEA,YAAGA,KAAK,CAACF,cAAN,CAAqBO,MAArB,GAA8B,CAAjC,EAAmC;AAC/BD,UAAAA,SAAS,CAACP,WAAV,sBAA4BG,KAAK,CAACH,WAAlC;AACAO,UAAAA,SAAS,CAACP,WAAV,CAAsBS,IAAtB,CAA2BH,UAA3B;AACAC,UAAAA,SAAS,CAACN,cAAV,GAA2B,EAA3B;AACH;;AACD,eAAOM,SAAP;AACH;;AAED,SAAKX,kBAAL;AAAwB;AACpB,YAAIW,UAAS,qBAAOJ,KAAP,CAAb;;AACAI,QAAAA,UAAS,CAACN,cAAV,GAA2BG,MAAM,CAACE,UAAlC;AACA,eAAOC,UAAP;AACH;AArBL;;AAwBA,SAAOJ,KAAP;AACH,CA3BD;;AA4BA,OAAO,IAAMO,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,SAAO;AAACL,IAAAA,IAAI,EAAEV;AAAP,GAAP;AAAA,CAAhC;AACP,OAAO,IAAMgB,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,OAAD;AAAA,SAAc;AAACP,IAAAA,IAAI,EAAET,kBAAP;AAA2BU,IAAAA,UAAU,EAAEM;AAAvC,GAAd;AAAA,CAAnC;AAEP,eAAeV,eAAf","sourcesContent":["const ADD_NEW_MESSAGE = \"ADD-NEW-MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE\";\r\nlet id = 4;\r\n\r\nlet initialState = {\r\n    userData: [\r\n        {\"id\": 1, \"name\": \"Dmitri\"},\r\n        {\"id\": 2, \"name\": \"Svetlana\"},\r\n        {\"id\": 3, \"name\": \"Nauryz\"},\r\n        {\"id\": 4, \"name\": \"Dinmukhamed\"},\r\n        {\"id\": 5, \"name\": \"Mukhit\"}\r\n    ],\r\n    messageData: [\r\n        {\"id\": 1, \"message\": \"Yo\"},\r\n        {\"id\": 2, \"message\": \"Hello\"},\r\n        {\"id\": 1, \"message\": \"How are you\"}\r\n    ],\r\n    newMessageText: ''\r\n}\r\n\r\nlet dialogs_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_NEW_MESSAGE:{\r\n\r\n            let newMessage =  {\"id\": id, \"message\": state.newMessageText};\r\n            id+=2;\r\n\r\n            let copyState = {...state};\r\n\r\n            if(state.newMessageText.length > 0){\r\n                copyState.messageData = [...state.messageData]\r\n                copyState.messageData.push(newMessage);\r\n                copyState.newMessageText = '';\r\n            }\r\n            return copyState\r\n        }\r\n\r\n        case UPDATE_NEW_MESSAGE:{\r\n            let copyState = {...state}\r\n            copyState.newMessageText = action.newMessage;\r\n            return copyState\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\nexport const addMessageActionCreater = () => ({type: ADD_NEW_MESSAGE});\r\nexport const updateMessageActionCreater = (message) => ({type: UPDATE_NEW_MESSAGE, newMessage: message});\r\n\r\nexport default dialogs_reducer"]},"metadata":{},"sourceType":"module"}