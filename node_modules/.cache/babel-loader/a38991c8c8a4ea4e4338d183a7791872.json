{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\n\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreater, required } from \"../utils/Validators/validators\";\nimport { Element } from \"../common/FormControl/FormControl\";\nimport mailMain from \"../../img/mailMain.svg\";\n\nvar Dialogs = function Dialogs(props) {\n  var onAddMessage = function onAddMessage(data) {\n    props.addMessage(data.newMessageText);\n    props.reset('DialogsForm');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogsItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, props.state.userData.map(function (user) {\n    return /*#__PURE__*/React.createElement(DialogItem, {\n      props: user,\n      key: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    });\n  })), props.userId ? /*#__PURE__*/React.createElement(DialogsWindow, {\n    onAddMessage: onAddMessage,\n    state: props.state,\n    userId: props.userId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(DialogsMain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 27\n    }\n  })));\n};\n\nvar maxLength15 = maxLengthCreater(15);\nvar Textarea = Element(\"textarea\");\n\nvar DialogsForm = function DialogsForm(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: s.inputArea,\n    onSubmit: props.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    placeholder: \"Enter message...\",\n    className: s.input,\n    name: \"newMessageText\",\n    validate: [required, maxLength15],\n    component: Textarea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\n\nvar DialogsWindow = function DialogsWindow(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.messages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }, props.state.messageData.map(function (message) {\n    return message.id === Number(props.userId) && message.messages.map(function (message) {\n      return /*#__PURE__*/React.createElement(Message, {\n        props: message,\n        key: message.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 49\n        }\n      });\n    });\n  }), /*#__PURE__*/React.createElement(DialogsFormRedux, {\n    onSubmit: props.onAddMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar DialogsMain = function DialogsMain(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: mailMain,\n    alt: \"Photo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar DialogsFormRedux = reduxForm({\n  form: 'DialogsForm'\n})(DialogsForm);\nexport default Dialogs;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","maxLengthCreater","required","Element","Dialogs","props","onAddMessage","data","addMessage","newMessageText","reset","dialogs","dialogsItems","state","userData","map","user","id","userId","maxLength15","Textarea","DialogsForm","inputArea","handleSubmit","input","DialogsWindow","messages","messageData","message","Number","DialogsMain","mailMain","DialogsFormRedux","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreater, required} from \"../utils/Validators/validators\";\r\nimport {Element} from \"../common/FormControl/FormControl\";\r\nimport mailMain from \"../../img/mailMain.svg\"\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let onAddMessage = (data) => {\r\n        props.addMessage(data.newMessageText);\r\n        props.reset('DialogsForm')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {props.state.userData.map((user) =>\r\n                        <DialogItem props={user} key={user.id}/>\r\n                    )}\r\n                </div>\r\n                \r\n                {\r\n                    props.userId \r\n                        ? <DialogsWindow onAddMessage = {onAddMessage} state={props.state} userId = {props.userId}/> \r\n                        : <DialogsMain />\r\n\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nlet maxLength15 = maxLengthCreater(15);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form className={s.inputArea} onSubmit={props.handleSubmit}>\r\n            <Field placeholder='Enter message...' className={s.input} name='newMessageText' validate={[required, maxLength15]} component={Textarea}/>\r\n            <button className=\"btn\">Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsWindow = props => {\r\n\r\n    return <div className={s.messages}>\r\n        {\r\n            props.state.messageData.map((message) => {\r\n                return message.id === Number(props.userId) &&\r\n                message.messages.map(message => <Message props={message} key={message.id}/>\r\n                )\r\n            })\r\n        }\r\n        <DialogsFormRedux onSubmit={props.onAddMessage}/>\r\n    </div>\r\n}\r\n\r\nconst DialogsMain = props => {\r\n\r\n    return <div>\r\n        <img src={mailMain} alt=\"Photo\"/>\r\n    </div>\r\n}\r\n\r\nconst DialogsFormRedux = reduxForm({form: 'DialogsForm'})(DialogsForm)\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}