{"ast":null,"code":"import * as axios from \"axios\";\nvar instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"api-key\": \"201fbca2-9214-4c3c-bd7a-b698236c954c\"\n  }\n});\nexport var UsersAPI = {\n  getUsers: function getUsers() {\n    var currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize)).then(function (response) {\n      return response.data;\n    });\n  },\n  follow: function follow(userId) {\n    return instance.post(\"follow/\".concat(userId), {}).then(function (response) {\n      return response.data;\n    });\n  },\n  unfollow: function unfollow(userId) {\n    return instance.delete(\"follow/\".concat(userId)).then(function (response) {\n      return response.data;\n    });\n  }\n};\nexport var AuthAPI = {\n  checkAuthMe: function checkAuthMe() {\n    return instance.get(\"auth/me\").then(function (response) {\n      return response.data;\n    });\n  }\n};\nexport var ProfileAPI = {\n  checkAuth: function checkAuth(userId) {\n    return instance.get(\"profile/\".concat(userId)).then(function (response) {\n      return response.data;\n    });\n  },\n  getStatus: function getStatus(userId) {\n    return instance.get(\"profile/status/\".concat(userId)).then(function (response) {\n      return response.data;\n    });\n  },\n  updateStatus: function updateStatus(status) {\n    return instance.put(\"profile/status\", {\n      status: status\n    }).then(function (response) {\n      return response.data;\n    });\n  },\n  updateMainPhoto: function updateMainPhoto(photo) {\n    var formData = new formData();\n    formData.append(\"image\", photo);\n    return instance.put(\"profile/photo\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(function (response) {\n      return response.data;\n    });\n  }\n};\nexport var LoginAPI = {\n  checkLogin: function checkLogin(email, password, rememberMe) {\n    return instance.post(\"auth/login\", {\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    }).then(function (response) {\n      return response;\n    });\n  },\n  logout: function logout() {\n    return instance.delete(\"auth/login\").then(function (response) {\n      return response;\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","UsersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","AuthAPI","checkAuthMe","ProfileAPI","checkAuth","getStatus","updateStatus","status","put","updateMainPhoto","photo","formData","append","LoginAPI","checkLogin","email","password","rememberMe","logout"],"mappings":"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","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"api-key\": \"201fbca2-9214-4c3c-bd7a-b698236c954c\"\r\n    }\r\n})\r\n\r\nexport const UsersAPI = {\r\n\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`, {})\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n\r\n    checkAuthMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n\r\n    checkAuth(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateMainPhoto(photo) {\r\n        const formData = new formData()\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const LoginAPI = {\r\n    checkLogin(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response;\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}