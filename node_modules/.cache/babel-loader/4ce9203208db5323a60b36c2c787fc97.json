{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { UsersAPI } from \"../api/api\";\nvar SWITCH_FOLLOW = \"SWITCH_FOLLOW\";\nvar SET_USERS = \"SET_USERS\";\nvar SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nvar SET_TOTAL_PAGE_COUNT = \"SET_TOTAL_PAGE_COUNT\";\nvar TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\nvar TOGGLE_PROGRESS = \"TOGGLE_PROGRESS\";\nvar initialState = {\n  usersData: [],\n  pageSize: 20,\n  currentPage: 1,\n  pageCount: 500,\n  isFetching: true,\n  toggleProgressArr: [],\n  fake: 10\n};\n\nvar users_reducer = function users_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FAKE\":\n      return _objectSpread({}, state, {\n        fake: state.fake + 1\n      });\n\n    case SWITCH_FOLLOW:\n      {\n        return _objectSpread({}, state, {\n          usersData: state.usersData.map(function (u) {\n            if (u.id === action.userId) {\n              return _objectSpread({}, u, {\n                followed: !u.followed\n              });\n            }\n\n            return u;\n          })\n        });\n        return state;\n      }\n\n    case SET_USERS:\n      {\n        return _objectSpread({}, state, {\n          usersData: _toConsumableArray(action.users)\n        });\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case SET_TOTAL_PAGE_COUNT:\n      {\n        return _objectSpread({}, state, {\n          pageCount: action.count\n        });\n      }\n\n    case TOGGLE_FETCHING:\n      {\n        return _objectSpread({}, state, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case TOGGLE_PROGRESS:\n      {\n        return _objectSpread({}, state, {\n          toggleProgressArr: action.isFetching ? [].concat(_toConsumableArray(state.toggleProgressArr), [action.id]) : state.toggleProgressArr.filter(function (id) {\n            return id != action.id;\n          })\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var switch_follow = function switch_follow(userId) {\n  return {\n    type: SWITCH_FOLLOW,\n    userId: userId\n  };\n};\nexport var setUsers = function setUsers(users) {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport var setCurrentPage = function setCurrentPage(currentPage) {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage: currentPage\n  };\n};\nexport var setPageCount = function setPageCount(count) {\n  return {\n    type: SET_TOTAL_PAGE_COUNT,\n    count: count\n  };\n};\nexport var toggleIsFetching = function toggleIsFetching(isFetching) {\n  return {\n    type: TOGGLE_FETCHING,\n    isFetching: isFetching\n  };\n};\nexport var toggleProgress = function toggleProgress(isFetching, id) {\n  return {\n    type: TOGGLE_PROGRESS,\n    isFetching: isFetching,\n    id: id\n  };\n};\nexport var getUsers = function getUsers(currentPage, pageSize) {\n  return function (dispatch) {\n    dispatch(setCurrentPage(currentPage));\n    dispatch(toggleIsFetching(true));\n    UsersAPI.getUsers(currentPage, pageSize).then(function (data) {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items)); //dispatch(setPageCount(data.totalCount))\n    });\n  };\n};\nexport var follow = function follow(userId) {\n  return function (dispatch) {\n    dispatch(toggleProgress(true, userId));\n    UsersAPI.follow(userId).then(function (data) {\n      dispatch(switch_follow(userId));\n      dispatch(toggleProgress(false, userId));\n    });\n  };\n};\nexport var unfollow = function unfollow(userId) {\n  return function (dispatch) {\n    dispatch(toggleProgress(true, userId));\n    UsersAPI.unfollow(userId).then(function (data) {\n      dispatch(switch_follow(userId));\n      dispatch(toggleProgress(false, userId));\n    });\n  };\n};\nexport default users_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/users_reducer.js"],"names":["UsersAPI","SWITCH_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_PAGE_COUNT","TOGGLE_FETCHING","TOGGLE_PROGRESS","initialState","usersData","pageSize","currentPage","pageCount","isFetching","toggleProgressArr","fake","users_reducer","state","action","type","map","u","id","userId","followed","users","count","filter","switch_follow","setUsers","setCurrentPage","setPageCount","toggleIsFetching","toggleProgress","getUsers","dispatch","then","data","items","follow","unfollow"],"mappings":"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","sourcesContent":["import {UsersAPI} from \"../api/api\";\r\n\r\nconst SWITCH_FOLLOW = \"SWITCH_FOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_PAGE_COUNT = \"SET_TOTAL_PAGE_COUNT\";\r\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\r\nconst TOGGLE_PROGRESS = \"TOGGLE_PROGRESS\";\r\n\r\nlet initialState = {\r\n    usersData: [],\r\n    pageSize: 20,\r\n    currentPage: 1,\r\n    pageCount: 500,\r\n    isFetching: true,\r\n    toggleProgressArr: [],\r\n    fake: 10\r\n}\r\n\r\nlet users_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"FAKE\": return {...state, fake: state.fake + 1}\r\n\r\n        case SWITCH_FOLLOW: {\r\n\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map( u => {\r\n                        if(u.id === action.userId){\r\n                            return {...u, followed: !u.followed}\r\n                        }\r\n                        return u\r\n                    })\r\n                }\r\n\r\n            return state\r\n\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, usersData: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_PAGE_COUNT: {\r\n            return { ...state, pageCount: action.count}\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                toggleProgressArr: action.isFetching\r\n                    ? [...state.toggleProgressArr, action.id]\r\n                    : state.toggleProgressArr.filter(id =>  id != action.id)\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const switch_follow = (userId) => ({type: SWITCH_FOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setPageCount = (count) => ({type: SET_TOTAL_PAGE_COUNT, count});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching});\r\nexport const toggleProgress = (isFetching, id) => ({type: TOGGLE_PROGRESS, isFetching, id});\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(toggleIsFetching(true))\r\n        UsersAPI.getUsers(currentPage, pageSize).then((data) => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            //dispatch(setPageCount(data.totalCount))\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleProgress(true, userId))\r\n        UsersAPI.follow(userId).then((data) => {\r\n            dispatch(switch_follow(userId))\r\n            dispatch(toggleProgress(false, userId))\r\n        })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleProgress(true, userId))\r\n        UsersAPI.unfollow(userId).then((data) => {\r\n            dispatch(switch_follow(userId))\r\n            dispatch(toggleProgress(false, userId))\r\n        })\r\n    }\r\n}\r\n\r\nexport default users_reducer"]},"metadata":{},"sourceType":"module"}