{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar SWITCH_FOLLOW = \"SWITCH_FOLLOW\";\nvar SET_USERS = \"SET_USERS\";\nvar SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nvar SET_TOTAL_PAGE_COUNT = \"SET_TOTAL_PAGE_COUNT\";\nvar TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\nvar TOGGLE_PROGRESS = \"TOGGLE_PROGRESS\";\nvar initialState = {\n  usersData: [],\n  pageSize: 10,\n  currentPage: 1,\n  pageCount: 300,\n  isFetching: true,\n  toggleProgressArr: []\n};\n\nvar users_reducer = function users_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SWITCH_FOLLOW:\n      {\n        return _objectSpread({}, state, {\n          usersData: state.usersData.map(function (u) {\n            if (u.id === action.userId) {\n              return _objectSpread({}, u, {\n                followed: !u.followed\n              });\n            }\n\n            return u;\n          })\n        });\n        return state;\n      }\n\n    case SET_USERS:\n      {\n        return _objectSpread({}, state, {\n          usersData: _toConsumableArray(action.users)\n        });\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case SET_TOTAL_PAGE_COUNT:\n      {\n        return _objectSpread({}, state, {\n          pageCount: action.count\n        });\n      }\n\n    case TOGGLE_FETCHING:\n      {\n        return _objectSpread({}, state, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case TOGGLE_PROGRESS:\n      {\n        return _objectSpread({}, state, {\n          toggleProgressArr: state.isFetching ? state.toggleProgressArr.filter(function (id) {\n            if (id !== action.id) return id;\n          }) : [].concat(_toConsumableArray(state.toggleProgressArr), [action.id])\n        });\n      }\n  }\n\n  return state;\n};\n\nexport var switch_follow = function switch_follow(userId) {\n  return {\n    type: SWITCH_FOLLOW,\n    userId: userId\n  };\n};\nexport var setUsers = function setUsers(users) {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport var setCurrentPage = function setCurrentPage(currentPage) {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage: currentPage\n  };\n};\nexport var setPageCount = function setPageCount(count) {\n  return {\n    type: SET_TOTAL_PAGE_COUNT,\n    count: count\n  };\n};\nexport var toggleIsFetching = function toggleIsFetching(isFetching) {\n  return {\n    type: TOGGLE_FETCHING,\n    isFetching: isFetching\n  };\n};\nexport var toggleProgress = function toggleProgress(id) {\n  return {\n    type: TOGGLE_PROGRESS,\n    id: id\n  };\n};\nexport default users_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/users_reducer.js"],"names":["SWITCH_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_PAGE_COUNT","TOGGLE_FETCHING","TOGGLE_PROGRESS","initialState","usersData","pageSize","currentPage","pageCount","isFetching","toggleProgressArr","users_reducer","state","action","type","map","u","id","userId","followed","users","count","filter","switch_follow","setUsers","setCurrentPage","setPageCount","toggleIsFetching","toggleProgress"],"mappings":"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","sourcesContent":["const SWITCH_FOLLOW = \"SWITCH_FOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_PAGE_COUNT = \"SET_TOTAL_PAGE_COUNT\";\r\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\r\nconst TOGGLE_PROGRESS = \"TOGGLE_PROGRESS\";\r\n\r\nlet initialState = {\r\n    usersData: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    pageCount: 300,\r\n    isFetching: true,\r\n    toggleProgressArr: []\r\n}\r\n\r\nlet users_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SWITCH_FOLLOW: {\r\n\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map( u => {\r\n                        if(u.id === action.userId){\r\n                            return {...u, followed: !u.followed}\r\n                        }\r\n                        return u\r\n                    })\r\n                }\r\n\r\n            return state\r\n\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, usersData: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_PAGE_COUNT: {\r\n            return { ...state, pageCount: action.count}\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                toggleProgressArr: state.isFetching\r\n                    ? state.toggleProgressArr.filter(id => {if (id !== action.id) return id})\r\n                    : [...state.toggleProgressArr, action.id]\r\n            }\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport const switch_follow = (userId) => ({type: SWITCH_FOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setPageCount = (count) => ({type: SET_TOTAL_PAGE_COUNT, count});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_FETCHING, isFetching});\r\nexport const toggleProgress = (id) => ({type: TOGGLE_PROGRESS, id});\r\n\r\nexport default users_reducer"]},"metadata":{},"sourceType":"module"}