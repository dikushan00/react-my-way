{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Users\\\\Users.tsx\";\n\nimport React, { useEffect } from 'react';\nimport Paginator from '../common/paginator/Paginator';\nimport Preloader from '../common/Preloader/Preloader';\nimport UserItem from './UserItem';\nimport UsersSearchForm from './UsersSearchForm';\nimport { getUsers } from '../../redux/users_reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport * as queryString from \"querystring\";\n\nvar Users = function Users(props) {\n  var dispatch = useDispatch();\n  var filter = useSelector(function (state) {\n    return state.usersPage.filter;\n  });\n  var history = useHistory();\n  useEffect(function () {\n    var parsetURI = queryString.parse(history.location.search.substr(1));\n    var actualPage = props.currentPage;\n    var actualFilter = filter;\n    if (parsetURI.page) actualPage = Number(parsetURI.page);\n    if (parsetURI.term) actualFilter = _objectSpread({}, actualFilter, {\n      term: parsetURI.term\n    });\n\n    switch (parsetURI.friend) {\n      case \"null\":\n        {\n          actualFilter = _objectSpread({}, actualFilter, {\n            friends: null\n          });\n          break;\n        }\n\n      case \"true\":\n        {\n          actualFilter = _objectSpread({}, actualFilter, {\n            friends: true\n          });\n          break;\n        }\n\n      case \"false\":\n        {\n          actualFilter = _objectSpread({}, actualFilter, {\n            friends: false\n          });\n          break;\n        }\n    }\n\n    dispatch(getUsers(actualPage, props.pageSize, actualFilter));\n  }, []);\n  useEffect(function () {\n    history.push({\n      pathname: '/users',\n      search: \"term=\".concat(filter.term, \"&friend=\").concat(filter.friends, \"&page=\").concat(props.currentPage)\n    });\n  }, [filter, props.currentPage]);\n\n  var pageEvent = function pageEvent(p) {\n    dispatch(getUsers(p, props.pageSize, filter));\n  };\n\n  var onFilterChanged = function onFilterChanged(filter) {\n    dispatch(getUsers(props.currentPage, props.pageSize, filter));\n  };\n\n  var switch_follow = function switch_follow(followed, userId) {\n    if (followed) {\n      props.unfollow(userId);\n    } else {\n      props.follow(userId);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(UsersSearchForm, {\n    onFilterChanged: onFilterChanged,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    currentPage: props.currentPage,\n    pageCount: props.pageCount,\n    pageSize: props.pageSize,\n    pageEvent: pageEvent,\n    portionSize: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }) : props.users.map(function (user) {\n    return /*#__PURE__*/React.createElement(UserItem, {\n      user: user,\n      switch_follow: switch_follow,\n      toggleProgressArr: props.toggleProgressArr,\n      key: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    });\n  }));\n};\n\nexport default Users;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Users/Users.tsx"],"names":["React","useEffect","Paginator","Preloader","UserItem","UsersSearchForm","getUsers","useDispatch","useSelector","useHistory","queryString","Users","props","dispatch","filter","state","usersPage","history","parsetURI","parse","location","search","substr","actualPage","currentPage","actualFilter","page","Number","term","friend","friends","pageSize","push","pathname","pageEvent","p","onFilterChanged","switch_follow","followed","userId","unfollow","follow","pageCount","isFetching","users","map","user","toggleProgressArr","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport style from './Users.module.css'\r\nimport Paginator from '../common/paginator/Paginator';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport UserItem from './UserItem'\r\nimport { UserType } from '../../Types/Types';\r\nimport UsersSearchForm from './UsersSearchForm';\r\nimport { FilterType, getUsers } from '../../redux/users_reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/store-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as queryString from \"querystring\";\r\n\r\nconst Users: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const filter = useSelector((state: AppStateType) => state.usersPage.filter)\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n\r\n        const parsetURI = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = props.currentPage\r\n        let actualFilter = filter\r\n        if(parsetURI.page) actualPage = Number(parsetURI.page)\r\n\r\n        if(parsetURI.term) actualFilter = {...actualFilter, term: parsetURI.term as string}\r\n\r\n        switch (parsetURI.friend) {\r\n            case \"null\": {\r\n                actualFilter = {...actualFilter, friends: null}\r\n                break\r\n            }\r\n            case \"true\": {\r\n                actualFilter = {...actualFilter, friends: true}\r\n                break\r\n            }\r\n            case \"false\": {\r\n                actualFilter = {...actualFilter, friends: false}\r\n                break\r\n            }\r\n        }\r\n\r\n        dispatch(getUsers(actualPage, props.pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        history.push({\r\n            pathname: '/users',\r\n            search: `term=${filter.term}&friend=${filter.friends}&page=${props.currentPage}`\r\n        })\r\n    }, [filter, props.currentPage])\r\n\r\n    const pageEvent = (p: number) => {\r\n        dispatch(getUsers( p, props.pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(getUsers( props.currentPage, props.pageSize, filter))\r\n    }\r\n\r\n    const switch_follow = (followed: boolean, userId: number) => {\r\n        if (followed) {\r\n            props.unfollow(userId)\r\n        } else {\r\n            props.follow(userId)\r\n        }\r\n    }\r\n\r\n    return <div>\r\n\r\n        <UsersSearchForm onFilterChanged = {onFilterChanged}/>\r\n\r\n        <Paginator \r\n            currentPage = {props.currentPage}\r\n            pageCount = {props.pageCount}\r\n            pageSize = {props.pageSize}\r\n            pageEvent = {pageEvent}\r\n            portionSize = {10}/>\r\n\r\n        { props.isFetching \r\n            ? <Preloader /> \r\n            : props.users.map(user =>\r\n                <UserItem user = {user} switch_follow = {switch_follow} toggleProgressArr = {props.toggleProgressArr} key = {user.id}/> \r\n        )}\r\n    </div>\r\n}\r\n\r\nexport default Users\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    isFetching: boolean\r\n    toggleProgressArr: Array<number>\r\n    currentPage: number\r\n    pageCount: number\r\n    pageSize: number\r\n\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\ntype QueryParamsType = {\r\n    friend?: boolean | string\r\n    term?: string\r\n    page?: string\r\n}"]},"metadata":{},"sourceType":"module"}