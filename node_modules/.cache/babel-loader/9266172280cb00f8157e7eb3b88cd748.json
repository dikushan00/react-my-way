{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\DropzoneAva.tsx\";\n\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport s from './ProfileInfo.module.css';\n\nvar DropzoneAva = function DropzoneAva(_ref) {\n  var setIsLoadImg = _ref.setIsLoadImg,\n      setSrc = _ref.setSrc;\n\n  var handleDrop = function handleDrop(files, rejectedFiles) {\n    if (files && files.length > 0) {\n      setIsLoadImg(true);\n      var reader = new FileReader();\n      reader.addEventListener('load', function () {\n        return setSrc(reader.result);\n      });\n      reader.readAsDataURL(files[0]);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: handleDrop,\n    multiple: true,\n    maxSize: 8000000,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  }, function (_ref2) {\n    var getRootProps = _ref2.getRootProps,\n        getInputProps = _ref2.getInputProps;\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      className: s.dropzone,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"Drop files here, or click to select files\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    })));\n  });\n};\n\nexport default DropzoneAva;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Profile/ProfileInfo/DropzoneAva.tsx"],"names":["React","Dropzone","s","DropzoneAva","setIsLoadImg","setSrc","handleDrop","files","rejectedFiles","length","reader","FileReader","addEventListener","result","readAsDataURL","getRootProps","getInputProps","dropzone"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAQC,CAAR,MAAe,0BAAf;;AAEA,IAAMC,WAAgC,GAAG,SAAnCA,WAAmC,OAA4B;AAAA,MAA1BC,YAA0B,QAA1BA,YAA0B;AAAA,MAAZC,MAAY,QAAZA,MAAY;;AAEjE,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAaC,aAAb,EAAoC;AACnD,QAAGD,KAAK,IAAIA,KAAK,CAACE,MAAN,GAAe,CAA3B,EAA6B;AACzBL,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMM,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC;AAAA,eAC5BP,MAAM,CAAEK,MAAM,CAACG,MAAT,CADsB;AAAA,OAAhC;AAGAH,MAAAA,MAAM,CAACI,aAAP,CAAqBP,KAAK,CAAC,CAAD,CAA1B;AACH;AACJ,GATD;;AAWA,sBAAO,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAED,UAAlB;AAA8B,IAAA,QAAQ,MAAtC;AAAuC,IAAA,OAAO,EAAE,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AAAA,QAAGS,YAAH,SAAGA,YAAH;AAAA,QAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,wBACG,6CAASD,YAAY,EAArB;AAAyB,MAAA,SAAS,EAAIb,CAAC,CAACe,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,eAEI,+CAAWD,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,CADH;AAAA,GADE,CAAP;AASH,CAtBD;;AAwBA,eAAeb,WAAf","sourcesContent":["import React from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport  s from './ProfileInfo.module.css'\r\n\r\nconst DropzoneAva: React.FC<PropsType> = ({setIsLoadImg, setSrc}) => {\r\n\r\n    const handleDrop = (files: any, rejectedFiles: any) => {\r\n        if(files && files.length > 0){\r\n            setIsLoadImg(true)\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () =>\r\n                setSrc( reader.result )\r\n            );\r\n            reader.readAsDataURL(files[0]);\r\n        }\r\n    }\r\n\r\n    return <Dropzone onDrop={handleDrop} multiple maxSize={8000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n            <div {...getRootProps()} className = {s.dropzone}>\r\n                <p>Drop files here, or click to select files</p>\r\n                <input {...getInputProps()} />\r\n            </div>\r\n        )}\r\n  </Dropzone>\r\n\r\n}\r\n\r\nexport default DropzoneAva\r\n\r\n\r\ntype PropsType = {\r\n    setIsLoadImg: (b: boolean) => void\r\n    setSrc: (url: string | ArrayBuffer | null) => void\r\n}"]},"metadata":{},"sourceType":"module"}