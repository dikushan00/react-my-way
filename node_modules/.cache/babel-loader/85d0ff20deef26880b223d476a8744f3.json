{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.tsx\";\n\nimport React from 'react';\nimport { actions } from \"../../redux/dialogs_reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { reset } from \"redux-form\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\nimport { withRouter } from 'react-router-dom';\n\nvar DialogsContainer = function DialogsContainer(props) {\n  return /*#__PURE__*/React.createElement(Dialogs, {\n    state: props.state,\n    addMessage: props.addMessage,\n    reset: props.reset,\n    userId: props.match.params.userId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.dialogPage\n  };\n};\n\nexport default compose(withAuthRedirect, connect(mapStateToProps, {\n  addMessage: actions.addMessage,\n  reset: reset\n}), withRouter)(DialogsContainer);","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Dialogs/DialogsContainer.tsx"],"names":["React","actions","Dialogs","connect","reset","compose","withAuthRedirect","withRouter","DialogsContainer","props","state","addMessage","match","params","userId","mapStateToProps","dialogPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAiCC,OAAjC,QAA+C,6BAA/C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,QAAoB,YAApB;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAcA,IAAMC,gBAAqC,GAAG,SAAxCA,gBAAwC,CAACC,KAAD,EAAW;AAErD,sBAAO,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAIA,KAAK,CAACC,KAAxB;AAA+B,IAAA,UAAU,EAAID,KAAK,CAACE,UAAnD;AAA+D,IAAA,KAAK,EAAIF,KAAK,CAACL,KAA9E;AAAqF,IAAA,MAAM,EAAIK,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,MAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH,CAHD;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAyB;AAE7C,SAAO;AACHA,IAAAA,KAAK,EAAEA,KAAK,CAACM;AADV,GAAP;AAGH,CALD;;AAQA,eAAeX,OAAO,CAClBC,gBADkB,EAElBH,OAAO,CAACY,eAAD,EAAkB;AAACJ,EAAAA,UAAU,EAAEV,OAAO,CAACU,UAArB;AAAiCP,EAAAA,KAAK,EAALA;AAAjC,CAAlB,CAFW,EAGlBG,UAHkB,CAAP,CAIbC,gBAJa,CAAf","sourcesContent":["import React from 'react';\r\nimport {DialogsInitialStateType, actions} from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from \"redux-form\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\ntype PropsType = {\r\n    state: DialogsInitialStateType\r\n    addMessage: (id: number, str: string) => void\r\n    reset: (form: string) => void\r\n    match: {\r\n        params: {\r\n            userId: number\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer: React.FC<PropsType> = (props) => {\r\n\r\n    return <Dialogs state = {props.state} addMessage = {props.addMessage} reset = {props.reset} userId = {props.match.params.userId}/>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n\r\n    return {\r\n        state: state.dialogPage\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {addMessage: actions.addMessage, reset}),\r\n    withRouter\r\n)(DialogsContainer)"]},"metadata":{},"sourceType":"module"}