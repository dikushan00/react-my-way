{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Profile\\\\ProfileContainer.tsx\";\n\nimport React, { useEffect } from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { check_auth, getStatus, updateStatus, updatePhoto, saveProfile } from \"../../redux/profile_reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\nimport { follow, unfollow } from './../../redux/users_reducer';\n\nvar ProfileContainer = function ProfileContainer(props) {\n  var refreshProfile = function refreshProfile() {\n    var userId = +props.match.params.userId;\n    if (!userId) userId = props.authId;\n    props.check_auth(userId);\n    props.getStatus(userId);\n  };\n\n  useEffect(function () {\n    refreshProfile();\n  }, [props.match.params.userId]);\n  return /*#__PURE__*/React.createElement(Profile, {\n    state: props.state,\n    isOwner: !props.match.params.userId,\n    status: props.status,\n    updateStatus: props.updateStatus,\n    updatePhoto: props.updatePhoto,\n    saveProfile: props.saveProfile,\n    follow: props.follow,\n    unfollow: props.unfollow,\n    friends: props.friends,\n    toggleProgressArr: props.toggleProgressArr,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.profilePage,\n    status: state.profilePage.status,\n    authId: state.auth.id,\n    isAuth: state.auth.isAuth,\n    friends: state.usersPage.friends,\n    toggleProgressArr: state.usersPage.toggleProgressArr\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  check_auth: check_auth,\n  getStatus: getStatus,\n  updateStatus: updateStatus,\n  updatePhoto: updatePhoto,\n  saveProfile: saveProfile,\n  follow: follow,\n  unfollow: unfollow\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Profile/ProfileContainer.tsx"],"names":["React","useEffect","Profile","connect","check_auth","getStatus","updateStatus","updatePhoto","saveProfile","withRouter","compose","withAuthRedirect","follow","unfollow","ProfileContainer","props","refreshProfile","userId","match","params","authId","state","status","friends","toggleProgressArr","mapStateToProps","profilePage","auth","id","isAuth","usersPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6CC,WAA7C,EAA0DC,WAA1D,QAAqG,6BAArG;AACA,SAAQC,UAAR,QAA8C,kBAA9C;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;AAGA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,6BAAjC;;AAEA,IAAMC,gBAA4E,GAAG,SAA/EA,gBAA+E,CAACC,KAAD,EAAW;AAE5F,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,QAAIC,MAAqB,GAAG,CAACF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,MAAhD;AACA,QAAI,CAACA,MAAL,EAAaA,MAAM,GAAGF,KAAK,CAACK,MAAf;AACbL,IAAAA,KAAK,CAACX,UAAN,CAAiBa,MAAjB;AACAF,IAAAA,KAAK,CAACV,SAAN,CAAgBY,MAAhB;AACH,GALD;;AAOAhB,EAAAA,SAAS,CAAC,YAAM;AACZe,IAAAA,cAAc;AACjB,GAFQ,EAEN,CAACD,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,MAApB,CAFM,CAAT;AAII,sBACI,oBAAC,OAAD;AACI,IAAA,KAAK,EAAEF,KAAK,CAACM,KADjB;AAEI,IAAA,OAAO,EAAE,CAACN,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,MAFjC;AAGI,IAAA,MAAM,EAAIF,KAAK,CAACO,MAHpB;AAII,IAAA,YAAY,EAAEP,KAAK,CAACT,YAJxB;AAKI,IAAA,WAAW,EAAES,KAAK,CAACR,WALvB;AAMI,IAAA,WAAW,EAAEQ,KAAK,CAACP,WANvB;AAOI,IAAA,MAAM,EAAIO,KAAK,CAACH,MAPpB;AAQI,IAAA,QAAQ,EAAIG,KAAK,CAACF,QARtB;AASI,IAAA,OAAO,EAAIE,KAAK,CAACQ,OATrB;AAUI,IAAA,iBAAiB,EAAIR,KAAK,CAACS,iBAV/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAaP,CA1BD;;AA4BA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD;AAAA,SAA0B;AAC5CA,IAAAA,KAAK,EAAEA,KAAK,CAACK,WAD+B;AAE5CJ,IAAAA,MAAM,EAAED,KAAK,CAACK,WAAN,CAAkBJ,MAFkB;AAG5CF,IAAAA,MAAM,EAAEC,KAAK,CAACM,IAAN,CAAWC,EAHyB;AAI5CC,IAAAA,MAAM,EAAER,KAAK,CAACM,IAAN,CAAWE,MAJyB;AAK5CN,IAAAA,OAAO,EAAEF,KAAK,CAACS,SAAN,CAAgBP,OALmB;AAM5CC,IAAAA,iBAAiB,EAAEH,KAAK,CAACS,SAAN,CAAgBN;AANS,GAA1B;AAAA,CAAtB;;AASA,eAAed,OAAO,CAClBP,OAAO,CAACsB,eAAD,EAAkB;AACrBrB,EAAAA,UAAU,EAAVA,UADqB;AAErBC,EAAAA,SAAS,EAATA,SAFqB;AAGrBC,EAAAA,YAAY,EAAZA,YAHqB;AAIrBC,EAAAA,WAAW,EAAXA,WAJqB;AAKrBC,EAAAA,WAAW,EAAXA,WALqB;AAMrBI,EAAAA,MAAM,EAANA,MANqB;AAOrBC,EAAAA,QAAQ,EAARA;AAPqB,CAAlB,CADW,EASlBJ,UATkB,EAUlBE,gBAVkB,CAAP,CAWbG,gBAXa,CAAf","sourcesContent":["import React, { PureComponent, useEffect } from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {check_auth, getStatus, updateStatus, updatePhoto, saveProfile, ProfileInitialStateType} from \"../../redux/profile_reducer\";\r\nimport {withRouter, RouteComponentProps} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\"\r\nimport { AppStateType } from '../../redux/store-redux';\r\nimport {ProfileType, SaveProfileType, UserType} from '../../Types/Types';\r\nimport { follow, unfollow } from './../../redux/users_reducer';\r\n\r\nconst ProfileContainer:React.FC<PropsType & RouteComponentProps<RouteParamsProps>> = (props) => {\r\n\r\n    const refreshProfile = () => {\r\n        let userId: number | null = +props.match.params.userId;\r\n        if (!userId) userId = props.authId\r\n        props.check_auth(userId)\r\n        props.getStatus(userId)\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshProfile();\r\n    }, [props.match.params.userId])\r\n\r\n        return (\r\n            <Profile \r\n                state={props.state} \r\n                isOwner={!props.match.params.userId}\r\n                status = {props.status}\r\n                updateStatus={props.updateStatus} \r\n                updatePhoto={props.updatePhoto}\r\n                saveProfile={props.saveProfile}\r\n                follow = {props.follow}\r\n                unfollow = {props.unfollow}\r\n                friends = {props.friends}\r\n                toggleProgressArr = {props.toggleProgressArr}/>\r\n        )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    state: state.profilePage,\r\n    status: state.profilePage.status,\r\n    authId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    friends: state.usersPage.friends,\r\n    toggleProgressArr: state.usersPage.toggleProgressArr\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        check_auth, \r\n        getStatus, \r\n        updateStatus, \r\n        updatePhoto, \r\n        saveProfile,\r\n        follow,\r\n        unfollow}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\ntype PropsType = {\r\n    authId: number\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    status: string\r\n    state: ProfileInitialStateType\r\n    friends: Array<UserType>\r\n    toggleProgressArr: Array<number>\r\n\r\n    updateStatus: () => void\r\n    updatePhoto: (file: File) => void\r\n    saveProfile: (data: SaveProfileType) => Promise<SaveProfileType>\r\n    check_auth: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    unfollow: (userId: number | null) => void\r\n    follow: (userId: number | null) => void\r\n}\r\n\r\ntype RouteParamsProps = {\r\n    userId: string \r\n}"]},"metadata":{},"sourceType":"module"}