{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfileStatusWithHooks.tsx\";\n\nimport React, { useEffect, useState } from 'react';\n\nvar ProfileStatusWithHooks = function ProfileStatusWithHooks(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var _useState3 = useState(props.status),\n      _useState4 = _slicedToArray(_useState3, 2),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  useEffect(function () {\n    setStatus(props.status);\n  }, [props.status]);\n\n  var toggleEditMode = function toggleEditMode() {\n    setEditMode(!editMode);\n    if (editMode) props.updateStatus(status);\n  };\n\n  var onStatusChange = function onStatusChange(e) {\n    setStatus(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }\n  }, editMode ? /*#__PURE__*/React.createElement(\"input\", {\n    onChange: onStatusChange,\n    autoFocus: true,\n    onBlur: toggleEditMode,\n    type: \"text\",\n    value: status,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    onDoubleClick: toggleEditMode,\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, status || 'Напишите немного о себе'));\n};\n\nexport default ProfileStatusWithHooks;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx"],"names":["React","useEffect","useState","ProfileStatusWithHooks","props","editMode","setEditMode","status","setStatus","toggleEditMode","updateStatus","onStatusChange","e","target","value","cursor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAsD,OAAtD;;AAEA,IAAMC,sBAA2C,GAAG,SAA9CA,sBAA8C,CAACC,KAAD,EAAW;AAAA,kBAE3BF,QAAQ,CAAC,KAAD,CAFmB;AAAA;AAAA,MAEpDG,QAFoD;AAAA,MAE1CC,WAF0C;;AAAA,mBAG/BJ,QAAQ,CAACE,KAAK,CAACG,MAAP,CAHuB;AAAA;AAAA,MAGpDA,MAHoD;AAAA,MAG5CC,SAH4C;;AAK3DP,EAAAA,SAAS,CAAE,YAAM;AACbO,IAAAA,SAAS,CAACJ,KAAK,CAACG,MAAP,CAAT;AACH,GAFQ,EAEN,CAACH,KAAK,CAACG,MAAP,CAFM,CAAT;;AAIA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzBH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACA,QAAIA,QAAJ,EAAcD,KAAK,CAACM,YAAN,CAAmBH,MAAnB;AACjB,GAHD;;AAKA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAsC;AACzDJ,IAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAFD;;AAIA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDT,QAAQ,gBACJ;AAAO,IAAA,QAAQ,EAAEM,cAAjB;AAAiC,IAAA,SAAS,EAAE,IAA5C;AAAkD,IAAA,MAAM,EAAEF,cAA1D;AAA0E,IAAA,IAAI,EAAC,MAA/E;AAAsF,IAAA,KAAK,EAAEF,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,gBAEJ;AAAM,IAAA,aAAa,EAAEE,cAArB;AAAqC,IAAA,KAAK,EAAI;AAACM,MAAAA,MAAM,EAAE;AAAT,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoER,MAAM,IAAI,yBAA9E,CAHH,CAAP;AAKH,CAvBD;;AAyBA,eAAeJ,sBAAf","sourcesContent":["import React, {useEffect, useState, ChangeEvent} from 'react';\r\n\r\nconst ProfileStatusWithHooks: React.FC<PropsType> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status] )\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!editMode)\r\n        if (editMode) props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return <div>\r\n        { editMode\r\n            ? <input onChange={onStatusChange} autoFocus={true} onBlur={toggleEditMode} type=\"text\" value={status}/>\r\n            : <span onDoubleClick={toggleEditMode} style = {{cursor: \"pointer\"}}>{status || 'Напишите немного о себе'}</span>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    updateStatus: (text: string) => void\r\n}"]},"metadata":{},"sourceType":"module"}