{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Users\\\\Users.tsx\";\n\nimport React, { useEffect } from 'react';\nimport Paginator from '../common/paginator/Paginator';\nimport Preloader from '../common/Preloader/Preloader';\nimport UserItem from './UserItem';\nimport UsersSearchForm from './UsersSearchForm';\nimport { getUsers, unfollow, follow } from '../../redux/users_reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport * as queryString from \"querystring\";\n\nvar Users = function Users(props) {\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var filter = useSelector(function (state) {\n    return state.usersPage.filter;\n  });\n  var pageSize = useSelector(function (state) {\n    return state.usersPage.pageSize;\n  });\n  var pageCount = useSelector(function (state) {\n    return state.usersPage.pageCount;\n  });\n  var currentPage = useSelector(function (state) {\n    return state.usersPage.currentPage;\n  });\n  var users = useSelector(function (state) {\n    return state.usersPage.usersData;\n  });\n  var isFetching = useSelector(function (state) {\n    return state.usersPage.isFetching;\n  });\n  var toggleProgressArr = useSelector(function (state) {\n    return state.usersPage.toggleProgressArr;\n  });\n  useEffect(function () {\n    var parsetURI = queryString.parse(history.location.search.substr(1));\n    var actualPage = currentPage;\n    var actualFilter = filter;\n    if (parsetURI.page) actualPage = Number(parsetURI.page);\n    if (parsetURI.term) actualFilter = _objectSpread({}, actualFilter, {\n      term: parsetURI.term\n    });\n\n    switch (parsetURI.friend) {\n      case \"null\":\n        {\n          actualFilter = _objectSpread({}, actualFilter, {\n            friends: null\n          });\n          break;\n        }\n\n      case \"true\":\n        {\n          actualFilter = _objectSpread({}, actualFilter, {\n            friends: true\n          });\n          break;\n        }\n\n      case \"false\":\n        {\n          actualFilter = _objectSpread({}, actualFilter, {\n            friends: false\n          });\n          break;\n        }\n    }\n\n    dispatch(getUsers(actualPage, pageSize, actualFilter));\n  }, []);\n  useEffect(function () {\n    var query = {};\n    if (filter.term) query.term = filter.term;\n    if (filter.friends !== null) query.friend = String(filter.friends);\n    if (currentPage !== 1) query.page = String(currentPage);\n    history.push({\n      pathname: '/users',\n      search: queryString.stringify(query)\n    });\n  }, [filter, currentPage]);\n\n  var pageEvent = function pageEvent(p) {\n    dispatch(getUsers(p, pageSize, filter));\n  };\n\n  var onFilterChanged = function onFilterChanged(filter) {\n    dispatch(getUsers(currentPage, pageSize, filter));\n  };\n\n  var switch_follow = function switch_follow(followed, userId) {\n    if (followed) {\n      dispatch(unfollow(userId));\n    } else {\n      dispatch(follow(userId));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(UsersSearchForm, {\n    onFilterChanged: onFilterChanged,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Paginator, {\n    currentPage: currentPage,\n    pageCount: pageCount,\n    pageSize: pageSize,\n    pageEvent: pageEvent,\n    portionSize: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }) : users.map(function (user) {\n    return /*#__PURE__*/React.createElement(UserItem, {\n      user: user,\n      switch_follow: switch_follow,\n      toggleProgressArr: toggleProgressArr,\n      key: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    });\n  }));\n};\n\nexport default Users;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Users/Users.tsx"],"names":["React","useEffect","Paginator","Preloader","UserItem","UsersSearchForm","getUsers","unfollow","follow","useDispatch","useSelector","useHistory","queryString","Users","props","dispatch","history","filter","state","usersPage","pageSize","pageCount","currentPage","users","usersData","isFetching","toggleProgressArr","parsetURI","parse","location","search","substr","actualPage","actualFilter","page","Number","term","friend","friends","query","String","push","pathname","stringify","pageEvent","p","onFilterChanged","switch_follow","followed","userId","map","user","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport style from './Users.module.css'\r\nimport Paginator from '../common/paginator/Paginator';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport UserItem from './UserItem'\r\nimport UsersSearchForm from './UsersSearchForm';\r\nimport { FilterType, getUsers, unfollow, follow } from '../../redux/users_reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/store-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as queryString from \"querystring\";\r\n\r\nconst Users: React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const filter = useSelector((state: AppStateType) => state.usersPage.filter)\r\n    const pageSize = useSelector((state: AppStateType) => state.usersPage.pageSize)\r\n    const pageCount = useSelector((state: AppStateType) => state.usersPage.pageCount)\r\n    const currentPage = useSelector((state: AppStateType) => state.usersPage.currentPage)\r\n    const users = useSelector((state: AppStateType) => state.usersPage.usersData)\r\n    const isFetching = useSelector((state: AppStateType) => state.usersPage.isFetching)\r\n    const toggleProgressArr = useSelector((state: AppStateType) => state.usersPage.toggleProgressArr)\r\n\r\n    useEffect(() => {\r\n\r\n        const parsetURI = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n        if(parsetURI.page) actualPage = Number(parsetURI.page)\r\n\r\n        if(parsetURI.term) actualFilter = {...actualFilter, term: parsetURI.term as string}\r\n\r\n        switch (parsetURI.friend) {\r\n            case \"null\": {\r\n                actualFilter = {...actualFilter, friends: null}\r\n                break\r\n            }\r\n            case \"true\": {\r\n                actualFilter = {...actualFilter, friends: true}\r\n                break\r\n            }\r\n            case \"false\": {\r\n                actualFilter = {...actualFilter, friends: false}\r\n                break\r\n            }\r\n        }\r\n\r\n        dispatch(getUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        const query: QueryParamsType = {}\r\n\r\n        if(filter.term) query.term = filter.term\r\n        if(filter.friends !== null) query.friend = String(filter.friends)\r\n        if(currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const pageEvent = (p: number) => {\r\n        dispatch(getUsers( p, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(getUsers( currentPage, pageSize, filter))\r\n    }\r\n\r\n    const switch_follow = (followed: boolean, userId: number) => {\r\n        if (followed) {\r\n            dispatch(unfollow(userId))\r\n        } else {\r\n            dispatch(follow(userId))\r\n        }\r\n    }\r\n\r\n    return <div>\r\n\r\n        <UsersSearchForm onFilterChanged = {onFilterChanged}/>\r\n\r\n        <Paginator \r\n            currentPage = {currentPage}\r\n            pageCount = {pageCount}\r\n            pageSize = {pageSize}\r\n            pageEvent = {pageEvent}\r\n            portionSize = {10}/>\r\n\r\n        { isFetching \r\n            ? <Preloader /> \r\n            : users.map(user =>\r\n                <UserItem user = {user} switch_follow = {switch_follow} toggleProgressArr = {toggleProgressArr} key = {user.id}/> \r\n        )}\r\n    </div>\r\n}\r\n\r\nexport default Users\r\n\r\n\r\ntype PropsType = {\r\n}\r\ntype QueryParamsType = {\r\n    friend?: boolean | string\r\n    term?: string\r\n    page?: string\r\n}"]},"metadata":{},"sourceType":"module"}