{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfilInfo.tsx\",\n    _this3 = this;\n\nimport React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport photoUser from \"../../../img/user.svg\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport { ProfileDataFormRedux } from \"./ProfileDataForm\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { getCroppedImg, base64StringtoFile, downloadCroppedImg } from '../../utils/Validators/cropImgFunctions';\n\nvar ProfileInfo = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ProfileInfo, _React$PureComponent);\n\n  function ProfileInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProfileInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProfileInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editMode: false,\n      src: null,\n      crop: {\n        unit: '%',\n        width: 30,\n        height: 30,\n        x: 0,\n        y: 0,\n        aspect: 1 / 1\n      },\n      croppedImageUrl: '',\n      isLoadImg: true\n    };\n    _this.inputRef = React.createRef();\n\n    _this.onInputPhoto = function (e) {\n      if (e.target.files.length && e.target.files.length > 0) {\n        _this.setState({\n          isLoadImg: true\n        });\n\n        var reader = new FileReader();\n        reader.addEventListener('load', function () {\n          return _this.setState({\n            src: reader.result\n          });\n        });\n        reader.readAsDataURL(e.target.files[0]);\n      }\n    };\n\n    _this.onImageLoaded = function (image) {\n      _this.imageRef = image;\n    };\n\n    _this.onCropComplete = function (crop, percentCrop) {\n      _this.makeClientCrop(crop);\n    };\n\n    _this.onCropChange = function (crop, percentCrop) {\n      _this.setState({\n        crop: crop\n      });\n    };\n\n    _this.onSubmit = function (data) {\n      _this.props.saveProfile(data).then(function () {\n        _this.setState({\n          editMode: false\n        });\n      });\n    };\n\n    _this.updatePhotoCrop = function (url) {\n      var reader = new FileReader(); //@ts-ignore\n\n      reader.readAsDataURL(_this.state.croppedImageUrl);\n\n      reader.onload = function () {\n        var myFilename = \"previewFile.jpg\"; //@ts-ignore\n\n        var myNewCroppedFile = base64StringtoFile(reader.result, myFilename); //@ts-ignore\n\n        myNewCroppedFile && this.props.updatePhoto(myNewCroppedFile);\n      };\n\n      downloadCroppedImg(url); //const imageData64 = this.imageRef.src.toString(64)\n\n      _this.setState({\n        isLoadImg: false\n      });\n\n      _this.refreshInputArea();\n    };\n\n    _this.refreshInputArea = function () {\n      _this.setState({\n        src: null,\n        croppedImageUrl: '',\n        isLoadImg: true\n      }); //@ts-ignore\n\n\n      _this.inputRef.current.value = null;\n    };\n\n    return _this;\n  }\n\n  _createClass(ProfileInfo, [{\n    key: \"makeClientCrop\",\n    value: function () {\n      var _makeClientCrop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(crop) {\n        var croppedImageUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.imageRef && crop.width && crop.height)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return getCroppedImg(this.imageRef, crop, 'newFile.jpeg');\n\n              case 3:\n                croppedImageUrl = _context.sent;\n                this.setState({\n                  croppedImageUrl: croppedImageUrl\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function makeClientCrop(_x) {\n        return _makeClientCrop.apply(this, arguments);\n      }\n\n      return makeClientCrop;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          crop = _this$state.crop,\n          croppedImageUrl = _this$state.croppedImageUrl,\n          src = _this$state.src;\n\n      if (!this.props.profile) {\n        return /*#__PURE__*/React.createElement(Preloader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: s.descriptionBlock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.props.profile.photos.large || photoUser,\n        alt: \"photo\",\n        className: s.avaImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 28\n        }\n      }, this.props.profile.fullName || 'unknown user ')), /*#__PURE__*/React.createElement(ProfileStatusWithHooks, {\n        status: this.props.status,\n        updateStatus: this.props.updateStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }\n      })), this.props.isOwner && /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        ref: this.inputRef,\n        onChange: this.onInputPhoto,\n        className: s.inputPhoto,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 44\n        }\n      })), src && this.state.isLoadImg && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(ReactCrop, {\n        src: src,\n        crop: crop,\n        ruleOfThirds: true,\n        onImageLoaded: this.onImageLoaded,\n        onComplete: this.onCropComplete,\n        onChange: this.onCropChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }), croppedImageUrl && /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Crop\",\n        style: {\n          maxWidth: '100%'\n        },\n        src: croppedImageUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.updatePhotoCrop(_this2.state.croppedImageUrl);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, \"Send\")), this.state.editMode //@ts-ignore\n      ?\n      /*#__PURE__*/\n      React.createElement(ProfileDataFormRedux, {\n        initialValues: props.profile,\n        profile: props.profile,\n        onSubmit: onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(ProfileData, {\n        profile: this.props.profile,\n        onEditMode: function onEditMode() {\n          return _this2.setState({\n            editMode: true\n          });\n        },\n        isOwner: this.props.isOwner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 23\n        }\n      })));\n    }\n  }]);\n\n  return ProfileInfo;\n}(React.PureComponent);\n\nvar Contact = function Contact(_ref) {\n  var contactTitle = _ref.contactTitle,\n      contactValue = _ref.contactValue;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.contact,\n    style: {\n      display: 'flex'\n    },\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoKey,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 65\n    }\n  }, contactTitle, \":\"), \" \", contactValue);\n};\n\nvar ProfileData = function ProfileData(_ref2) {\n  var profile = _ref2.profile,\n      props = _objectWithoutProperties(_ref2, [\"profile\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    className: s.profileData,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }\n  }, props.isOwner && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.onEditMode,\n    className: s.editBtn + ' ' + s.btn,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoKey,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 39\n    }\n  }, \"Looking for a job: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoValue,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 93\n    }\n  }, profile.lookingForAJob ? 'yes' : 'no')), profile.lookingForAJob && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoKey,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 66\n    }\n  }, \"My work skills: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoValue,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 117\n    }\n  }, profile.lookingForAJob && profile.lookingForAJobDescription)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoKey,\n    __self: _this3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Contacts\"), \":\", profile.contacts && Object.keys(profile.contacts).map(function (key) {\n    return profile.contacts[key] && /*#__PURE__*/React.createElement(Contact, {\n      key: key,\n      className: s.infoValue,\n      contactTitle: key,\n      contactValue: profile.contacts[key],\n      __self: _this3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 71\n      }\n    });\n  })));\n};\n\nexport default ProfileInfo;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Profile/ProfileInfo/ProfilInfo.tsx"],"names":["React","s","Preloader","ProfileStatusWithHooks","ProfileDataFormRedux","ReactCrop","getCroppedImg","base64StringtoFile","downloadCroppedImg","ProfileInfo","state","editMode","src","crop","unit","width","height","x","y","aspect","croppedImageUrl","isLoadImg","inputRef","createRef","onInputPhoto","e","target","files","length","setState","reader","FileReader","addEventListener","result","readAsDataURL","onImageLoaded","image","imageRef","onCropComplete","percentCrop","makeClientCrop","onCropChange","onSubmit","data","props","saveProfile","then","updatePhotoCrop","url","onload","myFilename","myNewCroppedFile","updatePhoto","refreshInputArea","current","value","profile","descriptionBlock","display","photos","large","photoUser","avaImg","marginLeft","fullName","status","updateStatus","isOwner","inputPhoto","maxWidth","PureComponent","Contact","contactTitle","contactValue","contact","infoKey","ProfileData","position","profileData","onEditMode","editBtn","btn","infoValue","lookingForAJob","lookingForAJobDescription","contacts","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { RefObject } from 'react';\r\nimport  s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport photoUser from '../../../img/user.svg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {ProfileDataFormRedux} from \"./ProfileDataForm\"\r\nimport { ProfileType, SaveProfileType, ContactsType } from '../../../Types/Types';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { getCroppedImg, base64StringtoFile, downloadCroppedImg } from '../../utils/Validators/cropImgFunctions';\r\n\r\nclass ProfileInfo extends React.PureComponent<PropsType> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        src: null as string | null,\r\n        crop : {\r\n          unit: '%' as \"%\" | \"px\" | undefined,\r\n          width: 30,\r\n          height: 30,\r\n          x: 0,\r\n          y: 0,\r\n          aspect: 1 / 1\r\n        },\r\n        croppedImageUrl: '' as string,\r\n        isLoadImg: true\r\n    }\r\n\r\n    inputRef = React.createRef();\r\n\r\n    onInputPhoto = (e: any) => {\r\n        if(e.target.files.length && e.target.files.length > 0){\r\n            this.setState({isLoadImg: true})\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () =>\r\n                this.setState( { src: reader.result } )\r\n            );\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    onImageLoaded = (image: HTMLImageElement) => {\r\n        this.imageRef = image;\r\n      };\r\n    \r\n    onCropComplete = (crop: ReactCrop.Crop , percentCrop: ReactCrop.PercentCrop) => {\r\n      this.makeClientCrop(crop);\r\n    };\r\n  \r\n    onCropChange = (crop: ReactCrop.Crop, percentCrop: ReactCrop.PercentCrop) => {\r\n        this.setState({ crop });\r\n      };\r\n    imageRef: any;\r\n    \r\n      async makeClientCrop(crop: ReactCrop.Crop) {\r\n        if (this.imageRef && crop.width && crop.height) {\r\n          const croppedImageUrl = await getCroppedImg(\r\n            this.imageRef,\r\n            crop,\r\n            'newFile.jpeg'\r\n          );\r\n          this.setState({ croppedImageUrl });\r\n        }\r\n      }\r\n    \r\n    onSubmit = (data: SaveProfileType) => {\r\n        this.props.saveProfile(data).then(() => {\r\n            this.setState({editMode: false})\r\n        });\r\n    }\r\n\r\n    updatePhotoCrop = (url: string) => {\r\n\r\n        let reader = new FileReader()\r\n        //@ts-ignore\r\n        reader.readAsDataURL(this.state.croppedImageUrl)\r\n        reader.onload = function() {\r\n            const myFilename = \"previewFile.jpg\"\r\n            //@ts-ignore\r\n            const myNewCroppedFile = base64StringtoFile(reader.result, myFilename)\r\n            //@ts-ignore\r\n            myNewCroppedFile && this.props.updatePhoto(myNewCroppedFile)\r\n          };\r\n\r\n        downloadCroppedImg(url)\r\n        //const imageData64 = this.imageRef.src.toString(64)\r\n        this.setState({isLoadImg: false})\r\n        this.refreshInputArea()\r\n    }\r\n\r\n    refreshInputArea = () => {\r\n      this.setState({\r\n        src: null,\r\n        croppedImageUrl: '',\r\n        isLoadImg: true\r\n      })\r\n      //@ts-ignore\r\n      this.inputRef.current.value = null\r\n    }\r\n        \r\n    render(){\r\n        const { crop, croppedImageUrl, src } = this.state;\r\n\r\n        if (!this.props.profile){\r\n            return <Preloader />\r\n        }\r\n\r\n        return (<div>\r\n            <div className={s.descriptionBlock}>\r\n                <div style={{display:'flex'}}>\r\n                    <img src={ this.props.profile.photos.large || photoUser } alt=\"photo\" className={s.avaImg}/>\r\n                    <div style={{marginLeft:\"20px\"}}>\r\n                        <p><b>{this.props.profile.fullName || 'unknown user '}</b></p>\r\n                        <ProfileStatusWithHooks status = {this.props.status} updateStatus = {this.props.updateStatus}/>\r\n                    </div>\r\n                    {this.props.isOwner && <input type=\"file\" ref={this.inputRef as RefObject<HTMLInputElement> | null} onChange={this.onInputPhoto} className={s.inputPhoto}/>}\r\n                </div>\r\n\r\n                { \r\n                src && this.state.isLoadImg && <div>\r\n                    <ReactCrop\r\n                        src={src}\r\n                        crop={crop}\r\n                        ruleOfThirds\r\n                        onImageLoaded={this.onImageLoaded}\r\n                        onComplete={this.onCropComplete}\r\n                        onChange={this.onCropChange}\r\n                />\r\n                {   croppedImageUrl && (\r\n                    <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\r\n                )}\r\n                <button onClick = {() => this.updatePhotoCrop(this.state.croppedImageUrl)}>Send</button>\r\n                </div>\r\n                }\r\n\r\n                {\r\n                this.state.editMode \r\n                //@ts-ignore\r\n                    ? <ProfileDataFormRedux initialValues = {props.profile} profile = {props.profile} onSubmit = {onSubmit}/>\r\n                    : <ProfileData profile = {this.props.profile} onEditMode = {() => this.setState({editMode: true})} isOwner={this.props.isOwner}/>\r\n                }\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst Contact: React.FC<ContactType> = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}  style={{display:'flex'}}><span className={s.infoKey}>{contactTitle}:</span> {contactValue}</div>\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, ...props}) => {\r\n\r\n    return <div style={{position: 'relative'}} className={s.profileData}>\r\n        {props.isOwner && <button onClick = {props.onEditMode} className = {s.editBtn + ' ' + s.btn}/>}\r\n        {/* <div style={{display:'flex'}}><span className={s.infoKey}>About me: </span><span className={s.infoValue}>{profile.aboutMe}</span></div> */}\r\n        <div style={{display:'flex'}}><span className={s.infoKey}>Looking for a job: </span><span className={s.infoValue}>{profile.lookingForAJob ? 'yes' : 'no'}</span></div>\r\n        {profile.lookingForAJob && <div style={{display:'flex'}}><span className={s.infoKey}>My work skills: </span><span className={s.infoValue}>{profile.lookingForAJob && profile.lookingForAJobDescription}</span></div>}\r\n        <div>\r\n            <span className={s.infoKey}>Contacts</span>: \r\n            {\r\n            profile.contacts && Object\r\n                .keys(profile.contacts)\r\n                .map(key => {\r\n                return profile.contacts[key as keyof ContactsType] && <Contact key={key} className={s.infoValue} contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]} />\r\n            })\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n    className: string\r\n}\r\n\r\n\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    onEditMode: () => void\r\n}\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    isOwner: boolean\r\n    status: string\r\n\r\n    updatePhoto: (file: File) => void\r\n    saveProfile: (data: SaveProfileType) => Promise<SaveProfileType>\r\n    updateStatus: (data: string) => void\r\n}\r\n\r\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}