{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { AuthAPI, LoginAPI, SecurityAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { check_auth_me } from \"./profile_reducer\";\nvar SET_NEW_AUTH = 'SET_NEW_AUTH';\nvar SET_NEW_CAPTCHA = 'SET_NEW_CAPTCHA';\nvar initialState = {\n  id: null,\n  login: null,\n  email: null,\n  isAuth: false,\n  captcha: null\n};\n\nvar header_reducer = function header_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_NEW_AUTH:\n    case SET_NEW_CAPTCHA:\n      {\n        return _objectSpread({}, state, action.data);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport var setNewAuth = function setNewAuth(id, login, email, isAuth) {\n  return {\n    type: SET_NEW_AUTH,\n    data: {\n      id: id,\n      login: login,\n      email: email,\n      isAuth: isAuth\n    }\n  };\n};\nexport var setNewCaptcha = function setNewCaptcha(captcha) {\n  return {\n    type: SET_NEW_CAPTCHA,\n    data: {\n      captcha: captcha\n    }\n  };\n};\nexport var checkAuthMe = function checkAuthMe() {\n  return function (dispatch) {\n    return AuthAPI.checkAuthMe().then(function (data) {\n      if (data.resultCode === 0) {\n        var _data$data = data.data,\n            id = _data$data.id,\n            login = _data$data.login,\n            email = _data$data.email;\n        dispatch(setNewAuth(id, login, email, true));\n      }\n    });\n  };\n};\nexport var checkLoginMe = function checkLoginMe(email, password, rememberMe, captcha) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, message;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return LoginAPI.checkLogin(email, password, rememberMe, captcha);\n\n            case 2:\n              response = _context.sent;\n\n              if (response.data.resultCode === 0) {\n                dispatch(checkAuthMe());\n                dispatch(check_auth_me());\n              } else {\n                if (response.data.resultCode === 10) {\n                  dispatch(getCaptcha());\n                }\n\n                message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error!';\n                dispatch(stopSubmit('login', {\n                  _error: message\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var logoutMe = function logoutMe(dataObj) {\n  return function (dispatch) {\n    LoginAPI.logout().then(function (response) {\n      if (response.data.resultCode === 0) {\n        dispatch(setNewAuth(null, null, null, false));\n      }\n    });\n  };\n};\nexport var getCaptcha = function getCaptcha() {\n  return function (dispatch) {\n    SecurityAPI.getCaptcha().then(function (response) {\n      dispatch(setNewCaptcha(response.data.url));\n    });\n  };\n};\nexport default header_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/header_reducer.js"],"names":["AuthAPI","LoginAPI","SecurityAPI","stopSubmit","check_auth_me","SET_NEW_AUTH","SET_NEW_CAPTCHA","initialState","id","login","email","isAuth","captcha","header_reducer","state","action","type","data","setNewAuth","setNewCaptcha","checkAuthMe","dispatch","then","resultCode","checkLoginMe","password","rememberMe","checkLogin","response","getCaptcha","message","messages","length","_error","logoutMe","dataObj","logout","url"],"mappings":"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","sourcesContent":["import {AuthAPI, LoginAPI, SecurityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport { check_auth_me } from \"./profile_reducer\";\r\n\r\nconst SET_NEW_AUTH = 'SET_NEW_AUTH'\r\nconst SET_NEW_CAPTCHA = 'SET_NEW_CAPTCHA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captcha: null\r\n}\r\n\r\nlet header_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_NEW_AUTH:\r\n        case SET_NEW_CAPTCHA: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNewAuth = (id, login, email, isAuth) => ({type: SET_NEW_AUTH, data: {id, login, email, isAuth}})\r\nexport const setNewCaptcha = (captcha) => ({type: SET_NEW_CAPTCHA, data: {captcha}})\r\n\r\nexport const checkAuthMe = () => (dispatch) => {\r\n    return AuthAPI.checkAuthMe()\r\n        .then((data) => {\r\n            if (data.resultCode === 0) {\r\n                let {id, login, email} = data.data\r\n                dispatch(setNewAuth(id, login, email, true))\r\n            }\r\n        })\r\n}\r\n\r\nexport const checkLoginMe = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await LoginAPI.checkLogin(email, password, rememberMe, captcha)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(checkAuthMe());\r\n        dispatch(check_auth_me());\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptcha())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error!'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logoutMe = (dataObj) => (dispatch) => {\r\n    LoginAPI.logout()\r\n        .then((response) => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setNewAuth(null, null, null, false))\r\n            }\r\n        })\r\n}\r\n\r\nexport const getCaptcha = () => (dispatch) => {\r\n    SecurityAPI.getCaptcha()\r\n        .then((response) => {\r\n            dispatch(setNewCaptcha(response.data.url))\r\n        })\r\n}\r\n\r\nexport default header_reducer"]},"metadata":{},"sourceType":"module"}