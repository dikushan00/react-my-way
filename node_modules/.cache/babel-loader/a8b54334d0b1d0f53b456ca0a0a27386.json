{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Login\\\\Login.tsx\";\n\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { checkLoginMe } from \"../../redux/header_reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport { required } from \"../utils/Validators/validators\";\nimport { Element } from \"../common/FormControl/FormControl\";\nimport style from \"../common/FormControl/FormControl.module.css\";\nimport s from \"./Login.module.css\";\n\nvar Login = function Login(props) {\n  var onSubmit = function onSubmit(inputData) {\n    props.checkLoginMe(inputData.email, inputData.password, inputData.rememberMe, inputData.captcha);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/profile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pageArea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(ReduxForm, {\n    onSubmit: onSubmit,\n    captcha: props.captcha,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar Input = Element(\"input\");\n\nvar LoginForm = function LoginForm(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    className: s.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n    name: 'email',\n    placeholder: \"Email..\",\n    component: Input,\n    validate: [required],\n    id: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pass\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n    name: 'password',\n    placeholder: \"Password..\",\n    component: Input,\n    id: \"pass\",\n    validate: [required],\n    type: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"remember\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Remember me\"), /*#__PURE__*/React.createElement(Field, {\n    name: 'rememberMe',\n    type: 'checkbox',\n    component: Input,\n    id: \"remember\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), props.captcha && /*#__PURE__*/React.createElement(\"img\", {\n    src: props.captcha,\n    alt: \"Captcha\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 31\n    }\n  }), props.captcha && /*#__PURE__*/React.createElement(Field, {\n    name: 'captcha',\n    component: Input,\n    id: \"captcha\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Login\")), props.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.commonError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, props.error));\n};\n\nvar ReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuth: state.auth.isAuth,\n    captcha: state.auth.captcha\n  };\n};\n\nexport default connect(mapStateToProps, {\n  checkLoginMe: checkLoginMe\n})(Login);","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Login/Login.tsx"],"names":["React","Field","reduxForm","connect","checkLoginMe","Redirect","required","Element","style","s","Login","props","onSubmit","inputData","email","password","rememberMe","captcha","isAuth","Input","LoginForm","handleSubmit","form","display","error","commonError","ReduxForm","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {checkLoginMe} from \"../../redux/header_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {required} from \"../utils/Validators/validators\";\r\nimport {Element} from \"../common/FormControl/FormControl\";\r\nimport style from \"../common/FormControl/FormControl.module.css\"\r\nimport s from \"./Login.module.css\"\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    captcha: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    checkLoginMe: (email: string | null, password: string | null, rememberMe: boolean, captcha: string | null) => Promise<void>\r\n}\r\n\r\ntype LoginPropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nexport type LoginFormValuesType = {\r\n    captcha: string | null\r\n    rememberMe: boolean\r\n    password: string | null\r\n    email: string | null\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\r\n\r\n\r\n\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n\r\n    const onSubmit = (inputData: LoginFormValuesType) => {\r\n        props.checkLoginMe(inputData.email, inputData.password, inputData.rememberMe, inputData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className='pageArea'>\r\n            <h1>Login</h1>\r\n            <ReduxForm onSubmit={onSubmit} captcha = {props.captcha}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Input = Element(\"input\");\r\n\r\ntype LoginFormPropsType = {\r\n    captcha: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormPropsType> & LoginFormPropsType > = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.form}>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field name={'email'}  placeholder='Email..' component={Input} validate={[required]} id='email'/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"pass\">Password</label>\r\n                <Field name={'password'} placeholder='Password..' component={Input} id='pass' validate={[required]} type='password'/>\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                <label htmlFor=\"remember\">Remember me</label>\r\n                <Field name={'rememberMe'} type={'checkbox'} component={Input} id='remember'/>\r\n            </div>\r\n\r\n            {props.captcha && <img src={props.captcha} alt=\"Captcha\"/>}\r\n            {props.captcha && <Field name={'captcha'} component={Input} id='captcha'/>}\r\n\r\n            <div>\r\n                <button className='btn'>Login</button>\r\n            </div>\r\n            {props.error && <div className={style.commonError}>{props.error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxForm = reduxForm<LoginFormValuesType, LoginFormPropsType>({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha\r\n})\r\n\r\nexport default connect(mapStateToProps, {checkLoginMe})(Login)"]},"metadata":{},"sourceType":"module"}