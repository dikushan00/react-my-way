{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { UsersAPI } from \"../api/api\";\nvar initialState = {\n  usersData: [],\n  pageSize: 100,\n  currentPage: 1,\n  pageCount: 0,\n  isFetching: true,\n  toggleProgressArr: []\n};\n\nvar users_reducer = function users_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SN/Users/SWITCH_FOLLOW':\n      {\n        return _objectSpread({}, state, {\n          usersData: state.usersData.map(function (u) {\n            if (u.id === action.userId) {\n              return _objectSpread({}, u, {\n                followed: !u.followed\n              });\n            }\n\n            return u;\n          })\n        });\n      }\n\n    case 'SN/Users/SET_USERS':\n      {\n        return _objectSpread({}, state, {\n          usersData: _toConsumableArray(action.users)\n        });\n      }\n\n    case 'SN/Users/SET_CURRENT_PAGE':\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case 'SN/Users/SET_TOTAL_PAGE_COUNT':\n      {\n        return _objectSpread({}, state, {\n          pageCount: action.count\n        });\n      }\n\n    case 'SN/Users/TOGGLE_FETCHING':\n      {\n        return _objectSpread({}, state, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case 'SN/Users/TOGGLE_PROGRESS':\n      {\n        var ID = action.id;\n        return _objectSpread({}, state, {\n          toggleProgressArr: action.type ? [].concat(_toConsumableArray(state.toggleProgressArr), [action.id]) : state.toggleProgressArr.filter(function (id) {\n            return id != ID;\n          })\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var actions = {\n  switch_follow: function switch_follow(userId) {\n    return {\n      type: 'SN/Users/SWITCH_FOLLOW',\n      userId: userId\n    };\n  },\n  setUsers: function setUsers(users) {\n    return {\n      type: 'SN/Users/SET_USERS',\n      users: users\n    };\n  },\n  setCurrentPage: function setCurrentPage(currentPage) {\n    return {\n      type: 'SN/Users/SET_CURRENT_PAGE',\n      currentPage: currentPage\n    };\n  },\n  setPageCount: function setPageCount(count) {\n    return {\n      type: 'SN/Users/SET_TOTAL_PAGE_COUNT',\n      count: count\n    };\n  },\n  toggleIsFetching: function toggleIsFetching(isFetching) {\n    return {\n      type: 'SN/Users/TOGGLE_FETCHING',\n      isFetching: isFetching\n    };\n  },\n  toggleProgress: function toggleProgress(isFetching, id) {\n    return {\n      type: 'SN/Users/TOGGLE_PROGRESS',\n      isFetching: isFetching,\n      id: id\n    };\n  }\n};\nexport var getUsers = function getUsers(currentPage, pageSize) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(actions.setCurrentPage(currentPage));\n              dispatch(actions.toggleIsFetching(true));\n              _context.next = 4;\n              return UsersAPI.getUsers(currentPage, pageSize);\n\n            case 4:\n              data = _context.sent;\n              dispatch(actions.toggleIsFetching(false));\n              dispatch(actions.setUsers(data.items));\n              dispatch(actions.setPageCount(data.totalCount));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var follow = function follow(userId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(actions.toggleProgress(true, userId));\n              _context2.next = 3;\n              return UsersAPI.follow(userId);\n\n            case 3:\n              data = _context2.sent;\n              dispatch(actions.switch_follow(userId));\n              dispatch(actions.toggleProgress(false, userId));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var unfollow = function unfollow(userId) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch(actions.toggleProgress(true, userId));\n              _context3.next = 3;\n              return UsersAPI.unfollow(userId);\n\n            case 3:\n              data = _context3.sent;\n              dispatch(actions.switch_follow(userId));\n              dispatch(actions.toggleProgress(false, userId));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport default users_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/users_reducer.ts"],"names":["UsersAPI","initialState","usersData","pageSize","currentPage","pageCount","isFetching","toggleProgressArr","users_reducer","state","action","type","map","u","id","userId","followed","users","count","ID","filter","actions","switch_follow","setUsers","setCurrentPage","setPageCount","toggleIsFetching","toggleProgress","getUsers","dispatch","data","items","totalCount","follow","unfollow"],"mappings":"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","sourcesContent":["import {UsersAPI} from \"../api/api\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { Dispatch } from \"react\";\r\nimport { AppStateType, InferActionsTypes, ThunkType } from \"./store-redux\";\r\n\r\ntype UsersDataItemType = {\r\n    name: string | null,\r\n    id: number,\r\n    photos: {\r\n      small: string | null,\r\n      large: string | null\r\n    },\r\n    status: string | null,\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UsersDataItemType>,\r\n    pageSize: 100,\r\n    currentPage: 1,\r\n    pageCount: 0,\r\n    isFetching: true,\r\n    toggleProgressArr: [] as Array<number>\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nlet users_reducer = (state = initialState, action: ActionsType) : InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Users/SWITCH_FOLLOW': {\r\n\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map( u => {\r\n                        if(u.id === action.userId){\r\n                            return {...u, followed: !u.followed}\r\n                        }\r\n                        return u\r\n                    })\r\n                }\r\n        }\r\n        case 'SN/Users/SET_USERS': {\r\n            return { ...state, usersData: [...action.users]}\r\n        }\r\n        case 'SN/Users/SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/Users/SET_TOTAL_PAGE_COUNT': {\r\n            return { ...state, pageCount: action.count}\r\n        }\r\n        case 'SN/Users/TOGGLE_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/Users/TOGGLE_PROGRESS': {\r\n            const ID = action.id\r\n            return {\r\n                ...state,\r\n                toggleProgressArr: action.type\r\n                    ? [...state.toggleProgressArr, action.id]\r\n                    : state.toggleProgressArr.filter(id =>  id != ID)\r\n            } \r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    switch_follow: (userId: number) => ({type: 'SN/Users/SWITCH_FOLLOW', userId} as const),\r\n    setUsers: (users: Array<UsersDataItemType>) => ({type: 'SN/Users/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/Users/SET_CURRENT_PAGE', currentPage} as const),\r\n    setPageCount: (count: number) => ({type: 'SN/Users/SET_TOTAL_PAGE_COUNT', count} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/Users/TOGGLE_FETCHING', isFetching} as const),\r\n    toggleProgress: (isFetching: boolean, id: number) => ({type: 'SN/Users/TOGGLE_PROGRESS', isFetching, id} as const)\r\n}\r\n\r\n\r\n\r\ntype getThunkType = ThunkType<ActionsType >\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number): getThunkType => async (dispatch)  => {\r\n\r\n    dispatch(actions.setCurrentPage(currentPage))\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const data = await UsersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(actions.toggleIsFetching(false))\r\n        dispatch(actions.setUsers(data.items))\r\n        dispatch(actions.setPageCount(data.totalCount))\r\n}\r\n\r\nexport const follow = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleProgress(true, userId))\r\n    const data = await UsersAPI.follow(userId)\r\n        dispatch(actions.switch_follow(userId))\r\n        dispatch(actions.toggleProgress(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleProgress(true, userId))\r\n    const data = await UsersAPI.unfollow(userId)\r\n        dispatch(actions.switch_follow(userId))\r\n        dispatch(actions.toggleProgress(false, userId))\r\n}\r\n\r\nexport default users_reducer"]},"metadata":{},"sourceType":"module"}