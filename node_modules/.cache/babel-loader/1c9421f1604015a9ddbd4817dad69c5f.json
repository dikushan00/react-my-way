{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Profile\\\\ProfileContainer.tsx\";\n\nimport React, { useEffect } from 'react';\nimport Profile from \"./Profile\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { check_auth, getStatus } from \"../../redux/profile_reducer\";\nimport { useParams } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../HOC/withAuthRedirect\";\n\nvar ProfileContainer = function ProfileContainer(props) {\n  var dispatch = useDispatch();\n  var params = useParams();\n  var authId = useSelector(function (state) {\n    return state.auth.id;\n  });\n\n  var refreshProfile = function refreshProfile() {\n    //@ts-ignore\n    var userId = params.userId;\n    if (!userId) userId = authId;\n    dispatch(check_auth(userId));\n    dispatch(getStatus(userId));\n  };\n\n  useEffect(function () {\n    refreshProfile(); // @ts-ignore\n  }, [params.userId]);\n  return (\n    /*#__PURE__*/\n    // @ts-ignore\n    React.createElement(Profile, {\n      isOwner: !params.userId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    })\n  );\n};\n\nexport default compose(withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Profile/ProfileContainer.tsx"],"names":["React","useEffect","Profile","useDispatch","useSelector","check_auth","getStatus","useParams","compose","withAuthRedirect","ProfileContainer","props","dispatch","params","authId","state","auth","id","refreshProfile","userId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAwC,aAAxC;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,6BAApC;AACA,SAAyCC,SAAzC,QAAyD,kBAAzD;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;;AAGA,IAAMC,gBAA4E,GAAG,SAA/EA,gBAA+E,CAACC,KAAD,EAAW;AAE5F,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAMO,MAAM,GAAGV,WAAW,CAAC,UAACW,KAAD;AAAA,WAAyBA,KAAK,CAACC,IAAN,CAAWC,EAApC;AAAA,GAAD,CAA1B;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB;AACA,QAAIC,MAAc,GAAGN,MAAM,CAACM,MAA5B;AACA,QAAI,CAACA,MAAL,EAAaA,MAAM,GAAGL,MAAT;AACbF,IAAAA,QAAQ,CAACP,UAAU,CAACc,MAAD,CAAX,CAAR;AACAP,IAAAA,QAAQ,CAACN,SAAS,CAACa,MAAD,CAAV,CAAR;AACH,GAND;;AAQAlB,EAAAA,SAAS,CAAC,YAAM;AACZiB,IAAAA,cAAc,GADF,CAEZ;AACH,GAHQ,EAGN,CAACL,MAAM,CAACM,MAAR,CAHM,CAAT;AAKI;AAAA;AACI;AACA,wBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,CAACN,MAAM,CAACM,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAIP,CAvBD;;AAyBA,eAAeX,OAAO,CAClBC,gBADkB,CAAP,CAEbC,gBAFa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport {check_auth, getStatus} from \"../../redux/profile_reducer\";\r\nimport {withRouter, RouteComponentProps, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\"\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\nconst ProfileContainer:React.FC<PropsType & RouteComponentProps<RouteParamsProps>> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const authId = useSelector((state: AppStateType) => state.auth.id)\r\n\r\n    const refreshProfile = () => {\r\n        //@ts-ignore\r\n        let userId: number = params.userId;\r\n        if (!userId) userId = authId as number\r\n        dispatch(check_auth(userId))\r\n        dispatch(getStatus(userId))\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshProfile();\r\n        // @ts-ignore\r\n    }, [params.userId])\r\n\r\n        return (\r\n            // @ts-ignore\r\n            <Profile isOwner={!params.userId} />\r\n        )\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n}\r\n\r\ntype RouteParamsProps = {\r\n    userId: string \r\n}"]},"metadata":{},"sourceType":"module"}