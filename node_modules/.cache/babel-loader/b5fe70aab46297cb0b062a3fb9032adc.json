{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { ProfileAPI, ResultCodeEnum } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nvar id = 0;\nvar initialState = {\n  postsData: [{\n    id: 1,\n    title: \"Hello everyone. it is my first news post!\",\n    photo: '',\n    comments: [{\n      userId: 1,\n      commentId: 1,\n      fullName: 'Башаров Максим',\n      text: \"its awesome!\",\n      photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\n    }, {\n      userId: 2,\n      commentId: 2,\n      fullName: 'Башаров Максим',\n      text: \"How are you?\",\n      photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\n    }],\n    likesCount: 5,\n    CommentsCount: 2,\n    liked: false\n  }, {\n    id: 2,\n    title: \"React makes it painless to create interactive UIs.\",\n    photo: '',\n    comments: [{\n      userId: 1,\n      commentId: 1,\n      fullName: 'Башаров Максим',\n      text: \"its awesome!\",\n      photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\n    }, {\n      userId: 2,\n      commentId: 2,\n      fullName: 'Башаров Максим',\n      text: \"How are you?\",\n      photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\n    }],\n    likesCount: 5,\n    CommentsCount: 2,\n    liked: false\n  }, {\n    id: 3,\n    title: \"Build encapsulated components that manage their own state, then compose them to make complex UIs.\",\n    photo: '',\n    comments: [{\n      userId: 1,\n      commentId: 1,\n      fullName: 'Башаров Максим',\n      text: \"its awesome!\",\n      photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\n    }, {\n      userId: 2,\n      commentId: 2,\n      fullName: 'Башаров Максим',\n      text: \"How are you?\",\n      photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\n    }],\n    likesCount: 5,\n    CommentsCount: 2,\n    liked: false\n  }, {\n    id: 4,\n    title: \"Declarative views make your code more predictable and easier to debug.\",\n    photo: '',\n    comments: [{\n      userId: 1,\n      commentId: 1,\n      fullName: 'Башаров Максим',\n      text: \"its awesome!\",\n      photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\n    }, {\n      userId: 2,\n      commentId: 2,\n      fullName: 'Башаров Максим',\n      text: \"How are you?\",\n      photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\n    }],\n    likesCount: 5,\n    CommentsCount: 2,\n    liked: false\n  }],\n  profile: null,\n  status: '',\n  isFetching: false,\n  photos: null\n};\n\nvar profile_reducer = function profile_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SN/Profile/ADD_NEW_POST':\n      {\n        if (action.newPostText.length > 0) {\n          return _objectSpread({}, state, {\n            postsData: [].concat(_toConsumableArray(state.postsData), [{\n              id: 5,\n              fullName: '',\n              title: action.newPostText,\n              photo: '',\n              avatar: '',\n              comments: [],\n              likesCount: 0,\n              CommentsCount: 0,\n              liked: false\n            }])\n          });\n        }\n\n        return state;\n      }\n\n    case 'SN/Profile/PROFILE_INFO':\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case 'SN/Profile/My_PROFILE_INFO':\n      {\n        return _objectSpread({}, state, {\n          profile: _objectSpread({}, action.profile),\n          photos: action.profile.photos\n        });\n      }\n\n    case 'SN/Profile/TOGGLE_FETCHING':\n      {\n        return _objectSpread({}, state, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case 'SN/Profile/SET_STATUS':\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    case 'SN/Profile/SET_PHOTO':\n      {\n        return _objectSpread({}, state, {\n          profile: _objectSpread({}, state.profile, {\n            photos: action.photoUrl\n          }),\n          photos: action.photoUrl\n        });\n      }\n\n    case 'SN/Profile/ADD_NEW_COMMENT':\n      {\n        if (action.newCommentText.length > 0) {\n          return _objectSpread({}, state, {\n            postsData: state.postsData.map(function (item) {\n              if (item.id === action.id) item.comments = [].concat(_toConsumableArray(item.comments), [{\n                userId: 5,\n                fullName: 'dikushan00',\n                commentId: 5,\n                text: action.newCommentText,\n                photo: ''\n              }]);\n              return item;\n            })\n          });\n          id++;\n        }\n\n        return state;\n      }\n\n    case 'SN/Profile/UPDATE_LIKE_COUNT':\n      {\n        return _objectSpread({}, state, {\n          postsData: state.postsData.map(function (item) {\n            if (item.id === action.id && !item.liked) {\n              item.likesCount = item.likesCount + 1;\n              item.liked = !item.liked;\n            } else if (item.id === action.id && item.liked) {\n              item.likesCount = item.likesCount - 1;\n              item.liked = !item.liked;\n            }\n\n            return item;\n          })\n        });\n      }\n\n    case 'SN/Profile/UPDATE_COMMENT_COUNT':\n      {\n        return _objectSpread({}, state, {\n          postsData: state.postsData.map(function (item) {\n            if (item.id === action.id) item.CommentsCount++;\n            return item;\n          })\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var actions = {\n  addPost: function addPost(newPostText) {\n    return {\n      type: 'SN/Profile/ADD_NEW_POST',\n      newPostText: newPostText\n    };\n  },\n  profileInfo: function profileInfo(profile) {\n    return {\n      type: 'SN/Profile/PROFILE_INFO',\n      profile: profile\n    };\n  },\n  myProfileInfo: function myProfileInfo(profile) {\n    return {\n      type: 'SN/Profile/My_PROFILE_INFO',\n      profile: profile\n    };\n  },\n  toggleIsFetching: function toggleIsFetching(isFetching) {\n    return {\n      type: 'SN/Profile/TOGGLE_FETCHING',\n      isFetching: isFetching\n    };\n  },\n  setStatus: function setStatus(status) {\n    return {\n      type: 'SN/Profile/SET_STATUS',\n      status: status\n    };\n  },\n  setPhoto: function setPhoto(photoUrl) {\n    return {\n      type: 'SN/Profile/SET_PHOTO',\n      photoUrl: photoUrl\n    };\n  },\n  addNewComment: function addNewComment(id, newCommentText) {\n    return {\n      type: 'SN/Profile/ADD_NEW_COMMENT',\n      id: id,\n      newCommentText: newCommentText\n    };\n  },\n  updateLikeCount: function updateLikeCount(id) {\n    return {\n      type: 'SN/Profile/UPDATE_LIKE_COUNT',\n      id: id\n    };\n  },\n  updateCommentCount: function updateCommentCount(id) {\n    return {\n      type: 'SN/Profile/UPDATE_COMMENT_COUNT',\n      id: id\n    };\n  }\n};\nexport var check_auth = function check_auth(userId) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(actions.toggleIsFetching(true));\n              _context.next = 3;\n              return ProfileAPI.checkAuth(userId);\n\n            case 3:\n              data = _context.sent;\n              dispatch(actions.profileInfo(data));\n              dispatch(actions.toggleIsFetching(false));\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getStatus = function getStatus(userId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return ProfileAPI.getStatus(userId);\n\n            case 2:\n              data = _context2.sent;\n              dispatch(actions.setStatus(data));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateStatus = function updateStatus(status) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return ProfileAPI.updateStatus(status);\n\n            case 2:\n              data = _context3.sent;\n\n              if (data.resultCode === ResultCodeEnum.Success) {\n                dispatch(actions.setStatus(status));\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var updatePhoto = function updatePhoto(photo) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return ProfileAPI.updateMainPhoto(photo);\n\n            case 2:\n              data = _context4.sent;\n\n              if (data.resultCode === ResultCodeEnum.Success) {\n                dispatch(actions.setPhoto(data.data.photos));\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var saveProfile = function saveProfile(profile) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var userId, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              userId = getState().auth.id;\n              _context5.next = 3;\n              return ProfileAPI.saveProfile(profile);\n\n            case 3:\n              response = _context5.sent;\n\n              if (!(response.data.resultCode === ResultCodeEnum.Success)) {\n                _context5.next = 12;\n                break;\n              }\n\n              if (!userId) {\n                _context5.next = 9;\n                break;\n              }\n\n              dispatch(check_auth(userId));\n              _context5.next = 10;\n              break;\n\n            case 9:\n              throw new Error();\n\n            case 10:\n              _context5.next = 14;\n              break;\n\n            case 12:\n              dispatch(stopSubmit(\"editProfileData\", {\n                _error: response.data.messages[0]\n              }));\n              return _context5.abrupt(\"return\", Promise.reject(response.data.messages[0]));\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var check_auth_me = function check_auth_me() {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch, getState) {\n      var myId, data;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              dispatch(actions.toggleIsFetching(true));\n              myId = getState().auth.id;\n              _context6.next = 4;\n              return ProfileAPI.checkAuth(myId);\n\n            case 4:\n              data = _context6.sent;\n              dispatch(actions.myProfileInfo(data));\n              dispatch(actions.toggleIsFetching(false));\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x7, _x8) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport default profile_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/profile_reducer.ts"],"names":["ProfileAPI","ResultCodeEnum","stopSubmit","id","initialState","postsData","title","photo","comments","userId","commentId","fullName","text","likesCount","CommentsCount","liked","profile","status","isFetching","photos","profile_reducer","state","action","type","newPostText","length","avatar","photoUrl","newCommentText","map","item","actions","addPost","profileInfo","myProfileInfo","toggleIsFetching","setStatus","setPhoto","addNewComment","updateLikeCount","updateCommentCount","check_auth","dispatch","checkAuth","data","getStatus","updateStatus","resultCode","Success","updatePhoto","updateMainPhoto","saveProfile","getState","auth","response","Error","_error","messages","Promise","reject","check_auth_me","myId"],"mappings":"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","sourcesContent":["import {ProfileAPI, ResultCodeEnum} from \"../api/api\";\r\nimport { stopSubmit, FormAction } from \"redux-form\";\r\nimport {CommentsType, SaveProfileType, ProfileType} from './../Types/Types';\r\nimport { ThunkType, InferActionsTypes } from \"./store-redux\";\r\n\r\nlet id = 0\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            title: \"Hello everyone. it is my first news post!\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"React makes it painless to create interactive UIs.\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Build encapsulated components that manage their own state, then compose them to make complex UIs.\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Declarative views make your code more predictable and easier to debug.\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        }\r\n    ] as Array<PostItemType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    isFetching: false,\r\n    photos: null as PhotosType | null\r\n}\r\n\r\nexport type ProfileInitialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nlet profile_reducer = (state = initialState, action: ActionsType): ProfileInitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Profile/ADD_NEW_POST': {\r\n\r\n            if (action.newPostText.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    postsData: [...state.postsData, {\r\n                        id: 5,\r\n                        fullName: '',\r\n                        title: action.newPostText,\r\n                        photo: '',\r\n                        avatar: '',\r\n                        comments: [],\r\n                        likesCount: 0,\r\n                        CommentsCount: 0,\r\n                        liked: false\r\n                    }]\r\n                }\r\n            }\r\n\r\n            return state\r\n\r\n        }\r\n\r\n        case 'SN/Profile/PROFILE_INFO': {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        case 'SN/Profile/My_PROFILE_INFO': {\r\n\r\n            return {\r\n                ...state,\r\n                profile: {...action.profile},\r\n                photos: action.profile.photos\r\n            }\r\n        }\r\n        case 'SN/Profile/TOGGLE_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/Profile/SET_STATUS': {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SN/Profile/SET_PHOTO': {\r\n\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photoUrl } as ProfileType,\r\n                photos: action.photoUrl\r\n            }\r\n        }\r\n\r\n        case 'SN/Profile/ADD_NEW_COMMENT': {\r\n            if (action.newCommentText.length > 0){\r\n                return {\r\n                    ...state,\r\n                    postsData: state.postsData.map(item => {\r\n                        if(item.id === action.id)\r\n                            item.comments = [...item.comments, {userId: 5, fullName: 'dikushan00', commentId: 5, text: action.newCommentText, photo: ''}]\r\n                        return item\r\n                    })\r\n                }\r\n                id++;\r\n            }\r\n            return state\r\n        }\r\n\r\n        case 'SN/Profile/UPDATE_LIKE_COUNT': {\r\n            \r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.map(item => {\r\n                    if(item.id === action.id && !item.liked){\r\n                        item.likesCount = item.likesCount + 1\r\n                        item.liked = !item.liked \r\n                    } else if(item.id === action.id && item.liked) {\r\n                        item.likesCount = item.likesCount - 1 \r\n                        item.liked = !item.liked \r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        case 'SN/Profile/UPDATE_COMMENT_COUNT': {\r\n\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.map(item => {\r\n                    if(item.id === action.id)\r\n                        item.CommentsCount++\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addPost: (newPostText: string) => ({type: 'SN/Profile/ADD_NEW_POST', newPostText} as const),\r\n    profileInfo: (profile: ProfileType) => ({type: 'SN/Profile/PROFILE_INFO', profile} as const),\r\n    myProfileInfo: (profile: ProfileType) => ({type: 'SN/Profile/My_PROFILE_INFO', profile} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/Profile/TOGGLE_FETCHING', isFetching} as const),\r\n    setStatus: (status: string) => ({type: 'SN/Profile/SET_STATUS', status} as const),\r\n    setPhoto: (photoUrl: PhotosType) => ({type: 'SN/Profile/SET_PHOTO', photoUrl} as const),\r\n    addNewComment: (id: number, newCommentText: string) => ({type: 'SN/Profile/ADD_NEW_COMMENT', id, newCommentText} as const),\r\n    updateLikeCount: (id: number) => ({type: 'SN/Profile/UPDATE_LIKE_COUNT', id} as const),\r\n    updateCommentCount: (id: number) => ({type: 'SN/Profile/UPDATE_COMMENT_COUNT', id} as const)\r\n}\r\n\r\nexport const check_auth = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const data = await ProfileAPI.checkAuth(userId)\r\n    dispatch(actions.profileInfo(data))\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\nexport const getStatus = (userId: number): getThunkType => async (dispatch) => {\r\n    \r\n    const data = await ProfileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status:string): getThunkType => async (dispatch) => {\r\n    const data = await ProfileAPI.updateStatus(status)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(actions.setStatus(status));\r\n        }\r\n}\r\n\r\nexport const updatePhoto = (photo: File): getThunkType => async (dispatch) => {\r\n    const data = await ProfileAPI.updateMainPhoto(photo)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(actions.setPhoto(data.data.photos));\r\n        }\r\n}\r\n\r\nexport const saveProfile = (profile: SaveProfileType): getThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const response = await ProfileAPI.saveProfile(profile);\r\n\r\n        if (response.data.resultCode === ResultCodeEnum.Success) {\r\n            if(userId)\r\n                dispatch(check_auth(userId));\r\n            else throw new Error\r\n        } else {\r\n            dispatch(stopSubmit(\"editProfileData\", {_error: response.data.messages[0]}));\r\n            return Promise.reject(response.data.messages[0]);\r\n        }\r\n}\r\n\r\nexport const check_auth_me = (): getThunkType => async (dispatch, getState) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const myId = getState().auth.id;\r\n    const data = await ProfileAPI.checkAuth(myId)\r\n    dispatch(actions.myProfileInfo(data))\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\n\r\nexport default profile_reducer\r\n\r\n\r\nexport type PostItemType = {\r\n    id: number,\r\n    fullName: string,\r\n    title: string,\r\n    avatar: string,\r\n    photo: string | null,\r\n    comments: Array<CommentsType>\r\n    likesCount: number,\r\n    CommentsCount: number,\r\n    liked: boolean\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\ntype getThunkType = ThunkType<ActionsType | FormAction>\r\n\r\n"]},"metadata":{},"sourceType":"module"}