{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { UsersAPI } from \"../api/api\";\nvar initialState = {\n  usersData: [],\n  pageSize: 100,\n  currentPage: 1,\n  pageCount: 0,\n  isFetching: true,\n  toggleProgressArr: [],\n  friends: [],\n  filter: {\n    term: ''\n  }\n};\n\nvar users_reducer = function users_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SN/Users/SWITCH_FOLLOW':\n      {\n        return _objectSpread({}, state, {\n          usersData: state.usersData.map(function (u) {\n            if (u.id === action.userId) {\n              return _objectSpread({}, u, {\n                followed: !u.followed\n              });\n            }\n\n            return u;\n          })\n        });\n      }\n\n    case 'SN/Users/SET_USERS':\n      {\n        return _objectSpread({}, state, {\n          usersData: _toConsumableArray(action.users)\n        });\n      }\n\n    case 'SN/Users/SET_CURRENT_PAGE':\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case 'SN/Users/SET_TOTAL_PAGE_COUNT':\n      {\n        return _objectSpread({}, state, {\n          pageCount: action.count\n        });\n      }\n\n    case 'SN/Users/TOGGLE_FETCHING':\n      {\n        return _objectSpread({}, state, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case 'SN/Users/TOGGLE_PROGRESS':\n      {\n        var ID = action.id;\n        return _objectSpread({}, state, {\n          toggleProgressArr: action.type ? [].concat(_toConsumableArray(state.toggleProgressArr), [action.id]) : state.toggleProgressArr.filter(function (id) {\n            return id != ID;\n          })\n        });\n      }\n\n    case 'SN/Users/GET_FRIENDS':\n      {\n        return _objectSpread({}, state, {\n          friends: _toConsumableArray(action.friends)\n        });\n      }\n\n    case 'SN/Users/GET_FILTER':\n      {\n        return _objectSpread({}, state, {\n          filter: {\n            term: action.term\n          }\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var actions = {\n  switch_follow: function switch_follow(userId) {\n    return {\n      type: 'SN/Users/SWITCH_FOLLOW',\n      userId: userId\n    };\n  },\n  setUsers: function setUsers(users) {\n    return {\n      type: 'SN/Users/SET_USERS',\n      users: users\n    };\n  },\n  setCurrentPage: function setCurrentPage(currentPage) {\n    return {\n      type: 'SN/Users/SET_CURRENT_PAGE',\n      currentPage: currentPage\n    };\n  },\n  setPageCount: function setPageCount(count) {\n    return {\n      type: 'SN/Users/SET_TOTAL_PAGE_COUNT',\n      count: count\n    };\n  },\n  toggleIsFetching: function toggleIsFetching(isFetching) {\n    return {\n      type: 'SN/Users/TOGGLE_FETCHING',\n      isFetching: isFetching\n    };\n  },\n  toggleProgress: function toggleProgress(isFetching, id) {\n    return {\n      type: 'SN/Users/TOGGLE_PROGRESS',\n      isFetching: isFetching,\n      id: id\n    };\n  },\n  getFriends: function getFriends(friends) {\n    return {\n      type: 'SN/Users/GET_FRIENDS',\n      friends: friends\n    };\n  },\n  getFilter: function getFilter(term) {\n    return {\n      type: 'SN/Users/GET_FILTER',\n      term: term\n    };\n  }\n};\nexport var getUsers = function getUsers(currentPage, pageSize, term) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(actions.setCurrentPage(currentPage));\n              dispatch(actions.toggleIsFetching(true));\n              dispatch(actions.getFilter(term));\n              _context.next = 5;\n              return UsersAPI.getUsers(currentPage, pageSize, term);\n\n            case 5:\n              data = _context.sent;\n              dispatch(actions.toggleIsFetching(false));\n              dispatch(actions.setUsers(data.items));\n              dispatch(actions.setPageCount(data.totalCount));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getFriends = function getFriends() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch(actions.toggleIsFetching(true));\n              _context2.next = 3;\n              return UsersAPI.getFriends();\n\n            case 3:\n              data = _context2.sent;\n              dispatch(actions.toggleIsFetching(false));\n              dispatch(actions.getFriends(data.items));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var follow = function follow(userId) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch(actions.toggleProgress(true, userId));\n              _context3.next = 3;\n              return UsersAPI.follow(userId);\n\n            case 3:\n              data = _context3.sent;\n              dispatch(actions.switch_follow(userId));\n              dispatch(actions.toggleProgress(false, userId));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var unfollow = function unfollow(userId) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch(actions.toggleProgress(true, userId));\n              _context4.next = 3;\n              return UsersAPI.unfollow(userId);\n\n            case 3:\n              data = _context4.sent;\n              dispatch(actions.switch_follow(userId));\n              dispatch(actions.toggleProgress(false, userId));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport default users_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/users_reducer.ts"],"names":["UsersAPI","initialState","usersData","pageSize","currentPage","pageCount","isFetching","toggleProgressArr","friends","filter","term","users_reducer","state","action","type","map","u","id","userId","followed","users","count","ID","actions","switch_follow","setUsers","setCurrentPage","setPageCount","toggleIsFetching","toggleProgress","getFriends","getFilter","getUsers","dispatch","data","items","totalCount","follow","unfollow"],"mappings":";;;;AAAA,SAAQA,QAAR,QAAuB,YAAvB;AAcA,IAAIC,YAAY,GAAG;AACfC,EAAAA,SAAS,EAAE,EADI;AAEfC,EAAAA,QAAQ,EAAE,GAFK;AAGfC,EAAAA,WAAW,EAAE,CAHE;AAIfC,EAAAA,SAAS,EAAE,CAJI;AAKfC,EAAAA,UAAU,EAAE,IALG;AAMfC,EAAAA,iBAAiB,EAAE,EANJ;AAOfC,EAAAA,OAAO,EAAE,EAPM;AAQfC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF;AARO,CAAnB;;AAgBA,IAAIC,aAAa,GAAG,SAAhBA,aAAgB,GAAkE;AAAA,MAAjEC,KAAiE,uEAAzDX,YAAyD;AAAA,MAA3CY,MAA2C;;AAElF,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,wBAAL;AAA+B;AAEvB,iCACOF,KADP;AAEIV,UAAAA,SAAS,EAAEU,KAAK,CAACV,SAAN,CAAgBa,GAAhB,CAAqB,UAAAC,CAAC,EAAI;AACjC,gBAAGA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAAnB,EAA0B;AACtB,uCAAWF,CAAX;AAAcG,gBAAAA,QAAQ,EAAE,CAACH,CAAC,CAACG;AAA3B;AACH;;AACD,mBAAOH,CAAP;AACH,WALU;AAFf;AASP;;AACD,SAAK,oBAAL;AAA2B;AACvB,iCAAYJ,KAAZ;AAAmBV,UAAAA,SAAS,qBAAMW,MAAM,CAACO,KAAb;AAA5B;AACH;;AACD,SAAK,2BAAL;AAAkC;AAC9B,iCAAYR,KAAZ;AAAmBR,UAAAA,WAAW,EAAES,MAAM,CAACT;AAAvC;AACH;;AACD,SAAK,+BAAL;AAAsC;AAClC,iCAAYQ,KAAZ;AAAmBP,UAAAA,SAAS,EAAEQ,MAAM,CAACQ;AAArC;AACH;;AACD,SAAK,0BAAL;AAAiC;AAC7B,iCAAYT,KAAZ;AAAmBN,UAAAA,UAAU,EAAEO,MAAM,CAACP;AAAtC;AACH;;AACD,SAAK,0BAAL;AAAiC;AAC7B,YAAMgB,EAAE,GAAGT,MAAM,CAACI,EAAlB;AACA,iCACOL,KADP;AAEIL,UAAAA,iBAAiB,EAAEM,MAAM,CAACC,IAAP,gCACTF,KAAK,CAACL,iBADG,IACgBM,MAAM,CAACI,EADvB,KAEbL,KAAK,CAACL,iBAAN,CAAwBE,MAAxB,CAA+B,UAAAQ,EAAE;AAAA,mBAAKA,EAAE,IAAIK,EAAX;AAAA,WAAjC;AAJV;AAMH;;AACD,SAAK,sBAAL;AAA6B;AAEzB,iCACOV,KADP;AAEIJ,UAAAA,OAAO,qBAAMK,MAAM,CAACL,OAAb;AAFX;AAIH;;AACD,SAAK,qBAAL;AAA4B;AACxB,iCACOI,KADP;AAEIH,UAAAA,MAAM,EAAE;AAACC,YAAAA,IAAI,EAAEG,MAAM,CAACH;AAAd;AAFZ;AAIH;;AACD;AAAS;AACL,eAAOE,KAAP;AACH;AAlDL;AAoDH,CAtDD;;AA0DA,OAAO,IAAMW,OAAO,GAAG;AACnBC,EAAAA,aAAa,EAAE,uBAACN,MAAD;AAAA,WAAqB;AAACJ,MAAAA,IAAI,EAAE,wBAAP;AAAiCI,MAAAA,MAAM,EAANA;AAAjC,KAArB;AAAA,GADI;AAEnBO,EAAAA,QAAQ,EAAE,kBAACL,KAAD;AAAA,WAAsC;AAACN,MAAAA,IAAI,EAAE,oBAAP;AAA6BM,MAAAA,KAAK,EAALA;AAA7B,KAAtC;AAAA,GAFS;AAGnBM,EAAAA,cAAc,EAAE,wBAACtB,WAAD;AAAA,WAA0B;AAACU,MAAAA,IAAI,EAAE,2BAAP;AAAoCV,MAAAA,WAAW,EAAXA;AAApC,KAA1B;AAAA,GAHG;AAInBuB,EAAAA,YAAY,EAAE,sBAACN,KAAD;AAAA,WAAoB;AAACP,MAAAA,IAAI,EAAE,+BAAP;AAAwCO,MAAAA,KAAK,EAALA;AAAxC,KAApB;AAAA,GAJK;AAKnBO,EAAAA,gBAAgB,EAAE,0BAACtB,UAAD;AAAA,WAA0B;AAACQ,MAAAA,IAAI,EAAE,0BAAP;AAAmCR,MAAAA,UAAU,EAAVA;AAAnC,KAA1B;AAAA,GALC;AAMnBuB,EAAAA,cAAc,EAAE,wBAACvB,UAAD,EAAsBW,EAAtB;AAAA,WAAsC;AAACH,MAAAA,IAAI,EAAE,0BAAP;AAAmCR,MAAAA,UAAU,EAAVA,UAAnC;AAA+CW,MAAAA,EAAE,EAAFA;AAA/C,KAAtC;AAAA,GANG;AAOnBa,EAAAA,UAAU,EAAE,oBAACtB,OAAD;AAAA,WAAwC;AAACM,MAAAA,IAAI,EAAE,sBAAP;AAA+BN,MAAAA,OAAO,EAAPA;AAA/B,KAAxC;AAAA,GAPO;AAQnBuB,EAAAA,SAAS,EAAE,mBAACrB,IAAD;AAAA,WAAmB;AAACI,MAAAA,IAAI,EAAE,qBAAP;AAA8BJ,MAAAA,IAAI,EAAJA;AAA9B,KAAnB;AAAA;AARQ,CAAhB;AAeP,OAAO,IAAMsB,QAAQ,GAAG,SAAXA,QAAW,CAAC5B,WAAD,EAAsBD,QAAtB,EAAwCO,IAAxC;AAAA;AAAA,wEAAuE,iBAAOuB,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3FA,cAAAA,QAAQ,CAACV,OAAO,CAACG,cAAR,CAAuBtB,WAAvB,CAAD,CAAR;AACA6B,cAAAA,QAAQ,CAACV,OAAO,CAACK,gBAAR,CAAyB,IAAzB,CAAD,CAAR;AACAK,cAAAA,QAAQ,CAACV,OAAO,CAACQ,SAAR,CAAkBrB,IAAlB,CAAD,CAAR;AAJ2F;AAAA,qBAKxEV,QAAQ,CAACgC,QAAT,CAAkB5B,WAAlB,EAA+BD,QAA/B,EAAyCO,IAAzC,CALwE;;AAAA;AAKrFwB,cAAAA,IALqF;AAM3FD,cAAAA,QAAQ,CAACV,OAAO,CAACK,gBAAR,CAAyB,KAAzB,CAAD,CAAR;AACAK,cAAAA,QAAQ,CAACV,OAAO,CAACE,QAAR,CAAiBS,IAAI,CAACC,KAAtB,CAAD,CAAR;AACAF,cAAAA,QAAQ,CAACV,OAAO,CAACI,YAAR,CAAqBO,IAAI,CAACE,UAA1B,CAAD,CAAR;;AAR2F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvE;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAWP,OAAO,IAAMN,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA,yEAAoB,kBAAOG,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1CA,cAAAA,QAAQ,CAACV,OAAO,CAACK,gBAAR,CAAyB,IAAzB,CAAD,CAAR;AAF0C;AAAA,qBAGvB5B,QAAQ,CAAC8B,UAAT,EAHuB;;AAAA;AAGpCI,cAAAA,IAHoC;AAI1CD,cAAAA,QAAQ,CAACV,OAAO,CAACK,gBAAR,CAAyB,KAAzB,CAAD,CAAR;AACAK,cAAAA,QAAQ,CAACV,OAAO,CAACO,UAAR,CAAmBI,IAAI,CAACC,KAAxB,CAAD,CAAR;;AAL0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAQP,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAACnB,MAAD;AAAA;AAAA,yEAAkC,kBAAOe,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpDA,cAAAA,QAAQ,CAACV,OAAO,CAACM,cAAR,CAAuB,IAAvB,EAA6BX,MAA7B,CAAD,CAAR;AADoD;AAAA,qBAEjClB,QAAQ,CAACqC,MAAT,CAAgBnB,MAAhB,CAFiC;;AAAA;AAE9CgB,cAAAA,IAF8C;AAGhDD,cAAAA,QAAQ,CAACV,OAAO,CAACC,aAAR,CAAsBN,MAAtB,CAAD,CAAR;AACAe,cAAAA,QAAQ,CAACV,OAAO,CAACM,cAAR,CAAuB,KAAvB,EAA8BX,MAA9B,CAAD,CAAR;;AAJgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;AAOP,OAAO,IAAMoB,QAAQ,GAAG,SAAXA,QAAW,CAACpB,MAAD;AAAA;AAAA,yEAAkC,kBAAOe,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtDA,cAAAA,QAAQ,CAACV,OAAO,CAACM,cAAR,CAAuB,IAAvB,EAA6BX,MAA7B,CAAD,CAAR;AADsD;AAAA,qBAEnClB,QAAQ,CAACsC,QAAT,CAAkBpB,MAAlB,CAFmC;;AAAA;AAEhDgB,cAAAA,IAFgD;AAGlDD,cAAAA,QAAQ,CAACV,OAAO,CAACC,aAAR,CAAsBN,MAAtB,CAAD,CAAR;AACAe,cAAAA,QAAQ,CAACV,OAAO,CAACM,cAAR,CAAuB,KAAvB,EAA8BX,MAA9B,CAAD,CAAR;;AAJkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlC;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAOP,eAAeP,aAAf","sourcesContent":["import {UsersAPI} from \"../api/api\";\r\nimport { InferActionsTypes, ThunkType } from \"./store-redux\";\r\n\r\ntype UsersDataItemType = {\r\n    name: string | null,\r\n    id: number,\r\n    photos: {\r\n      small: string | null,\r\n      large: string | null\r\n    },\r\n    status: string | null,\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UsersDataItemType>,\r\n    pageSize: 100,\r\n    currentPage: 1,\r\n    pageCount: 0,\r\n    isFetching: true,\r\n    toggleProgressArr: [] as Array<number>,\r\n    friends: [] as Array<UsersDataItemType>,\r\n    filter: {\r\n        term: ''\r\n    }\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\n\r\nlet users_reducer = (state = initialState, action: ActionsType) : InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Users/SWITCH_FOLLOW': {\r\n\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map( u => {\r\n                        if(u.id === action.userId){\r\n                            return {...u, followed: !u.followed}\r\n                        }\r\n                        return u\r\n                    })\r\n                }\r\n        }\r\n        case 'SN/Users/SET_USERS': {\r\n            return { ...state, usersData: [...action.users]}\r\n        }\r\n        case 'SN/Users/SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/Users/SET_TOTAL_PAGE_COUNT': {\r\n            return { ...state, pageCount: action.count}\r\n        }\r\n        case 'SN/Users/TOGGLE_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/Users/TOGGLE_PROGRESS': {\r\n            const ID = action.id\r\n            return {\r\n                ...state,\r\n                toggleProgressArr: action.type\r\n                    ? [...state.toggleProgressArr, action.id]\r\n                    : state.toggleProgressArr.filter(id =>  id != ID)\r\n            } \r\n        }\r\n        case 'SN/Users/GET_FRIENDS': {\r\n\r\n            return {\r\n                ...state,\r\n                friends: [...action.friends] as Array<UsersDataItemType>\r\n            }\r\n        }\r\n        case 'SN/Users/GET_FILTER': {\r\n            return {\r\n                ...state,\r\n                filter: {term: action.term}\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    switch_follow: (userId: number) => ({type: 'SN/Users/SWITCH_FOLLOW', userId} as const),\r\n    setUsers: (users: Array<UsersDataItemType>) => ({type: 'SN/Users/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/Users/SET_CURRENT_PAGE', currentPage} as const),\r\n    setPageCount: (count: number) => ({type: 'SN/Users/SET_TOTAL_PAGE_COUNT', count} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/Users/TOGGLE_FETCHING', isFetching} as const),\r\n    toggleProgress: (isFetching: boolean, id: number) => ({type: 'SN/Users/TOGGLE_PROGRESS', isFetching, id} as const),\r\n    getFriends: (friends: Array<UsersDataItemType>) => ({type: 'SN/Users/GET_FRIENDS', friends} as const),\r\n    getFilter: (term: string) => ({type: 'SN/Users/GET_FILTER', term} as const)\r\n}\r\n\r\n\r\n\r\ntype getThunkType = ThunkType<ActionsType >\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number, term: string): getThunkType => async (dispatch)  => {\r\n\r\n    dispatch(actions.setCurrentPage(currentPage))\r\n    dispatch(actions.toggleIsFetching(true))\r\n    dispatch(actions.getFilter(term))\r\n    const data = await UsersAPI.getUsers(currentPage, pageSize, term)\r\n    dispatch(actions.toggleIsFetching(false))\r\n    dispatch(actions.setUsers(data.items))\r\n    dispatch(actions.setPageCount(data.totalCount))\r\n}\r\n\r\nexport const getFriends = (): getThunkType => async (dispatch)  => {\r\n\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const data = await UsersAPI.getFriends()\r\n    dispatch(actions.toggleIsFetching(false))\r\n    dispatch(actions.getFriends(data.items))\r\n}\r\n\r\nexport const follow = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleProgress(true, userId))\r\n    const data = await UsersAPI.follow(userId)\r\n        dispatch(actions.switch_follow(userId))\r\n        dispatch(actions.toggleProgress(false, userId))\r\n}\r\n\r\nexport const unfollow = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleProgress(true, userId))\r\n    const data = await UsersAPI.unfollow(userId)\r\n        dispatch(actions.switch_follow(userId))\r\n        dispatch(actions.toggleProgress(false, userId))\r\n}\r\n\r\nexport default users_reducer"]},"metadata":{},"sourceType":"module"}