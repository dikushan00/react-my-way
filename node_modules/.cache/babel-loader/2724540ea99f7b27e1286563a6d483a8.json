{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Dialogs\\\\Dialogs.tsx\";\n\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { maxLengthCreater, required } from \"../utils/Validators/validators\";\nimport { Element } from \"../common/FormControl/FormControl\";\nimport mailMain from \"../../img/mailMain.svg\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendMessage } from './../../redux/dialogs_reducer';\nimport { actions } from './../../redux/dialogs_reducer';\nvar Dialogs = React.memo(function (_ref) {\n  var userId = _ref.userId;\n  var dialogsState = useSelector(function (state) {\n    return state.dialogPage;\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogsItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, dialogsState.userData.map(function (user) {\n    return /*#__PURE__*/React.createElement(DialogItem, {\n      props: user,\n      key: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    });\n  })), userId ? /*#__PURE__*/React.createElement(DialogsWindow, {\n    userId: userId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(DialogsMain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }\n  })));\n});\nvar maxLength15 = maxLengthCreater(15);\nvar Textarea = Element(\"textarea\");\n\nvar DialogsForm = function DialogsForm(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: s.inputArea,\n    onSubmit: props.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    placeholder: \"Enter message...\",\n    className: s.input,\n    name: \"newMessageText\",\n    validate: [required, maxLength15],\n    component: Textarea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\n\nvar DialogsFormRedux = reduxForm({\n  form: 'DialogsForm'\n})(DialogsForm);\n\nvar DialogsWindow = function DialogsWindow(_ref2) {\n  var userId = _ref2.userId;\n  var dispatch = useDispatch();\n  var messageData = useSelector(function (state) {\n    return state.dialogPage.messageData;\n  });\n\n  var onAddMessage = function onAddMessage(data) {\n    actions.addMessage(userId, data.newMessageText);\n    sendMessage(11009, data.newMessageText);\n    dispatch(reset('DialogsForm'));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.messages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }\n  }, messageData.map(function (message) {\n    return message.id === Number(userId) && message.messages.map(function (message) {\n      return /*#__PURE__*/React.createElement(Message, {\n        props: message,\n        key: message.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 53\n        }\n      });\n    });\n  }), /*#__PURE__*/React.createElement(DialogsFormRedux, {\n    onSubmit: onAddMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar DialogsMain = function DialogsMain() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      padding: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: mailMain,\n    alt: \"Photo\",\n    style: {\n      width: \"200px\",\n      marginLeft: \"100px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Dialogs/Dialogs.tsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","reset","maxLengthCreater","required","Element","useDispatch","useSelector","sendMessage","actions","Dialogs","memo","userId","dialogsState","state","dialogPage","dialogs","dialogsItems","userData","map","user","id","maxLength15","Textarea","DialogsForm","props","inputArea","handleSubmit","input","DialogsFormRedux","form","DialogsWindow","dispatch","messageData","onAddMessage","data","addMessage","newMessageText","messages","message","Number","DialogsMain","display","padding","mailMain","width","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA6CC,KAA7C,QAAyD,YAAzD;AACA,SAAQC,gBAAR,EAA0BC,QAA1B,QAAyC,gCAAzC;AACA,SAAQC,OAAR,QAAsB,mCAAtB;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAGA,IAAMC,OAA4B,GAAGd,KAAK,CAACe,IAAN,CAAW,gBAAc;AAAA,MAAZC,MAAY,QAAZA,MAAY;AAE1D,MAAMC,YAAY,GAAGN,WAAW,CAAC,UAACO,KAAD;AAAA,WAAyBA,KAAK,CAACC,UAA/B;AAAA,GAAD,CAAhC;AAEA,sBACI,uDACI;AAAK,IAAA,SAAS,EAAElB,CAAC,CAACmB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEnB,CAAC,CAACoB,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,YAAY,CAACK,QAAb,CAAsBC,GAAtB,CAA0B,UAACC,IAAD;AAAA,wBACvB,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEA,IAAnB;AAAyB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB;AAAA,GAA1B,CADL,CADJ,EAQQT,MAAM,gBACA,oBAAC,aAAD;AAAgB,IAAA,MAAM,EAAIA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,gBAEA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVd,CADJ,CADJ;AAkBH,CAtBoC,CAArC;AAwBA,IAAIU,WAAW,GAAGnB,gBAAgB,CAAC,EAAD,CAAlC;AACA,IAAMoB,QAAQ,GAAGlB,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMmB,WAA8D,GAAG,SAAjEA,WAAiE,CAACC,KAAD,EAAW;AAC9E,sBACI;AAAM,IAAA,SAAS,EAAE5B,CAAC,CAAC6B,SAAnB;AAA8B,IAAA,QAAQ,EAAED,KAAK,CAACE,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,kBAAnB;AAAsC,IAAA,SAAS,EAAE9B,CAAC,CAAC+B,KAAnD;AAA0D,IAAA,IAAI,EAAC,gBAA/D;AAAgF,IAAA,QAAQ,EAAE,CAACxB,QAAD,EAAWkB,WAAX,CAA1F;AAAmH,IAAA,SAAS,EAAEC,QAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ;AAMH,CAPD;;AAQA,IAAMM,gBAAgB,GAAG5B,SAAS,CAAuB;AAAC6B,EAAAA,IAAI,EAAE;AAAP,CAAvB,CAAT,CAAuDN,WAAvD,CAAzB;;AAEA,IAAMO,aAA0C,GAAG,SAA7CA,aAA6C,QAAc;AAAA,MAAZnB,MAAY,SAAZA,MAAY;AAE7D,MAAMoB,QAAQ,GAAG1B,WAAW,EAA5B;AACA,MAAM2B,WAAW,GAAG1B,WAAW,CAAC,UAACO,KAAD;AAAA,WAAyBA,KAAK,CAACC,UAAN,CAAiBkB,WAA1C;AAAA,GAAD,CAA/B;;AAEA,MAAIC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAoC;AACnD1B,IAAAA,OAAO,CAAC2B,UAAR,CAAmBxB,MAAnB,EAA2BuB,IAAI,CAACE,cAAhC;AACA7B,IAAAA,WAAW,CAAC,KAAD,EAAQ2B,IAAI,CAACE,cAAb,CAAX;AACAL,IAAAA,QAAQ,CAAC9B,KAAK,CAAC,aAAD,CAAN,CAAR;AACH,GAJD;;AAMA,sBAAO;AAAK,IAAA,SAAS,EAAEL,CAAC,CAACyC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECL,WAAW,CAACd,GAAZ,CAAgB,UAACoB,OAAD,EAAa;AACzB,WAAOA,OAAO,CAAClB,EAAR,KAAemB,MAAM,CAAC5B,MAAD,CAArB,IACH2B,OAAO,CAACD,QAAR,CAAiBnB,GAAjB,CAAqB,UAAAoB,OAAO;AAAA,0BAAI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEA,OAAhB;AAAyB,QAAA,GAAG,EAAEA,OAAO,CAAClB,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ;AAAA,KAA5B,CADJ;AAGH,GAJD,CAFD,eAQH,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEa,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARG,CAAP;AAUH,CArBD;;AAuBA,IAAMO,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtB,sBAAO;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,MAAV;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAK,IAAA,GAAG,EAAEC,QAAV;AAAoB,IAAA,GAAG,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,OAAP;AAAgBC,MAAAA,UAAU,EAAE;AAA5B,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAP;AAGH,CALD;;AAOA,eAAepC,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm, InjectedFormProps, reset} from \"redux-form\";\r\nimport {maxLengthCreater, required} from \"../utils/Validators/validators\";\r\nimport {Element} from \"../common/FormControl/FormControl\";\r\nimport mailMain from \"../../img/mailMain.svg\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sendMessage } from './../../redux/dialogs_reducer';\r\nimport { actions } from './../../redux/dialogs_reducer';\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\nconst Dialogs: React.FC<PropsType> = React.memo(({userId}) => {\r\n\r\n    const dialogsState = useSelector((state: AppStateType) => state.dialogPage)\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsState.userData.map((user) =>\r\n                        <DialogItem props={user} key={user.id}/>\r\n                    )}\r\n                </div>\r\n                \r\n                {\r\n                    userId \r\n                        ? <DialogsWindow  userId = {userId}/> \r\n                        : <DialogsMain />\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nlet maxLength15 = maxLengthCreater(15);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst DialogsForm: React.FC<InjectedFormProps<DialogFormValuesType>> = (props) => {\r\n    return (\r\n        <form className={s.inputArea} onSubmit={props.handleSubmit}>\r\n            <Field placeholder='Enter message...' className={s.input} name='newMessageText' validate={[required, maxLength15]} component={Textarea}/>\r\n            <button className=\"btn\">Send</button>\r\n        </form>\r\n    )\r\n}\r\nconst DialogsFormRedux = reduxForm<DialogFormValuesType>({form: 'DialogsForm'})(DialogsForm)\r\n\r\nconst DialogsWindow: React.FC<DialogsWindowType> = ({userId}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const messageData = useSelector((state: AppStateType) => state.dialogPage.messageData)\r\n\r\n    let onAddMessage = (data: {newMessageText: string}) => {\r\n        actions.addMessage(userId, data.newMessageText);\r\n        sendMessage(11009, data.newMessageText)\r\n        dispatch(reset('DialogsForm'))\r\n    }\r\n\r\n    return <div className={s.messages}>\r\n        {\r\n            messageData.map((message) => {\r\n                return message.id === Number(userId) &&\r\n                    message.messages.map(message => <Message props={message} key={message.id}/>\r\n                )\r\n            })\r\n        }\r\n        <DialogsFormRedux onSubmit={onAddMessage}/>\r\n    </div>\r\n}\r\n\r\nconst DialogsMain = () => {\r\n\r\n    return <div style={{display: 'flex', padding: \"10px\"}}>\r\n        <img src={mailMain} alt=\"Photo\" style={{width:\"200px\", marginLeft: \"100px\"}}/>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\ntype DialogFormValuesType = {\r\n    newMessageText: string\r\n}\r\ntype PropsType = {\r\n    userId: number\r\n}\r\ntype DialogsWindowType = {\r\n    userId: number\r\n}"]},"metadata":{},"sourceType":"module"}