{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfilInfo.tsx\";\n\nimport React, { useState } from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport { ProfileDataFormRedux } from \"./ProfileDataForm\";\nimport 'react-image-crop/dist/ReactCrop.css';\nimport AvatarPhoto from './AvatarPhoto';\nimport ProfileData from './ProfileData';\nimport photoUser from \"../../../img/user.svg\";\nimport { useSelector } from 'react-redux';\n\nvar ProfileInfo = function ProfileInfo(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var users = useSelector(function (state) {\n    return state.usersPage.usersData;\n  });\n  var toggleProgressArr = useSelector(function (state) {\n    return state.usersPage.toggleProgressArr;\n  });\n  console.log(users);\n\n  var onSubmit = function onSubmit(data) {\n    props.saveProfile(data).then(function () {\n      setEditMode(false);\n    });\n  };\n\n  if (!props.profile) {\n    return /*#__PURE__*/React.createElement(Preloader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }\n    });\n  }\n\n  var switch_follow = function switch_follow(followed, userId) {\n    if (followed) {\n      props.unfollow(userId);\n    } else {\n      props.follow(userId);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.descriptionBlock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, props.isOwner ? /*#__PURE__*/React.createElement(AvatarPhoto, {\n    avatar: props.profile.photos.large,\n    fullName: props.profile.fullName,\n    isOwner: props.isOwner,\n    updatePhoto: props.updatePhoto,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }\n  }) //@ts-ignore\n  :\n  /*#__PURE__*/\n  React.createElement(\"img\", {\n    src: props.profile.photos.large ? props.profile.photos.large : photoUser,\n    className: s.avaImg,\n    alt: \"PHOTO\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginLeft: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }\n  }, props.profile.fullName || 'unknown user ')), /*#__PURE__*/React.createElement(ProfileStatusWithHooks, {\n    status: props.status,\n    updateStatus: props.updateStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }))), editMode //@ts-ignore\n  ?\n  /*#__PURE__*/\n  React.createElement(ProfileDataFormRedux, {\n    initialValues: props.profile,\n    profile: props.profile,\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(ProfileData, {\n    profile: props.profile,\n    onEditMode: function onEditMode() {\n      return setEditMode(true);\n    },\n    isOwner: props.isOwner,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }), !props.isOwner && users.map(function (user) {\n    debugger;\n\n    if (props.profile && user.id === +props.profile.userId) {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        className: s.btnFollow + ' ' + (user.followed ? s.btnBlue : s.btnRed),\n        onClick: function onClick() {\n          return switch_follow(user.followed, user.id);\n        },\n        disabled: toggleProgressArr.some(function (id) {\n          return id === user.id;\n        }),\n        key: user.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 40\n        }\n      }, \" \", user.followed ? \"Unfollow\" : \"Follow\");\n    }\n  })));\n};\n\nexport default ProfileInfo;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Profile/ProfileInfo/ProfilInfo.tsx"],"names":["React","useState","s","Preloader","ProfileStatusWithHooks","ProfileDataFormRedux","AvatarPhoto","ProfileData","useSelector","ProfileInfo","props","editMode","setEditMode","users","state","usersPage","usersData","toggleProgressArr","console","log","onSubmit","data","saveProfile","then","profile","switch_follow","followed","userId","unfollow","follow","descriptionBlock","display","isOwner","photos","large","fullName","updatePhoto","photoUser","avaImg","marginLeft","status","updateStatus","map","user","id","btnFollow","btnBlue","btnRed","some"],"mappings":"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","sourcesContent":["import React, { RefObject, useState } from 'react';\r\nimport  s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {ProfileDataFormRedux} from \"./ProfileDataForm\"\r\nimport { ProfileType, SaveProfileType, ContactsType } from '../../../Types/Types';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport AvatarPhoto from './AvatarPhoto';\r\nimport ProfileData from './ProfileData';\r\nimport photoUser from '../../../img/user.svg'\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\n\r\nconst ProfileInfo:React.FC<PropsType> = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const users = useSelector((state: AppStateType) => state.usersPage.usersData)\r\n    const toggleProgressArr = useSelector((state: AppStateType) => state.usersPage.toggleProgressArr)\r\n\r\n    console.log(users)\r\n    \r\n    const onSubmit = (data: SaveProfileType) => {\r\n        props.saveProfile(data).then(() => {\r\n            setEditMode(false)\r\n        });\r\n    }\r\n        if (!props.profile){\r\n            return <Preloader />\r\n        }\r\n\r\n    const switch_follow = (followed: boolean, userId: number) => {\r\n        if (followed) {\r\n            props.unfollow(userId)\r\n        } else {\r\n            props.follow(userId)\r\n        }\r\n    }\r\n\r\n        return (<div>\r\n            <div className={s.descriptionBlock}>\r\n                <div style={{display:'flex'}}>\r\n                    {\r\n                        props.isOwner \r\n                            ? <AvatarPhoto \r\n                                avatar = {props.profile.photos.large} \r\n                                fullName = {props.profile.fullName} \r\n                                isOwner = {props.isOwner}\r\n                                updatePhoto = {props.updatePhoto}/>\r\n                                //@ts-ignore\r\n                            : <img src = {props.profile.photos.large ? props.profile.photos.large : photoUser} className = {s.avaImg} alt=\"PHOTO\"/>\r\n                    }\r\n                    <div style={{marginLeft:\"20px\"}}>\r\n                        <p><b>{props.profile.fullName || 'unknown user '}</b></p>\r\n                        <ProfileStatusWithHooks status = {props.status} updateStatus = {props.updateStatus}/>\r\n                    </div>\r\n                </div>\r\n                {\r\n                editMode \r\n                //@ts-ignore\r\n                    ? <ProfileDataFormRedux initialValues = {props.profile} profile = {props.profile} onSubmit = {onSubmit}/>\r\n                    : <ProfileData profile = {props.profile} onEditMode = {() => setEditMode(true)} isOwner={props.isOwner}/>\r\n                }\r\n                {\r\n                    !props.isOwner\r\n                        && users.map(user => {\r\n                            debugger\r\n                            if(props.profile && user.id === +props.profile.userId) {\r\n                                return <button className={s.btnFollow + ' ' + (user.followed ? s.btnBlue : s.btnRed)} onClick={() => switch_follow(user.followed, user.id)}\r\n                                    disabled={toggleProgressArr.some(id => id === user.id)} key = {user.id}> {user.followed ? \"Unfollow\" : \"Follow\"}\r\n                                </button>\r\n                            }\r\n                        })\r\n                }\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    isOwner: boolean\r\n    status: string\r\n\r\n    updatePhoto: (file: File) => void\r\n    saveProfile: (data: SaveProfileType) => Promise<SaveProfileType>\r\n    updateStatus: (data: string) => void\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}"]},"metadata":{},"sourceType":"module"}