{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\HOC\\\\withAuthRedirect.tsx\";\n\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nexport var withAuthRedirect = function withAuthRedirect(Component) {\n  var RedirectComponent = function RedirectComponent(props) {\n    var isAuth = useSelector(function (state) {\n      return state.auth.isAuth;\n    });\n\n    if (!isAuth) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }\n    }));\n  };\n\n  return RedirectComponent;\n};","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/HOC/withAuthRedirect.tsx"],"names":["React","Redirect","useSelector","withAuthRedirect","Component","RedirectComponent","props","isAuth","state","auth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAASC,WAAT,QAA2B,aAA3B;AAIA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAoC;AAEhE,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAgB;AACtC,QAAMC,MAAM,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,aAAyBA,KAAK,CAACC,IAAN,CAAWF,MAApC;AAAA,KAAD,CAA1B;;AAEA,QAAI,CAACA,MAAL,EAAa;AACT,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,wBAAO,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GARD;;AAUA,SAAOD,iBAAP;AACH,CAbM","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/store-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n    \r\n    const RedirectComponent = (props: any) => {\r\n        const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\r\n        if (!isAuth) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    return RedirectComponent\r\n}"]},"metadata":{},"sourceType":"module"}