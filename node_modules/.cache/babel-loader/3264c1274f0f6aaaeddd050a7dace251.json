{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { UsersAPI } from \"../api/api\";\nvar SWITCH_FOLLOW = \"SWITCH_FOLLOW\";\nvar SET_USERS = \"SET_USERS\";\nvar SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nvar SET_TOTAL_PAGE_COUNT = \"SET_TOTAL_PAGE_COUNT\";\nvar TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\nvar TOGGLE_PROGRESS = \"TOGGLE_PROGRESS\";\nvar initialState = {\n  usersData: [],\n  pageSize: 100,\n  currentPage: 1,\n  pageCount: 0,\n  isFetching: true,\n  toggleProgressArr: []\n};\n\nvar users_reducer = function users_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SWITCH_FOLLOW:\n      {\n        return _objectSpread({}, state, {\n          usersData: state.usersData.map(function (u) {\n            if (u.id === action.userId) {\n              return _objectSpread({}, u, {\n                followed: !u.followed\n              });\n            }\n\n            return u;\n          })\n        });\n        return state;\n      }\n\n    case SET_USERS:\n      {\n        return _objectSpread({}, state, {\n          usersData: _toConsumableArray(action.users)\n        });\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.currentPage\n        });\n      }\n\n    case SET_TOTAL_PAGE_COUNT:\n      {\n        return _objectSpread({}, state, {\n          pageCount: action.count\n        });\n      }\n\n    case TOGGLE_FETCHING:\n      {\n        return _objectSpread({}, state, {\n          isFetching: action.isFetching\n        });\n      }\n\n    case TOGGLE_PROGRESS:\n      {\n        return _objectSpread({}, state, {\n          toggleProgressArr: action.isFetching ? [].concat(_toConsumableArray(state.toggleProgressArr), [action.id]) : state.toggleProgressArr.filter(function (id) {\n            return id != action.id;\n          })\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var switch_follow = function switch_follow(userId) {\n  return {\n    type: SWITCH_FOLLOW,\n    userId: userId\n  };\n};\nexport var setUsers = function setUsers(users) {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport var setCurrentPage = function setCurrentPage(currentPage) {\n  return {\n    type: SET_CURRENT_PAGE,\n    currentPage: currentPage\n  };\n};\nexport var setPageCount = function setPageCount(count) {\n  return {\n    type: SET_TOTAL_PAGE_COUNT,\n    count: count\n  };\n};\nexport var toggleIsFetching = function toggleIsFetching(isFetching) {\n  return {\n    type: TOGGLE_FETCHING,\n    isFetching: isFetching\n  };\n};\nexport var toggleProgress = function toggleProgress(isFetching, id) {\n  return {\n    type: TOGGLE_PROGRESS,\n    isFetching: isFetching,\n    id: id\n  };\n};\nexport var getUsers = function getUsers(currentPage, pageSize) {\n  return function (dispatch) {\n    dispatch(setCurrentPage(currentPage));\n    dispatch(toggleIsFetching(true));\n    UsersAPI.getUsers(currentPage, pageSize).then(function (data) {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setPageCount(data.totalCount));\n    });\n  };\n};\nexport var follow = function follow(userId) {\n  return function (dispatch) {\n    dispatch(toggleProgress(true, userId));\n    UsersAPI.follow(userId).then(function (data) {\n      dispatch(switch_follow(userId));\n      dispatch(toggleProgress(false, userId));\n    });\n  };\n};\nexport var unfollow = function unfollow(userId) {\n  return function (dispatch) {\n    dispatch(toggleProgress(true, userId));\n    UsersAPI.unfollow(userId).then(function (data) {\n      dispatch(switch_follow(userId));\n      dispatch(toggleProgress(false, userId));\n    });\n  };\n};\nexport default users_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/users_reducer.ts"],"names":["UsersAPI","SWITCH_FOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_PAGE_COUNT","TOGGLE_FETCHING","TOGGLE_PROGRESS","initialState","usersData","pageSize","currentPage","pageCount","isFetching","toggleProgressArr","users_reducer","state","action","type","map","u","id","userId","followed","users","count","filter","switch_follow","setUsers","setCurrentPage","setPageCount","toggleIsFetching","toggleProgress","getUsers","dispatch","then","data","items","totalCount","follow","unfollow"],"mappings":"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","sourcesContent":["import {UsersAPI} from \"../api/api\";\r\n\r\nconst SWITCH_FOLLOW = \"SWITCH_FOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_PAGE_COUNT = \"SET_TOTAL_PAGE_COUNT\";\r\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\r\nconst TOGGLE_PROGRESS = \"TOGGLE_PROGRESS\";\r\n\r\ntype UsersDataItemType = {\r\n    name: string,\r\n    id: number,\r\n    photos: {\r\n      small: string | null,\r\n      large: string | null\r\n    },\r\n    status: string | null,\r\n    followed: boolean\r\n}\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UsersDataItemType>,\r\n    pageSize: 100,\r\n    currentPage: 1,\r\n    pageCount: 0,\r\n    isFetching: true,\r\n    toggleProgressArr: []\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nlet users_reducer = (state = initialState, action: any) : InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SWITCH_FOLLOW: {\r\n\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map( u => {\r\n                        if(u.id === action.userId){\r\n                            return {...u, followed: !u.followed}\r\n                        }\r\n                        return u\r\n                    })\r\n                }\r\n\r\n            return state\r\n\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, usersData: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_PAGE_COUNT: {\r\n            return { ...state, pageCount: action.count}\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                toggleProgressArr: action.isFetching\r\n                    ? [...state.toggleProgressArr, action.id]\r\n                    : state.toggleProgressArr.filter(id =>  id != action.id)\r\n            } as InitialStateType\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\ntype Switch_followType = {\r\n    type: typeof SWITCH_FOLLOW\r\n    userId: number\r\n}\r\nexport const switch_follow = (userId: number): Switch_followType => ({type: SWITCH_FOLLOW, userId})\r\n\r\ntype SetUsersType = {\r\n    type: typeof SET_USERS\r\n    users: UsersDataItemType\r\n}\r\nexport const setUsers = (users: UsersDataItemType): SetUsersType => ({type: SET_USERS, users})\r\n\r\ntype SetCurrentPageType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage})\r\n\r\ntype SetPageCountType = {\r\n    type: typeof SET_TOTAL_PAGE_COUNT\r\n    count: number\r\n}\r\nexport const setPageCount = (count: number): SetPageCountType => ({type: SET_TOTAL_PAGE_COUNT, count})\r\n\r\ntype ToggleIsFetchingType = {\r\n    type: typeof TOGGLE_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType => ({type: TOGGLE_FETCHING, isFetching})\r\n\r\ntype ToggleProgressType = {\r\n    type: typeof TOGGLE_PROGRESS\r\n    isFetching: boolean\r\n    id: number\r\n}\r\nexport const toggleProgress = (isFetching: boolean, id: number): ToggleProgressType => ({type: TOGGLE_PROGRESS, isFetching, id});\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(toggleIsFetching(true))\r\n        UsersAPI.getUsers(currentPage, pageSize).then((data: any) => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setPageCount(data.totalCount))\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleProgress(true, userId))\r\n        UsersAPI.follow(userId).then((data: any) => {\r\n            dispatch(switch_follow(userId))\r\n            dispatch(toggleProgress(false, userId))\r\n        })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleProgress(true, userId))\r\n        UsersAPI.unfollow(userId).then((data: any) => {\r\n            dispatch(switch_follow(userId))\r\n            dispatch(toggleProgress(false, userId))\r\n        })\r\n    }\r\n}\r\n\r\nexport default users_reducer"]},"metadata":{},"sourceType":"module"}