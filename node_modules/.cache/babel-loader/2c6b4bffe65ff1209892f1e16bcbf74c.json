{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { AuthAPI, LoginAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nvar SET_NEW_AUTH = 'SET_NEW_AUTH';\nvar initialState = {\n  id: null,\n  login: null,\n  email: null,\n  isAuth: false\n};\n\nvar header_reducer = function header_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_NEW_AUTH:\n      {\n        return _objectSpread({}, state, action.data);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport var setNewAuth = function setNewAuth(id, login, email, isAuth) {\n  return {\n    type: SET_NEW_AUTH,\n    data: {\n      id: id,\n      login: login,\n      email: email,\n      isAuth: isAuth\n    }\n  };\n};\nexport var checkAuthMe = function checkAuthMe() {\n  return function (dispatch) {\n    AuthAPI.checkAuthMe().then(function (data) {\n      if (data.resultCode === 0) {\n        var _data$data = data.data,\n            id = _data$data.id,\n            login = _data$data.login,\n            email = _data$data.email;\n        dispatch(setNewAuth(id, login, email, true));\n      }\n    });\n  };\n};\nexport var checkLoginMe = function checkLoginMe(email, password, rememberMe) {\n  return function (dispatch) {\n    LoginAPI.checkLogin(email, password, rememberMe).then(function (response) {\n      if (response.data.resultCode === 0) {\n        dispatch(checkAuthMe());\n      } else {\n        var message = response.messages.length > 0 ? response.messages[0] : 'Some error!';\n        dispatch(stopSubmit('login', {\n          _error: message\n        }));\n      }\n    });\n  };\n};\nexport var logoutMe = function logoutMe(dataObj) {\n  return function (dispatch) {\n    LoginAPI.logout().then(function (response) {\n      if (response.data.resultCode === 0) {\n        dispatch(setNewAuth(null, null, null, false));\n      }\n    });\n  };\n};\nexport default header_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/header_reducer.js"],"names":["AuthAPI","LoginAPI","stopSubmit","SET_NEW_AUTH","initialState","id","login","email","isAuth","header_reducer","state","action","type","data","setNewAuth","checkAuthMe","dispatch","then","resultCode","checkLoginMe","password","rememberMe","checkLogin","response","message","messages","length","_error","logoutMe","dataObj","logout"],"mappings":"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","sourcesContent":["import {AuthAPI, LoginAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_NEW_AUTH = 'SET_NEW_AUTH'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nlet header_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_NEW_AUTH: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNewAuth = (id, login, email, isAuth) => ({type: SET_NEW_AUTH, data: {id, login, email, isAuth}})\r\n\r\nexport const checkAuthMe = () => (dispatch) => {\r\n    AuthAPI.checkAuthMe()\r\n        .then((data) => {\r\n            if (data.resultCode === 0) {\r\n                let {id, login, email} = data.data\r\n                dispatch(setNewAuth(id, login, email, true))\r\n            }\r\n        })\r\n\r\n}\r\n\r\nexport const checkLoginMe = (email, password, rememberMe) => (dispatch) => {\r\n    LoginAPI.checkLogin(email, password, rememberMe)\r\n        .then((response) => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(checkAuthMe());\r\n            } else {\r\n                let message = response.messages.length > 0 ? response.messages[0] : 'Some error!'\r\n                dispatch(stopSubmit('login', {_error: message}))\r\n            }\r\n        })\r\n}\r\n\r\nexport const logoutMe = (dataObj) => (dispatch) => {\r\n    LoginAPI.logout()\r\n        .then((response) => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setNewAuth(null, null, null, false))\r\n            }\r\n        })\r\n}\r\n\r\nexport default header_reducer"]},"metadata":{},"sourceType":"module"}