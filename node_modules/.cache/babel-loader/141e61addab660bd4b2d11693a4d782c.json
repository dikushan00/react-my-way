{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Users\\\\UsersSearchForm.tsx\";\n\nimport React from 'react';\nimport { Formik, Field, Form } from 'formik';\n\nvar UsersSearchForm = function UsersSearchForm(props) {\n  var submit = function submit(values, _ref) {\n    var setSubmitting = _ref.setSubmitting;\n    props.onFilterChanged(values.term);\n    setSubmitting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pageArea\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      term: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n      return errors;\n    },\n    onSubmit: submit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      name: \"term\",\n      placeholder: \"Enter name...\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      type: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Find\"));\n  }));\n};\n\nexport default UsersSearchForm;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Users/UsersSearchForm.tsx"],"names":["React","Formik","Field","Form","UsersSearchForm","props","submit","values","setSubmitting","onFilterChanged","term","errors","isSubmitting"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAkC,QAAlC;;AAOA,IAAMC,eAAoC,GAAG,SAAvCA,eAAuC,CAACC,KAAD,EAAW;AAEtD,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,QAA4F;AAAA,QAAtEC,aAAsE,QAAtEA,aAAsE;AACzGH,IAAAA,KAAK,CAACI,eAAN,CAAsBF,MAAM,CAACG,IAA7B;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKE,sBAAO;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEE,MAAAA,IAAI,EAAE;AAAR,KADjB;AAEE,IAAA,QAAQ,EAAE,kBAAAH,MAAM,EAAI;AAClB,UAAMI,MAAM,GAAG,EAAf;AACA,aAAOA,MAAP;AACD,KALH;AAME,IAAA,QAAQ,EAAIL,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG;AAAA,QAAGM,YAAH,SAAGA,YAAH;AAAA,wBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,KAAhC;AAAsC,MAAA,QAAQ,EAAEA,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADD;AAAA,GARH,CADK,CAAP;AAoBH,CA3BD;;AA6BE,eAAeR,eAAf","sourcesContent":["import React from 'react';\r\nimport {Formik, Field, Form} from 'formik'\r\nimport {FilterType} from '../../redux/users_reducer'\r\n\r\ntype PropsType = {\r\n  onFilterChanged: (term: string) => void\r\n}\r\n\r\nconst UsersSearchForm: React.FC<PropsType> = (props) => {\r\n\r\n  const submit = (values: FilterType, {setSubmitting} : {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n    props.onFilterChanged(values.term)\r\n    setSubmitting(false)\r\n  }\r\n  \r\n    return <div className=\"pageArea\">\r\n      <Formik\r\n        initialValues={{ term: ''}}\r\n        validate={values => {\r\n          const errors = {};\r\n          return errors;\r\n        }}\r\n        onSubmit = {submit}\r\n      >\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <Field type=\"text\" name=\"term\" placeholder='Enter name...'/>\r\n            <Field type=\"\"/>\r\n            <button type=\"submit\" className=\"btn\" disabled={isSubmitting}>\r\n              Find\r\n            </button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n}\r\n  \r\n  export default UsersSearchForm;"]},"metadata":{},"sourceType":"module"}