{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\AvatarPhoto.tsx\";\n\nimport s from './ProfileInfo.module.css';\nimport photoUser from \"../../../img/user.svg\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport React, { useState } from 'react';\n\nvar AvatarPhoto = function AvatarPhoto(_ref) {\n  var avatar = _ref.avatar,\n      fullName = _ref.fullName;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isBigMode = _useState2[0],\n      setBigMode = _useState2[1];\n\n  if (isBigMode) {\n    document.body.classList.add('pop_overflow');\n  } else {\n    document.body.classList.remove('pop_overflow');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.avaArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatar || photoUser,\n    alt: \"photo\",\n    className: s.avaImg,\n    onClick: function onClick() {\n      return setBigMode(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: s.avaHover,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  })), isBigMode && /*#__PURE__*/React.createElement(AvatarBigMode, {\n    isBigMode: isBigMode,\n    setBigMode: setBigMode,\n    avatarPhoto: avatar,\n    fullName: fullName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 20\n    }\n  }));\n};\n\nvar AvatarBigMode = function AvatarBigMode(_ref2) {\n  var isBigMode = _ref2.isBigMode,\n      setBigMode = _ref2.setBigMode,\n      avatarPhoto = _ref2.avatarPhoto,\n      fullName = _ref2.fullName;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"overlay\",\n    className: isBigMode ? \"overlay\" : '',\n    onClick: function onClick() {\n      return setBigMode(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: isBigMode ? s.BigModeArea : '',\n    id: s.BigModeArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatarPhoto ? avatarPhoto : photoUser,\n    alt: \"PHOTO\",\n    className: s.postImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.rightContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"60px\",\n      borderBottom: \"1px solid #ccc\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: s.user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, fullName)))), /*#__PURE__*/React.createElement(\"span\", {\n    className: s.closeBig,\n    onClick: function onClick() {\n      return setBigMode(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default AvatarPhoto;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Profile/ProfileInfo/AvatarPhoto.tsx"],"names":["s","FontAwesomeIcon","faSearch","React","useState","AvatarPhoto","avatar","fullName","isBigMode","setBigMode","document","body","classList","add","remove","avaArea","photoUser","avaImg","avaHover","AvatarBigMode","avatarPhoto","BigModeArea","display","alignItems","postImg","rightContent","height","borderBottom","user","closeBig"],"mappings":"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","sourcesContent":["import  s from './ProfileInfo.module.css'\r\nimport photoUser from '../../../img/user.svg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport  React, { useState } from 'react';\r\n\r\nconst AvatarPhoto: React.FC<PropsType> = ({avatar, fullName}) => {\r\n\r\n    const [isBigMode, setBigMode] = useState(false)\r\n\r\n    if(isBigMode) {\r\n        document.body.classList.add('pop_overflow')\r\n    } else {\r\n        document.body.classList.remove('pop_overflow')\r\n    }\r\n\r\n    return <div className={s.avaArea}>\r\n        <img src={ avatar || photoUser } alt=\"photo\" className={s.avaImg} onClick = {() => setBigMode(true)}/>\r\n        <span className = {s.avaHover}>\r\n            <FontAwesomeIcon icon={faSearch} /> \r\n        </span>\r\n        {\r\n            isBigMode \r\n                && <AvatarBigMode isBigMode = {isBigMode} setBigMode = {setBigMode} avatarPhoto = {avatar} fullName = {fullName}/>\r\n        }\r\n    </div>\r\n}\r\n\r\nconst AvatarBigMode: React.FC<BigModeType> = ({ isBigMode, setBigMode, avatarPhoto, fullName}) => {\r\n\r\n    return <div>\r\n    <div id=\"overlay\" className = {isBigMode ? \"overlay\" : ''} onClick={() => setBigMode(false)}></div>\r\n    <div className = {isBigMode  ? s.BigModeArea : ''} id = {s.BigModeArea}>\r\n        <div style = {{ display: \"flex\", alignItems: \"center\"}} >\r\n            <img src={avatarPhoto ? avatarPhoto : photoUser} alt=\"PHOTO\" className = {s.postImg}/>\r\n        </div>\r\n        <div className = {s.rightContent} >\r\n            <span style = {{display: \"flex\", alignItems: \"center\", height: \"60px\", borderBottom: \"1px solid #ccc\"}}>\r\n                <span className={s.user}>{fullName}</span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <span className = {s.closeBig} onClick={() => setBigMode(false)}></span>\r\n    </div>\r\n}\r\n\r\ntype PropsType = {\r\n    avatar: string | null\r\n    fullName: string\r\n}\r\n\r\ntype BigModeType = {\r\n    isBigMode: boolean\r\n    avatarPhoto: string | null | undefined\r\n    fullName: string\r\n\r\n    setBigMode: (n: boolean) => void\r\n}\r\n\r\nexport default AvatarPhoto"]},"metadata":{},"sourceType":"module"}