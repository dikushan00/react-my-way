{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Dialogs\\\\Dialogs.tsx\";\n\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreater, required } from \"../utils/Validators/validators\";\nimport { Element } from \"../common/FormControl/FormControl\";\nimport mailMain from \"../../img/mailMain.svg\";\nimport { useDispatch } from 'react-redux';\nimport { sendMessage } from './../../redux/dialogs_reducer';\nvar Dialogs = React.memo(function (props) {\n  var dispatch = useDispatch(); //let sendMessage = useSelector((state: AppStateType) => state.dialogPage.)\n\n  var onAddMessage = function onAddMessage(data) {\n    props.addMessage(props.userId, data.newMessageText);\n    sendMessage(11009, 'hello. how are you?');\n    props.reset('DialogsForm');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogsItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, props.state.userData.map(function (user) {\n    return /*#__PURE__*/React.createElement(DialogItem, {\n      props: user,\n      key: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }\n    });\n  })), props.userId ? /*#__PURE__*/React.createElement(DialogsWindow, {\n    onAddMessage: onAddMessage,\n    state: props.state,\n    userId: props.userId,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(DialogsMain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  })));\n});\nvar maxLength15 = maxLengthCreater(15);\nvar Textarea = Element(\"textarea\");\n\nvar DialogsForm = function DialogsForm(props) {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: s.inputArea,\n    onSubmit: props.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    placeholder: \"Enter message...\",\n    className: s.input,\n    name: \"newMessageText\",\n    validate: [required, maxLength15],\n    component: Textarea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Send\"));\n};\n\nvar DialogsFormRedux = reduxForm({\n  form: 'DialogsForm'\n})(DialogsForm);\n\nvar DialogsWindow = function DialogsWindow(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.messages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }\n  }, props.state.messageData.map(function (message) {\n    return message.id === Number(props.userId) && message.messages.map(function (message) {\n      return /*#__PURE__*/React.createElement(Message, {\n        props: message,\n        key: message.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 53\n        }\n      });\n    });\n  }), /*#__PURE__*/React.createElement(DialogsFormRedux, {\n    onSubmit: props.onAddMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar DialogsMain = function DialogsMain() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      padding: \"10px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: mailMain,\n    alt: \"Photo\",\n    style: {\n      width: \"200px\",\n      marginLeft: \"100px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Dialogs/Dialogs.tsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","maxLengthCreater","required","Element","useDispatch","sendMessage","Dialogs","memo","props","dispatch","onAddMessage","data","addMessage","userId","newMessageText","reset","dialogs","dialogsItems","state","userData","map","user","id","maxLength15","Textarea","DialogsForm","inputArea","handleSubmit","input","DialogsFormRedux","form","DialogsWindow","messages","messageData","message","Number","DialogsMain","display","padding","mailMain","width","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {maxLengthCreater, required} from \"../utils/Validators/validators\";\r\nimport {Element} from \"../common/FormControl/FormControl\";\r\nimport mailMain from \"../../img/mailMain.svg\"\r\nimport {DialogsInitialStateType} from '../../redux/dialogs_reducer'\r\nimport { useDispatch } from 'react-redux';\r\nimport { sendMessage } from './../../redux/dialogs_reducer';\r\n\r\ntype PropsType = {\r\n    state: DialogsInitialStateType\r\n    userId: number\r\n    addMessage: (id: number, str: string) => void\r\n    reset: (form: string) => void\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    let dispatch = useDispatch()\r\n    //let sendMessage = useSelector((state: AppStateType) => state.dialogPage.)\r\n\r\n    let onAddMessage = (data: {newMessageText: string}) => {\r\n        props.addMessage(props.userId, data.newMessageText);\r\n        sendMessage(11009, 'hello. how are you?')\r\n        props.reset('DialogsForm')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {props.state.userData.map((user) =>\r\n                        <DialogItem props={user} key={user.id}/>\r\n                    )}\r\n                </div>\r\n                \r\n                {\r\n                    props.userId \r\n                        ? <DialogsWindow onAddMessage = {onAddMessage} state={props.state} userId = {props.userId}/> \r\n                        : <DialogsMain />\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nlet maxLength15 = maxLengthCreater(15);\r\nconst Textarea = Element(\"textarea\");\r\n\r\ntype DialogFormValuesType = {\r\n    newMessageText: string\r\n}\r\n\r\nconst DialogsForm: React.FC<InjectedFormProps<DialogFormValuesType>> = (props) => {\r\n    return (\r\n        <form className={s.inputArea} onSubmit={props.handleSubmit}>\r\n            <Field placeholder='Enter message...' className={s.input} name='newMessageText' validate={[required, maxLength15]} component={Textarea}/>\r\n            <button className=\"btn\">Send</button>\r\n        </form>\r\n    )\r\n}\r\nconst DialogsFormRedux = reduxForm<DialogFormValuesType>({form: 'DialogsForm'})(DialogsForm)\r\n\r\ntype DialogsWindowType = {\r\n    state: DialogsInitialStateType\r\n    userId: number\r\n    onAddMessage: (data: {newMessageText: string}) => void\r\n}\r\n\r\nconst DialogsWindow: React.FC<DialogsWindowType> = props => {\r\n\r\n    return <div className={s.messages}>\r\n        {\r\n            props.state.messageData.map((message) => {\r\n                return message.id === Number(props.userId) &&\r\n                    message.messages.map(message => <Message props={message} key={message.id}/>\r\n                )\r\n            })\r\n        }\r\n        <DialogsFormRedux onSubmit={props.onAddMessage}/>\r\n    </div>\r\n}\r\n\r\nconst DialogsMain = () => {\r\n\r\n    return <div style={{display: 'flex', padding: \"10px\"}}>\r\n        <img src={mailMain} alt=\"Photo\" style={{width:\"200px\", marginLeft: \"100px\"}}/>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}