{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { checkAuthMe } from \"./header_reducer\";\nimport { check_auth_me } from \"./check_auth_me\";\nvar INIT = 'INIT';\nvar initialState = {\n  initialized: false\n};\n\nvar app_reducer = function app_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INIT:\n      {\n        return _objectSpread({}, state, {\n          initialized: true\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport var initialize = function initialize() {\n  return {\n    type: INIT\n  };\n};\nexport var init = function init() {\n  return function (dispatch) {\n    var promise = dispatch(checkAuthMe());\n    var promise2 = dispatch(check_auth_me());\n    Promise.all([promise]).then(function () {\n      dispatch(initialize());\n    });\n  };\n};\nexport default app_reducer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/app_reducer.js"],"names":["checkAuthMe","check_auth_me","INIT","initialState","initialized","app_reducer","state","action","type","initialize","init","dispatch","promise","promise2","Promise","all","then"],"mappings":";AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,IAAMC,IAAI,GAAG,MAAb;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,IAAIC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAEhD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKN,IAAL;AAAW;AACP,iCACOI,KADP;AAEIF,UAAAA,WAAW,EAAE;AAFjB;AAIH;;AACD;AACI,aAAOE,KAAP;AATR;AAWH,CAbD;;AAeA,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAO;AAACD,IAAAA,IAAI,EAAEN;AAAP,GAAP;AAAA,CAAnB;AAEP,OAAO,IAAMQ,IAAI,GAAG,SAAPA,IAAO;AAAA,SAAM,UAACC,QAAD,EAAc;AACpC,QAAIC,OAAO,GAAGD,QAAQ,CAACX,WAAW,EAAZ,CAAtB;AACA,QAAIa,QAAQ,GAAGF,QAAQ,CAACV,aAAa,EAAd,CAAvB;AAEAa,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACH,OAAD,CAAZ,EACKI,IADL,CACU,YAAM;AACRL,MAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACH,KAHL;AAIH,GARmB;AAAA,CAAb;AAUP,eAAeJ,WAAf","sourcesContent":["import {checkAuthMe} from \"./header_reducer\";\r\nimport {check_auth_me} from \"./check_auth_me\";\r\n\r\nconst INIT = 'INIT'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nlet app_reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case INIT: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initialize = () => ({type: INIT})\r\n\r\nexport const init = () => (dispatch) => {\r\n    let promise = dispatch(checkAuthMe())\r\n    let promise2 = dispatch(check_auth_me())\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initialize());\r\n        })\r\n}\r\n\r\nexport default app_reducer"]},"metadata":{},"sourceType":"module"}