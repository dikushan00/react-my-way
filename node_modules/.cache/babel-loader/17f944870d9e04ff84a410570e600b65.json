{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Profile\\\\ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { check_auth, getStatus, updateStatus, updatePhoto } from \"../../redux/profile_reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nvar ProfileContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProfileContainer, _React$Component);\n\n  function ProfileContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProfileContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProfileContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.refreshProfile = function () {\n      var userId = _this.props.match.params.userId;\n      if (!userId) userId = _this.props.authId;\n\n      _this.props.check_auth(userId);\n\n      _this.props.getStatus(userId);\n    };\n\n    return _this;\n  }\n\n  _createClass(ProfileContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshProfile();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.match.params.userId !== this.props.match.params.userId) {\n        this.refreshProfile();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Profile, {\n        state: this.props.state,\n        status: this.props.status,\n        photo: this.props.photo,\n        updateStatus: this.props.updateStatus,\n        updatePhoto: this.props.updatePhoto,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return ProfileContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.profilePage,\n    status: state.profilePage.status,\n    authId: state.auth.id,\n    isAuth: state.auth.isAuth,\n    photo: state.profilePage.profile.photos.large\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  check_auth: check_auth,\n  getStatus: getStatus,\n  updateStatus: updateStatus,\n  updatePhoto: updatePhoto\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","check_auth","getStatus","updateStatus","updatePhoto","withRouter","compose","ProfileContainer","refreshProfile","userId","props","match","params","authId","prevProps","prevState","state","status","photo","Component","mapStateToProps","profilePage","auth","id","isAuth","profile","photos","large"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,YAA/B,EAA6CC,WAA7C,QAA+D,6BAA/D;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;;IAEMC,gB;;;;;;;;;;;;;;;;UAEFC,c,GAAiB,YAAM;AACnB,UAAIC,MAAM,GAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;AACA,UAAI,CAACA,MAAL,EAAaA,MAAM,GAAG,MAAKC,KAAL,CAAWG,MAApB;;AACb,YAAKH,KAAL,CAAWT,UAAX,CAAsBQ,MAAtB;;AACA,YAAKC,KAAL,CAAWR,SAAX,CAAqBO,MAArB;AACH,K;;;;;;;wCAEmB;AAChB,WAAKD,cAAL;AACH;;;uCAEkBM,S,EAAWC,S,EAAU;AACpC,UAAGD,SAAS,CAACH,KAAV,CAAgBC,MAAhB,CAAuBH,MAAvB,KAAmC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAA9D,EAAqE;AACjE,aAAKD,cAAL;AACH;AACJ;;;6BAEQ;AACL,0BACI,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWM,KAA3B;AAAkC,QAAA,MAAM,EAAI,KAAKN,KAAL,CAAWO,MAAvD;AAA+D,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KAAjF;AAAwF,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWP,YAAjH;AAA+H,QAAA,WAAW,EAAE,KAAKO,KAAL,CAAWN,WAAvJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EAvB0BN,KAAK,CAACqB,S;;AA0BrC,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD;AAAA,SAAY;AAC9BA,IAAAA,KAAK,EAAEA,KAAK,CAACK,WADiB;AAE9BJ,IAAAA,MAAM,EAAED,KAAK,CAACK,WAAN,CAAkBJ,MAFI;AAG9BJ,IAAAA,MAAM,EAAEG,KAAK,CAACM,IAAN,CAAWC,EAHW;AAI9BC,IAAAA,MAAM,EAAER,KAAK,CAACM,IAAN,CAAWE,MAJW;AAK9BN,IAAAA,KAAK,EAAEF,KAAK,CAACK,WAAN,CAAkBI,OAAlB,CAA0BC,MAA1B,CAAiCC;AALV,GAAZ;AAAA,CAAtB;;AAQA,eAAerB,OAAO,CAClBN,OAAO,CAACoB,eAAD,EAAkB;AAACnB,EAAAA,UAAU,EAAVA,UAAD;AAAaC,EAAAA,SAAS,EAATA,SAAb;AAAwBC,EAAAA,YAAY,EAAZA,YAAxB;AAAsCC,EAAAA,WAAW,EAAXA;AAAtC,CAAlB,CADW,EAElBC,UAFkB,CAAP,CAGbE,gBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {check_auth, getStatus, updateStatus, updatePhoto} from \"../../redux/profile_reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) userId = this.props.authId\r\n        this.props.check_auth(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.match.params.userId !==  this.props.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile state={this.props.state} status = {this.props.status} photo={this.props.photo} updateStatus={this.props.updateStatus} updatePhoto={this.props.updatePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    state: state.profilePage,\r\n    status: state.profilePage.status,\r\n    authId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n    photo: state.profilePage.profile.photos.large\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {check_auth, getStatus, updateStatus, updatePhoto}),\r\n    withRouter\r\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}