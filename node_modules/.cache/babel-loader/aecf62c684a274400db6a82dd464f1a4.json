{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\n\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { addMessageActionCreater, updateMessageActionCreater } from \"../../redux/store\";\n\nvar Dialogs = function Dialogs(props) {\n  var addNewMessage = React.createRef();\n\n  var addMessage = function addMessage() {\n    props.dispatch(addMessageActionCreater());\n  };\n\n  var updateMessage = function updateMessage() {\n    var text = addNewMessage.current.value;\n    props.dispatch(updateMessageActionCreater(text));\n  };\n\n  var text = addNewMessage.current.value;\n  console.log(text);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogs,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: s.dialogsItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, props.store.getState().dialogPage.userData.map(function (user) {\n    return /*#__PURE__*/React.createElement(DialogItem, {\n      props: user,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.messages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, props.store.getState().dialogPage.messageData.map(function (message) {\n    return /*#__PURE__*/React.createElement(Message, {\n      props: message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: s.inputArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Enter message...\",\n    className: s.input,\n    onChange: updateMessage,\n    value: props.state.newMessageText,\n    ref: addNewMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: s.btn,\n    onClick: addMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Send\"))));\n};\n\nexport default Dialogs;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","addMessageActionCreater","updateMessageActionCreater","Dialogs","props","addNewMessage","createRef","addMessage","dispatch","updateMessage","text","current","value","console","log","dialogs","dialogsItems","store","getState","dialogPage","userData","map","user","messages","messageData","message","inputArea","input","state","newMessageText","btn"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,uBAAR,EAAiCC,0BAAjC,QAAkE,mBAAlE;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAEvB,MAAIC,aAAa,GAAGR,KAAK,CAACS,SAAN,EAApB;;AAEA,MAAIC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACnBH,IAAAA,KAAK,CAACI,QAAN,CAAeP,uBAAuB,EAAtC;AACH,GAFD;;AAIA,MAAIQ,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACtB,QAAIC,IAAI,GAAGL,aAAa,CAACM,OAAd,CAAsBC,KAAjC;AACAR,IAAAA,KAAK,CAACI,QAAN,CAAeN,0BAA0B,CAACQ,IAAD,CAAzC;AACH,GAHD;;AAIA,MAAIA,IAAI,GAAGL,aAAa,CAACM,OAAd,CAAsBC,KAAjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEZ,CAAC,CAACiB,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEjB,CAAC,CAACkB,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,KAAK,CAACa,KAAN,CAAYC,QAAZ,GAAuBC,UAAvB,CAAkCC,QAAlC,CAA2CC,GAA3C,CAA+C,UAACC,IAAD;AAAA,wBAC5C,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAIA,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD4C;AAAA,GAA/C,CADL,CADJ,eAOI;AAAK,IAAA,SAAS,EAAExB,CAAC,CAACyB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnB,KAAK,CAACa,KAAN,CAAYC,QAAZ,GAAuBC,UAAvB,CAAkCK,WAAlC,CAA8CH,GAA9C,CAAkD,UAACI,OAAD;AAAA,wBAC/C,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAIA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD+C;AAAA,GAAlD,CADL,eAII;AAAK,IAAA,SAAS,EAAE3B,CAAC,CAAC4B,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAU,IAAA,WAAW,EAAC,kBAAtB;AAAyC,IAAA,SAAS,EAAE5B,CAAC,CAAC6B,KAAtD;AAA6D,IAAA,QAAQ,EAAGlB,aAAxE;AAAwF,IAAA,KAAK,EAAGL,KAAK,CAACwB,KAAN,CAAYC,cAA5G;AAA6H,IAAA,GAAG,EAAGxB,aAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,SAAS,EAAEP,CAAC,CAACgC,GAArB;AAA0B,IAAA,OAAO,EAAEvB,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAJJ,CAPJ,CADJ;AAmBH,CAlCD;;AAoCA,eAAeJ,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {addMessageActionCreater, updateMessageActionCreater} from \"../../redux/store\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let addNewMessage = React.createRef();\r\n\r\n    let addMessage = () => {\r\n        props.dispatch(addMessageActionCreater())\r\n    }\r\n\r\n    let updateMessage = () => {\r\n        let text = addNewMessage.current.value;\r\n        props.dispatch(updateMessageActionCreater(text));\r\n    }\r\n    let text = addNewMessage.current.value;\r\n    console.log(text)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {props.store.getState().dialogPage.userData.map((user) =>\r\n                    <DialogItem props = {user}/>\r\n                )}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                {props.store.getState().dialogPage.messageData.map((message) =>\r\n                    <Message props = {message}/>\r\n                )}\r\n                <div className={s.inputArea}>\r\n                    <textarea placeholder='Enter message...' className={s.input} onChange={ updateMessage } value={ props.state.newMessageText } ref={ addNewMessage } />\r\n                    <button className={s.btn} onClick={addMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}