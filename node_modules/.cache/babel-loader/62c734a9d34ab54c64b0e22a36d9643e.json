{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Header\\\\MusicPlayer.tsx\";\n\nimport { faPause, faPlay, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { actions } from './../../redux/music_reducer';\nimport './../Music/Music.css';\n\nvar MusicPlayer = function MusicPlayer() {\n  var dispatch = useDispatch();\n  var playing = useSelector(function (state) {\n    return state.music.playing;\n  });\n  var currentSong = useSelector(function (state) {\n    return state.music.currentSong;\n  });\n  var random = useSelector(function (state) {\n    return state.music.random;\n  });\n  var songs = useSelector(function (state) {\n    return state.music.songs;\n  });\n  var repeat = useSelector(function (state) {\n    return state.music.repeat;\n  });\n  var currentTimeState = useSelector(function (state) {\n    return state.music.currentTime;\n  });\n  var audio = useRef('audio_tag');\n\n  var _useState = useState(0.3),\n      _useState2 = _slicedToArray(_useState, 2),\n      statevolum = _useState2[0],\n      setStateVolum = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dur = _useState4[0],\n      setDur = _useState4[1];\n\n  var _useState5 = useState(currentTimeState),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentTime = _useState6[0],\n      setCurrentTime = _useState6[1];\n\n  var SetCurrent = function SetCurrent(id) {\n    dispatch(actions.SetCurrent(id));\n  }; // Prev song\n\n\n  var prevSong = function prevSong() {\n    if (currentSong === 0) {\n      SetCurrent(songs.length - 1);\n    } else {\n      SetCurrent(currentSong - 1);\n    }\n  }; // Next song\n\n\n  var nextSong = function nextSong() {\n    if (currentSong === songs.length - 1) {\n      SetCurrent(0);\n    } else {\n      SetCurrent(currentSong + 1);\n    }\n  };\n\n  var handleEnd = function handleEnd() {\n    // Check for random and repeat options\n    if (random) {\n      return dispatch({\n        type: 'SET_CURRENT_SONG',\n        data: ~~(Math.random() * songs.length)\n      });\n    } else {\n      if (repeat) {\n        nextSong();\n      } else if (currentSong === songs.length - 1) {\n        return;\n      } else {\n        nextSong();\n      }\n    }\n  };\n\n  var handleUpdateTime = function handleUpdateTime(e) {\n    setCurrentTime(e.target.currentTime);\n    dispatch(actions.updateCurrentTime(currentTime));\n  };\n\n  var togglePlaying = function togglePlaying() {\n    dispatch(actions.togglePlaying());\n  }; //@ts-ignore\n\n\n  var toggleAudio = function toggleAudio() {\n    return audio.current.paused ? audio.current.play() : audio.current.pause();\n  };\n\n  useEffect(function () {\n    //@ts-ignore\n    audio.current.volume = statevolum;\n    audio.current.currentTime = currentTime;\n\n    if (playing) {\n      toggleAudio();\n    }\n  }, [currentSong]);\n  useEffect(function () {\n    debugger; //@ts-ignore\n\n    audio.current.currentTime = currentTime;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"left\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"audio\", {\n    //@ts-ignore\n    onTimeUpdate: function onTimeUpdate(e) {\n      return handleUpdateTime(e);\n    } //@ts-ignore\n    ,\n    onCanPlay: function onCanPlay(e) {\n      return setDur(e.target.duration);\n    },\n    onEnded: handleEnd //@ts-ignore\n    ,\n    ref: audio,\n    type: \"audio/mpeg\",\n    preload: \"true\",\n    src: songs[currentSong][1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"musicControls\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"prev\",\n    onClick: prevSong,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faStepBackward,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"play\",\n    onClick: function onClick() {\n      togglePlaying();\n      toggleAudio();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: !playing ? '' : 'hide',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: !playing ? 'hide' : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPause,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 62\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"next\",\n    onClick: nextSong,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faStepForward,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 59\n    }\n  }))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"song\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, songs[currentSong][0]));\n};\n\nexport default MusicPlayer;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Header/MusicPlayer.tsx"],"names":["faPause","faPlay","faStepBackward","faStepForward","FontAwesomeIcon","React","useEffect","useRef","useState","useDispatch","useSelector","actions","MusicPlayer","dispatch","playing","state","music","currentSong","random","songs","repeat","currentTimeState","currentTime","audio","statevolum","setStateVolum","dur","setDur","setCurrentTime","SetCurrent","id","prevSong","length","nextSong","handleEnd","type","data","Math","handleUpdateTime","e","target","updateCurrentTime","togglePlaying","toggleAudio","current","paused","play","pause","volume","display","justifyContent","duration"],"mappings":"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","sourcesContent":["import { faPause, faPlay, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../redux/store-redux'\r\nimport { actions } from './../../redux/music_reducer';\r\nimport './../Music/Music.css'\r\n\r\nconst MusicPlayer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const playing = useSelector((state: AppStateType) => state.music.playing)\r\n    const currentSong = useSelector((state: AppStateType) => state.music.currentSong)\r\n    const random = useSelector((state: AppStateType) => state.music.random)\r\n    const songs = useSelector((state: AppStateType) => state.music.songs)\r\n    const repeat = useSelector((state: AppStateType) => state.music.repeat)\r\n    const currentTimeState = useSelector((state: AppStateType) => state.music.currentTime)\r\n\r\n    const audio = useRef('audio_tag');\r\n\r\n    const [statevolum, setStateVolum] = useState(0.3)\r\n    const [dur, setDur] = useState(0)\r\n    const [currentTime, setCurrentTime] = useState(currentTimeState)\r\n\r\n    const SetCurrent = (id: number) => {\r\n        dispatch(actions.SetCurrent(id))\r\n    }\r\n    // Prev song\r\n    const prevSong = () => {\r\n        if (currentSong === 0) {\r\n            SetCurrent(songs.length - 1)\r\n        } else {\r\n            SetCurrent(currentSong - 1)\r\n        }\r\n    }\r\n    // Next song\r\n    const nextSong = () => {\r\n        if (currentSong === songs.length - 1) {\r\n            SetCurrent(0)\r\n        } else {\r\n            SetCurrent(currentSong + 1)\r\n        }\r\n    }\r\n\r\n    const handleEnd = () => {\r\n        // Check for random and repeat options\r\n        if (random) {\r\n            return dispatch({ type: 'SET_CURRENT_SONG', data: ~~(Math.random() * songs.length) })\r\n        } else {\r\n            if (repeat) {\r\n                nextSong()\r\n            } else if ((currentSong === songs.length - 1)) {\r\n                return\r\n            } else {\r\n                nextSong();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUpdateTime = (e: any) => {\r\n        setCurrentTime(e.target.currentTime)\r\n        dispatch(actions.updateCurrentTime(currentTime))\r\n    }\r\n\r\n    const togglePlaying = () => {\r\n        dispatch(actions.togglePlaying())\r\n    }\r\n    //@ts-ignore\r\n    const toggleAudio = () => audio.current.paused ? audio.current.play() : audio.current.pause();\r\n\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        audio.current.volume = statevolum;\r\n        audio.current.currentTime = currentTime\r\n        if (playing) { toggleAudio() }\r\n    }, [currentSong])\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        //@ts-ignore\r\n        audio.current.currentTime = currentTime\r\n    }, [])\r\n\r\n    return <div style = {{display: \"flex\", justifyContent: \"left\"}}>\r\n        <audio\r\n                //@ts-ignore\r\n                onTimeUpdate={(e) => handleUpdateTime(e)}\r\n                //@ts-ignore\r\n                onCanPlay={(e) => setDur(e.target.duration)}\r\n                onEnded={handleEnd}\r\n                //@ts-ignore\r\n                ref={audio}\r\n                type=\"audio/mpeg\"\r\n                preload='true'\r\n                src={songs[currentSong][1]} />\r\n        <div className=\"musicControls\">\r\n                <span className=\"prev\" onClick={prevSong}><FontAwesomeIcon icon={faStepBackward} /></span>\r\n                <span className=\"play\" onClick={() => { togglePlaying(); toggleAudio(); }}>\r\n                    <span className={!playing ? '' : 'hide'}><FontAwesomeIcon icon={faPlay} /></span>\r\n                    <span className={!playing ? 'hide' : ''}><FontAwesomeIcon icon={faPause} /></span>\r\n                </span>\r\n\r\n                <span className=\"next\" onClick={nextSong}><FontAwesomeIcon icon={faStepForward} /></span>\r\n        </div>\r\n        <span className=\"song\">{songs[currentSong][0]}</span>\r\n    </div>\r\n}\r\n\r\nexport default MusicPlayer"]},"metadata":{},"sourceType":"module"}