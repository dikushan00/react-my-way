{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { setCurrentPage, setPageCount, setUsers, switch_follow, toggleIsFetching, toggleProgress } from \"../../redux/users_reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { UsersAPI } from \"../../api/api\";\n\nvar UsersContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(UsersContainer, _React$Component);\n\n  function UsersContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.pageEvent = function (p) {\n      _this.props.setCurrentPage(p);\n\n      _this.props.toggleIsFetching(true);\n\n      UsersAPI.getUsers(p, _this.props.pageSize).then(function (data) {\n        _this.props.toggleIsFetching(false);\n\n        _this.props.setUsers(data.items);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UsersContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.toggleIsFetching(true);\n      UsersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(function (data) {\n        _this2.props.toggleIsFetching(false);\n\n        _this2.props.setUsers(data.items); //this.props.setPageCount(response.data.totalCount)\n\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 38\n        }\n      }) : /*#__PURE__*/React.createElement(Users, {\n        currentPage: this.props.currentPage,\n        pageCount: this.props.pageCount,\n        pageSize: this.props.pageSize,\n        switch_follow: this.props.switch_follow,\n        state: this.props.state,\n        pageEvent: this.pageEvent,\n        toggleProgressArr: this.props.toggleProgressArr,\n        toggleProgress: this.props.toggleProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return UsersContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.usersPage.usersData,\n    currentPage: state.usersPage.currentPage,\n    pageCount: state.usersPage.pageCount,\n    pageSize: state.usersPage.pageSize,\n    isFetching: state.usersPage.isFetching,\n    toggleProgressArr: state.usersPage.toggleProgressArr\n  };\n}; //\n// const mapDispatchToProps = (dispatch) => {\n//\n//     return {\n//         switch_follow: (usersId) => {\n//             dispatch(switch_followAC(usersId))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage))\n//         },\n//         setCountPage: (pageCount) => {\n//             dispatch(setPageCountAC(pageCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  switch_follow: switch_follow,\n  setUsers: setUsers,\n  setCurrentPage: setCurrentPage,\n  setPageCount: setPageCount,\n  toggleIsFetching: toggleIsFetching,\n  toggleProgress: toggleProgress\n})(UsersContainer);","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Users/UsersContainer.jsx"],"names":["React","connect","setCurrentPage","setPageCount","setUsers","switch_follow","toggleIsFetching","toggleProgress","Users","Preloader","UsersAPI","UsersContainer","pageEvent","p","props","getUsers","pageSize","then","data","items","currentPage","isFetching","pageCount","state","toggleProgressArr","Component","mapStateToProps","usersPage","usersData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setCurrentPage,\r\n    setPageCount,\r\n    setUsers,\r\n    switch_follow,\r\n    toggleIsFetching, toggleProgress\r\n} from \"../../redux/users_reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {UsersAPI} from \"../../api/api\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        UsersAPI.getUsers(this.props.currentPage, this.props.pageSize).then((data) => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n            //this.props.setPageCount(response.data.totalCount)\r\n        })\r\n    }\r\n\r\n    pageEvent = (p) => {\r\n        this.props.setCurrentPage(p);\r\n        this.props.toggleIsFetching(true)\r\n        UsersAPI.getUsers(p, this.props.pageSize).then((data) => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    currentPage={this.props.currentPage}\r\n                    pageCount={this.props.pageCount}\r\n                    pageSize={this.props.pageSize}\r\n                    switch_follow={this.props.switch_follow}\r\n                    state={this.props.state}\r\n                    pageEvent={this.pageEvent}\r\n                    toggleProgressArr = {this.props.toggleProgressArr}\r\n                    toggleProgress = {this.props.toggleProgress}\r\n                />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        state: state.usersPage.usersData,\r\n        currentPage: state.usersPage.currentPage,\r\n        pageCount: state.usersPage.pageCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        isFetching: state.usersPage.isFetching,\r\n        toggleProgressArr: state.usersPage.toggleProgressArr\r\n    }\r\n}\r\n//\r\n// const mapDispatchToProps = (dispatch) => {\r\n//\r\n//     return {\r\n//         switch_follow: (usersId) => {\r\n//             dispatch(switch_followAC(usersId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (currentPage) => {\r\n//             dispatch(setCurrentPageAC(currentPage))\r\n//         },\r\n//         setCountPage: (pageCount) => {\r\n//             dispatch(setPageCountAC(pageCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps, {\r\n    switch_follow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setPageCount,\r\n    toggleIsFetching,\r\n    toggleProgress\r\n})(UsersContainer)\r\n"]},"metadata":{},"sourceType":"module"}