{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\src\\\\components\\\\Profile\\\\ProfileInfo\\\\ProfilInfo.tsx\",\n    _this4 = this;\n\nimport React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport photoUser from \"../../../img/user.svg\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport { ProfileDataFormRedux } from \"./ProfileDataForm\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css'; //     state = [editMode, setEditMode] = useState(false)\n// const [src, setSrc] = useState(null as string | ArrayBuffer | null)\n// const [cropImg, setCropImg] = useState({\n//       unit: '%',\n//       width: 30,\n//       aspect: 1 / 1\n//     })\n\nvar ProfileInfo = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ProfileInfo, _React$PureComponent);\n\n  function ProfileInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProfileInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProfileInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editMode: false,\n      src: null,\n      crop: {\n        unit: '%',\n        width: 30,\n        height: 30,\n        x: 0,\n        y: 0,\n        aspect: 1 / 1\n      },\n      croppedImageUrl: ''\n    };\n\n    _this.onInputPhoto = function (e) {\n      if (e.target.files.length && e.target.files.length > 0) {\n        var reader = new FileReader();\n        reader.addEventListener('load', function () {\n          return _this.setState({\n            src: reader.result\n          });\n        });\n        reader.readAsDataURL(e.target.files[0]);\n\n        _this.props.updatePhoto(e.target.files[0]);\n      }\n    };\n\n    _this.onImageLoaded = function (image) {\n      _this.imageRef = image;\n    };\n\n    _this.onCropComplete = function (crop, percentCrop) {\n      _this.makeClientCrop(crop);\n    };\n\n    _this.onCropChange = function (crop, percentCrop) {\n      _this.setState({\n        crop: crop\n      });\n    };\n\n    _this.onSubmit = function (data) {\n      _this.props.saveProfile(data).then(function () {\n        _this.setState({\n          editMode: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProfileInfo, [{\n    key: \"makeClientCrop\",\n    value: function () {\n      var _makeClientCrop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(crop) {\n        var croppedImageUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.imageRef && crop.width && crop.height)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.getCroppedImg(this.imageRef, crop, 'newFile.jpeg');\n\n              case 3:\n                croppedImageUrl = _context.sent;\n                this.setState({\n                  croppedImageUrl: croppedImageUrl\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function makeClientCrop(_x) {\n        return _makeClientCrop.apply(this, arguments);\n      }\n\n      return makeClientCrop;\n    }()\n  }, {\n    key: \"getCroppedImg\",\n    value: function getCroppedImg(image, crop, fileName) {\n      var _this2 = this;\n\n      var canvas = document.createElement('canvas');\n      var scaleX = image.naturalWidth / image.width;\n      var scaleY = image.naturalHeight / image.height;\n      canvas.width = crop.width;\n      canvas.height = crop.height;\n      var ctx = canvas.getContext('2d');\n      ctx && ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n      return new Promise(function (resolve, reject) {\n        canvas.toBlob(function (blob) {\n          if (!blob) {\n            console.error('Canvas is empty');\n            return;\n          } //@ts-ignore\n\n\n          blob.name = fileName;\n          window.URL.revokeObjectURL(_this2.fileUrl);\n          _this2.fileUrl = window.URL.createObjectURL(blob);\n          resolve(_this2.fileUrl);\n        }, 'image/jpeg');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          crop = _this$state.crop,\n          croppedImageUrl = _this$state.croppedImageUrl,\n          src = _this$state.src;\n\n      if (!this.props.profile) {\n        return /*#__PURE__*/React.createElement(Preloader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: s.descriptionBlock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: this.props.profile.photos.large || photoUser,\n        alt: \"photo\",\n        className: s.avaImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 28\n        }\n      }, this.props.profile.fullName || 'unknown user ')), /*#__PURE__*/React.createElement(ProfileStatusWithHooks, {\n        status: this.props.status,\n        updateStatus: this.props.updateStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      })), this.props.isOwner && /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.onInputPhoto,\n        className: s.inputPhoto,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 44\n        }\n      })), src && /*#__PURE__*/React.createElement(ReactCrop, {\n        src: src,\n        crop: crop,\n        ruleOfThirds: true,\n        onImageLoaded: this.onImageLoaded,\n        onComplete: this.onCropComplete,\n        onChange: this.onCropChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 24\n        }\n      }), this.state.editMode //@ts-ignore\n      ?\n      /*#__PURE__*/\n      React.createElement(ProfileDataFormRedux, {\n        initialValues: props.profile,\n        profile: props.profile,\n        onSubmit: onSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 23\n        }\n      }) : /*#__PURE__*/React.createElement(ProfileData, {\n        profile: this.props.profile,\n        onEditMode: function onEditMode() {\n          return _this3.setState({\n            editMode: true\n          });\n        },\n        isOwner: this.props.isOwner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 23\n        }\n      })));\n    }\n  }]);\n\n  return ProfileInfo;\n}(React.PureComponent);\n\nvar Contact = function Contact(_ref) {\n  var contactTitle = _ref.contactTitle,\n      contactValue = _ref.contactValue;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: s.contact,\n    style: {\n      display: 'flex'\n    },\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoKey,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 65\n    }\n  }, contactTitle, \":\"), \" \", contactValue);\n};\n\nvar ProfileData = function ProfileData(_ref2) {\n  var profile = _ref2.profile,\n      props = _objectWithoutProperties(_ref2, [\"profile\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    className: s.profileData,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }\n  }, props.isOwner && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.onEditMode,\n    className: s.editBtn + ' ' + s.btn,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoKey,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 39\n    }\n  }, \"Looking for a job: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoValue,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 93\n    }\n  }, profile.lookingForAJob ? 'yes' : 'no')), profile.lookingForAJob && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoKey,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 66\n    }\n  }, \"My work skills: \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoValue,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 117\n    }\n  }, profile.lookingForAJob && profile.lookingForAJobDescription)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: s.infoKey,\n    __self: _this4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Contacts\"), \":\", profile.contacts && Object.keys(profile.contacts).map(function (key) {\n    return profile.contacts[key] && /*#__PURE__*/React.createElement(Contact, {\n      key: key,\n      className: s.infoValue,\n      contactTitle: key,\n      contactValue: profile.contacts[key],\n      __self: _this4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 71\n      }\n    });\n  })));\n};\n\nexport default ProfileInfo;","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/components/Profile/ProfileInfo/ProfilInfo.tsx"],"names":["React","s","Preloader","ProfileStatusWithHooks","ProfileDataFormRedux","ReactCrop","ProfileInfo","state","editMode","src","crop","unit","width","height","x","y","aspect","croppedImageUrl","onInputPhoto","e","target","files","length","reader","FileReader","addEventListener","setState","result","readAsDataURL","props","updatePhoto","onImageLoaded","image","imageRef","onCropComplete","percentCrop","makeClientCrop","onCropChange","onSubmit","data","saveProfile","then","getCroppedImg","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","Promise","resolve","reject","toBlob","blob","console","error","name","window","URL","revokeObjectURL","fileUrl","createObjectURL","profile","descriptionBlock","display","photos","large","photoUser","avaImg","marginLeft","fullName","status","updateStatus","isOwner","inputPhoto","PureComponent","Contact","contactTitle","contactValue","contact","infoKey","ProfileData","position","profileData","onEditMode","editBtn","btn","infoValue","lookingForAJob","lookingForAJobDescription","contacts","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport  s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport photoUser from '../../../img/user.svg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {ProfileDataFormRedux} from \"./ProfileDataForm\"\r\nimport { ProfileType, SaveProfileType, ContactsType } from '../../../Types/Types';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\n//     state = [editMode, setEditMode] = useState(false)\r\n// const [src, setSrc] = useState(null as string | ArrayBuffer | null)\r\n// const [cropImg, setCropImg] = useState({\r\n//       unit: '%',\r\n//       width: 30,\r\n//       aspect: 1 / 1\r\n//     })\r\n\r\nclass ProfileInfo extends React.PureComponent<PropsType> {\r\n\r\n    state = {\r\n        editMode: false,\r\n        src: null as string | null,\r\n        crop : {\r\n          unit: '%' as \"%\" | \"px\" | undefined,\r\n          width: 30,\r\n          height: 30,\r\n          x: 0,\r\n          y: 0,\r\n          aspect: 1 / 1\r\n        },\r\n        croppedImageUrl: ''\r\n    }\r\n\r\n    onInputPhoto = (e: any) => {\r\n        if(e.target.files.length && e.target.files.length > 0){\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () =>\r\n                this.setState( { src: reader.result } )\r\n            );\r\n            reader.readAsDataURL(e.target.files[0]);\r\n            this.props.updatePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    onImageLoaded = (image: HTMLImageElement) => {\r\n        this.imageRef = image;\r\n      };\r\n    \r\n      onCropComplete = (crop: ReactCrop.Crop , percentCrop: ReactCrop.PercentCrop) => {\r\n        this.makeClientCrop(crop);\r\n      };\r\n    \r\n      onCropChange = (crop: ReactCrop.Crop, percentCrop: ReactCrop.PercentCrop) => {\r\n        this.setState({ crop });\r\n      };\r\n    imageRef: any;\r\n    \r\n      async makeClientCrop(crop: ReactCrop.Crop) {\r\n        if (this.imageRef && crop.width && crop.height) {\r\n          const croppedImageUrl = await this.getCroppedImg(\r\n            this.imageRef,\r\n            crop,\r\n            'newFile.jpeg'\r\n          );\r\n          this.setState({ croppedImageUrl: croppedImageUrl });\r\n        }\r\n      }\r\n    \r\n      getCroppedImg(image: HTMLImageElement, crop: ReactCrop.Crop, fileName: string) {\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n    \r\n        ctx && ctx.drawImage(\r\n          image,\r\n          crop.x * scaleX,\r\n          crop.y * scaleY,\r\n          crop.width * scaleX,\r\n          crop.height * scaleY,\r\n          0,\r\n          0,\r\n          crop.width,\r\n          crop.height\r\n        );\r\n    \r\n        return new Promise((resolve, reject) => {\r\n          canvas.toBlob(blob => {\r\n            if (!blob) {\r\n              console.error('Canvas is empty');\r\n              return;\r\n            }\r\n            //@ts-ignore\r\n            blob.name = fileName;\r\n            window.URL.revokeObjectURL(this.fileUrl);\r\n            this.fileUrl = window.URL.createObjectURL(blob);\r\n            resolve(this.fileUrl);\r\n          }, 'image/jpeg');\r\n        });\r\n      }\r\n    fileUrl: any\r\n    \r\n    onSubmit = (data: SaveProfileType) => {\r\n        this.props.saveProfile(data).then(() => {\r\n            this.setState({editMode: false})\r\n        });\r\n    }\r\n        \r\n    render(){\r\n        const { crop, croppedImageUrl, src } = this.state;\r\n\r\n        if (!this.props.profile){\r\n            return <Preloader />\r\n        }\r\n\r\n        return (<div>\r\n            <div className={s.descriptionBlock}>\r\n                <div style={{display:'flex'}}>\r\n                    <img src={ this.props.profile.photos.large || photoUser } alt=\"photo\" className={s.avaImg}/>\r\n                    <div style={{marginLeft:\"20px\"}}>\r\n                        <p><b>{this.props.profile.fullName || 'unknown user '}</b></p>\r\n                        <ProfileStatusWithHooks status = {this.props.status} updateStatus = {this.props.updateStatus}/>\r\n                    </div>\r\n                    {this.props.isOwner && <input type=\"file\" onChange={this.onInputPhoto} className={s.inputPhoto}/>}\r\n                </div>\r\n\r\n                { \r\n                src && <ReactCrop\r\n                    src={src}\r\n                    crop={crop}\r\n                    ruleOfThirds\r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                /> \r\n                }\r\n\r\n                {\r\n                this.state.editMode \r\n                //@ts-ignore\r\n                    ? <ProfileDataFormRedux initialValues = {props.profile} profile = {props.profile} onSubmit = {onSubmit}/>\r\n                    : <ProfileData profile = {this.props.profile} onEditMode = {() => this.setState({editMode: true})} isOwner={this.props.isOwner}/>\r\n                }\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst Contact: React.FC<ContactType> = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}  style={{display:'flex'}}><span className={s.infoKey}>{contactTitle}:</span> {contactValue}</div>\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, ...props}) => {\r\n\r\n    return <div style={{position: 'relative'}} className={s.profileData}>\r\n        {props.isOwner && <button onClick = {props.onEditMode} className = {s.editBtn + ' ' + s.btn}/>}\r\n        {/* <div style={{display:'flex'}}><span className={s.infoKey}>About me: </span><span className={s.infoValue}>{profile.aboutMe}</span></div> */}\r\n        <div style={{display:'flex'}}><span className={s.infoKey}>Looking for a job: </span><span className={s.infoValue}>{profile.lookingForAJob ? 'yes' : 'no'}</span></div>\r\n        {profile.lookingForAJob && <div style={{display:'flex'}}><span className={s.infoKey}>My work skills: </span><span className={s.infoValue}>{profile.lookingForAJob && profile.lookingForAJobDescription}</span></div>}\r\n        <div>\r\n            <span className={s.infoKey}>Contacts</span>: \r\n            {\r\n            profile.contacts && Object\r\n                .keys(profile.contacts)\r\n                .map(key => {\r\n                return profile.contacts[key as keyof ContactsType] && <Contact key={key} className={s.infoValue} contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]} />\r\n            })\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\ntype ContactType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n    className: string\r\n}\r\n\r\n\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    onEditMode: () => void\r\n}\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    isOwner: boolean\r\n    status: string\r\n\r\n    updatePhoto: (url: string) => void\r\n    saveProfile: (data: SaveProfileType) => Promise<SaveProfileType>\r\n    updateStatus: (data: string) => void\r\n}\r\n\r\nexport default ProfileInfo;"]},"metadata":{},"sourceType":"module"}