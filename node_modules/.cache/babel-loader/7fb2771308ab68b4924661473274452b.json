{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\dikush\\\\Documents\\\\GitHub\\\\react-my-way\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { DialogsAPI } from \"../api/dist/api\";\nvar id = 4;\nvar initialState = {\n  userData: [{\n    \"id\": 1,\n    \"name\": \"Dmitri\"\n  }, {\n    \"id\": 2,\n    \"name\": \"Svetlana\"\n  }, {\n    \"id\": 3,\n    \"name\": \"Nauryz\"\n  }, {\n    \"id\": 4,\n    \"name\": \"Dinmukhamed\"\n  }, {\n    \"id\": 5,\n    \"name\": \"Mukhit\"\n  }],\n  messageData: [{\n    id: 1,\n    messages: [{\n      \"id\": 1,\n      \"message\": \"Yo\"\n    }, {\n      \"id\": 2,\n      \"message\": \"Hello\"\n    }, {\n      \"id\": 1,\n      \"message\": \"How are you\"\n    }]\n  }, {\n    id: 2,\n    messages: [{\n      \"id\": 1,\n      \"message\": \"hello. how are you?\"\n    }, {\n      \"id\": 2,\n      \"message\": \"Hello\"\n    }, {\n      \"id\": 1,\n      \"message\": \"im good\"\n    }]\n  }, {\n    id: 3,\n    messages: [{\n      \"id\": 1,\n      \"message\": \"hi\"\n    }, {\n      \"id\": 2,\n      \"message\": \"Hello\"\n    }, {\n      \"id\": 1,\n      \"message\": \"what we get in home work\"\n    }]\n  }, {\n    id: 4,\n    messages: [{\n      \"id\": 1,\n      \"message\": \"drop our phootos\"\n    }, {\n      \"id\": 2,\n      \"message\": \"which?\"\n    }, {\n      \"id\": 1,\n      \"message\": \"from zerendy\"\n    }]\n  }, {\n    id: 5,\n    messages: [{\n      \"id\": 1,\n      \"message\": \"Hello classmates\"\n    }, {\n      \"id\": 2,\n      \"message\": \"Hello\"\n    }, {\n      \"id\": 1,\n      \"message\": \"wourld you like have hang out with me?\"\n    }, {\n      \"id\": 2,\n      \"message\": \"yes, go!\"\n    }]\n  }]\n};\n\nvar dialogs_reducer = function dialogs_reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SN/Dialogs/ADD_NEW_MESSAGE':\n      {\n        if (action.newMessageText.length > 0) {\n          return _objectSpread({}, state, {\n            messageData: state.messageData.map(function (item) {\n              if (+action.id == item.id) {\n                item.messages = [].concat(_toConsumableArray(item.messages), [{\n                  \"id\": 2,\n                  \"message\": action.newMessageText\n                }]);\n                return item;\n              }\n\n              return item;\n            })\n          });\n        }\n\n        id += 2;\n        return state;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var actions = {\n  addMessage: function addMessage(id, newMessageText) {\n    return {\n      type: 'SN/Dialogs/ADD_NEW_MESSAGE',\n      id: id,\n      newMessageText: newMessageText\n    };\n  }\n};\nexport var sendMessage = function sendMessage(id, message) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return DialogsAPI?.sendMessagesToUser(id, message);\n\n            case 2:\n              data = _context.sent;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport default dialogs_reducer; // [\n//     {\n//         id: 1,\n//         messages: [\n//             {\"id\": 1, \"message\": \"Yo\"},\n//             {\"id\": 2, \"message\": \"Hello\"},\n//             {\"id\": 1, \"message\": \"How are you\"}\n//         ]\n//     },\n//     {\n//         id: 2,\n//         messages: [\n//             {\"id\": 1, \"message\": \"hello. how are you?\"},\n//             {\"id\": 2, \"message\": \"Hello\"},\n//             {\"id\": 1, \"message\": \"im good\"}\n//         ]\n//     },\n//     {\n//         id: 3,\n//         messages: [\n//             {\"id\": 1, \"message\": \"hi\"},\n//             {\"id\": 2, \"message\": \"Hello\"},\n//             {\"id\": 1, \"message\": \"what we get in home work\"}\n//         ]\n//     },\n//     {\n//         id: 4,\n//         messages: [\n//             {\"id\": 1, \"message\": \"drop our phootos\"},\n//             {\"id\": 2, \"message\": \"which?\"},\n//             {\"id\": 1, \"message\": \"from zerendy\"}\n//         ]\n//     },\n//     {\n//         id: 5,\n//         messages: [\n//             {\"id\": 1, \"message\": \"Hello classmates\"},\n//             {\"id\": 2, \"message\": \"Hello\"},\n//             {\"id\": 1, \"message\": \"wourld you like have hang out with me?\"},\n//             {\"id\": 2, \"message\": \"yes, go!\"}\n//         ]\n//     }\n// ]","map":{"version":3,"sources":["C:/Users/dikush/Documents/GitHub/react-my-way/src/redux/dialogs_reducer.ts"],"names":["DialogsAPI","id","initialState","userData","messageData","messages","dialogs_reducer","state","action","type","newMessageText","length","map","item","actions","addMessage","sendMessage","message","dispatch","sendMessagesToUser","data"],"mappings":";;;;AAEA,SAASA,UAAT,QAA2B,iBAA3B;AAEA,IAAIC,EAAE,GAAG,CAAT;AAeA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAE,CACN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GADM,EAEN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GAFM,EAGN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GAHM,EAIN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GAJM,EAKN;AAAC,UAAM,CAAP;AAAU,YAAQ;AAAlB,GALM,CADK;AAQfC,EAAAA,WAAW,EAAE,CACL;AACIH,IAAAA,EAAE,EAAE,CADR;AAEII,IAAAA,QAAQ,EAAE,CACN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KADM,EAEN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAFM,EAGN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAHM;AAFd,GADK,EASL;AACIJ,IAAAA,EAAE,EAAE,CADR;AAEII,IAAAA,QAAQ,EAAE,CACN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KADM,EAEN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAFM,EAGN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAHM;AAFd,GATK,EAiBL;AACIJ,IAAAA,EAAE,EAAE,CADR;AAEII,IAAAA,QAAQ,EAAE,CACN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KADM,EAEN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAFM,EAGN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAHM;AAFd,GAjBK,EAyBL;AACIJ,IAAAA,EAAE,EAAE,CADR;AAEII,IAAAA,QAAQ,EAAE,CACN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KADM,EAEN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAFM,EAGN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAHM;AAFd,GAzBK,EAiCL;AACIJ,IAAAA,EAAE,EAAE,CADR;AAEII,IAAAA,QAAQ,EAAE,CACN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KADM,EAEN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAFM,EAGN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAHM,EAIN;AAAC,YAAM,CAAP;AAAU,iBAAW;AAArB,KAJM;AAFd,GAjCK;AARE,CAAnB;;AAuDA,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,GAAwE;AAAA,MAAvEC,KAAuE,uEAA/DL,YAA+D;AAAA,MAAjDM,MAAiD;;AAE1F,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAK,4BAAL;AAAmC;AAE/B,YAAID,MAAM,CAACE,cAAP,CAAsBC,MAAtB,GAA+B,CAAnC,EAAsC;AAClC,mCACOJ,KADP;AAEIH,YAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,CAAkBQ,GAAlB,CAAsB,UAAAC,IAAI,EAAI;AACvC,kBAAG,CAACL,MAAM,CAACP,EAAR,IAAcY,IAAI,CAACZ,EAAtB,EAAyB;AACrBY,gBAAAA,IAAI,CAACR,QAAL,gCAAoBQ,IAAI,CAACR,QAAzB,IAAmC;AAAC,wBAAM,CAAP;AAAU,6BAAWG,MAAM,CAACE;AAA5B,iBAAnC;AACA,uBAAOG,IAAP;AACH;;AACD,qBAAOA,IAAP;AACH,aANY;AAFjB;AAUH;;AACDZ,QAAAA,EAAE,IAAI,CAAN;AACA,eAAOM,KAAP;AACH;;AAED;AAAS;AACL,eAAOA,KAAP;AACH;AAtBL;AAwBH,CA1BD;;AA4BA,OAAO,IAAMO,OAAO,GAAG;AACnBC,EAAAA,UAAU,EAAE,oBAACd,EAAD,EAAaS,cAAb;AAAA,WAAyC;AAACD,MAAAA,IAAI,EAAE,4BAAP;AAAqCR,MAAAA,EAAE,EAAFA,EAArC;AAAyCS,MAAAA,cAAc,EAAdA;AAAzC,KAAzC;AAAA;AADO,CAAhB;AAMP,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACf,EAAD,EAAagB,OAAb;AAAA;AAAA,wEAA+C,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACrDlB,UAAU,EAAEmB,kBAAZ,CAA+BlB,EAA/B,EAAmCgB,OAAnC,CADqD;;AAAA;AAClEG,cAAAA,IADkE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/C;;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAOP,eAAed,eAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Dispatch } from \"react\";\r\nimport { InferActionsTypes, ThunkType } from \"./store-redux\";\r\nimport { DialogsAPI } from \"../api/dist/api\";\r\n\r\nlet id = 4;\r\n\r\ntype UserDataType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\ntype MessageDataType = {\r\n    id: number\r\n    messages: Array<MessagesType>\r\n}\r\n\r\nlet initialState = {\r\n    userData: [\r\n        {\"id\": 1, \"name\": \"Dmitri\"},\r\n        {\"id\": 2, \"name\": \"Svetlana\"},\r\n        {\"id\": 3, \"name\": \"Nauryz\"},\r\n        {\"id\": 4, \"name\": \"Dinmukhamed\"},\r\n        {\"id\": 5, \"name\": \"Mukhit\"}\r\n    ] as Array<UserDataType>,\r\n    messageData: [\r\n            {\r\n                id: 1,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"Yo\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"How are you\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 2,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"hello. how are you?\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"im good\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 3,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"hi\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"what we get in home work\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 4,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"drop our phootos\"},\r\n                    {\"id\": 2, \"message\": \"which?\"},\r\n                    {\"id\": 1, \"message\": \"from zerendy\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 5,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"Hello classmates\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"wourld you like have hang out with me?\"},\r\n                    {\"id\": 2, \"message\": \"yes, go!\"}\r\n                ]\r\n            }\r\n        ] as Array<MessageDataType>\r\n}\r\n\r\nexport type DialogsInitialStateType = typeof initialState\r\n\r\nlet dialogs_reducer = (state = initialState, action: ActionsType): DialogsInitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Dialogs/ADD_NEW_MESSAGE': {\r\n\r\n            if (action.newMessageText.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    messageData: state.messageData.map(item => {\r\n                        if(+action.id == item.id){\r\n                            item.messages = [...item.messages, {\"id\": 2, \"message\": action.newMessageText}]\r\n                            return item\r\n                        }\r\n                        return item\r\n                    })\r\n                }\r\n            }\r\n            id += 2;\r\n            return state\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addMessage: (id: number, newMessageText: string) => ({type: 'SN/Dialogs/ADD_NEW_MESSAGE', id, newMessageText} as const)\r\n}\r\n\r\ntype getThunkType = ThunkType<ActionsType>\r\n\r\nexport const sendMessage = (id: number, message: string): getThunkType => async (dispatch) => {\r\n    let data = await DialogsAPI?.sendMessagesToUser(id, message);\r\n}\r\n    \r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport default dialogs_reducer\r\n\r\n\r\n// [\r\n//     {\r\n//         id: 1,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"Yo\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"How are you\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"hello. how are you?\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"im good\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"hi\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"what we get in home work\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 4,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"drop our phootos\"},\r\n//             {\"id\": 2, \"message\": \"which?\"},\r\n//             {\"id\": 1, \"message\": \"from zerendy\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 5,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"Hello classmates\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"wourld you like have hang out with me?\"},\r\n//             {\"id\": 2, \"message\": \"yes, go!\"}\r\n//         ]\r\n//     }\r\n// ]"]},"metadata":{},"sourceType":"module"}