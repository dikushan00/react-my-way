{"version":3,"sources":["components/Dialogs/Dialogs.module.css","img/mailMain.svg","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","dialogs","dialogsItems","dialog","active","messages","message","even","inputArea","input","__webpack_require__","p","DialogItem","_ref","props","path","id","react_default","a","createElement","className","s","react_router_dom","to","activeClassName","name","Message","Dialogs","React","memo","userId","dialogsState","useSelector","state","dialogPage","Fragment","userData","map","user","Dialogs_DialogItem_DialogItem","key","Dialogs_DialogsWindow","Dialogs_DialogsMain","maxLength15","maxLengthCreater","Textarea","Element","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","DialogsWindow","_ref2","dispatch","useDispatch","messageData","Number","Dialogs_Message_Message","data","actions","addMessage","newMessageText","sendMessage","reset","DialogsMain","style","display","padding","src","mailMain","alt","width","marginLeft","compose","withAuthRedirect","withRouter","Dialogs_Dialogs","match","params"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,yBAAAC,KAAA,sBAAAC,UAAA,2BAAAC,MAAA,6CCDlBV,EAAAC,QAAiBU,EAAAC,EAAuB,4HCoBzBC,EATyB,SAAAC,GAAa,IAAXC,EAAWD,EAAXC,MAClCC,EAAO,YAAcD,EAAME,GAC/B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAElB,OAAS,IAAMkB,IAAEjB,QAC/Ba,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAIR,EAAMS,gBAAiBH,IAAEjB,QAAtC,IAAgDU,EAAMW,QCAnDC,EANsB,SAAAb,GAAa,IAAXC,EAAWD,EAAXC,MACnC,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEf,QAAW,IAAMe,IAAEP,EAAME,GAAK,IAAM,EAAI,OAAS,QAASF,EAAMR,mFCEpFqB,EAA+BC,IAAMC,KAAK,SAAAhB,GAAc,IAAZiB,EAAYjB,EAAZiB,OAExCC,EAAeC,YAAY,SAACC,GAAD,OAAyBA,EAAMC,aAEhE,OACIjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAiB,SAAA,KACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEpB,SACdgB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEnB,cACb6B,EAAaK,SAASC,IAAI,SAACC,GAAD,OACvBrB,EAAAC,EAAAC,cAACoB,EAAD,CAAYzB,MAAOwB,EAAME,IAAKF,EAAKtB,QAKvCc,EACMb,EAAAC,EAAAC,cAACsB,EAAD,CAAgBX,OAAUA,IAC1Bb,EAAAC,EAAAC,cAACuB,EAAD,UAQtBC,EAAcC,YAAiB,IAC7BC,EAAWC,YAAQ,YAUnBC,EAAmBC,YAAgC,CAACC,KAAM,eAAvCD,CAR8C,SAAClC,GACpE,OACIG,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAEb,UAAW0C,SAAUpC,EAAMqC,cAC1ClC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAOC,YAAY,mBAAmBjC,UAAWC,IAAEZ,MAAOgB,KAAK,iBAAiB6B,SAAU,CAACC,IAAUZ,GAAca,UAAWX,IAC9H5B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAlB,WAMNqC,EAA6C,SAAAC,GAAc,IAAZ5B,EAAY4B,EAAZ5B,OAE3C6B,EAAWC,cACXC,EAAc7B,YAAY,SAACC,GAAD,OAAyBA,EAAMC,WAAW2B,cAQ1E,OAAO5C,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEhB,UAEjBwD,EAAYxB,IAAI,SAAC/B,GACb,OAAOA,EAAQU,KAAO8C,OAAOhC,IACzBxB,EAAQD,SAASgC,IAAI,SAAA/B,GAAO,OAAIW,EAAAC,EAAAC,cAAC4C,EAAD,CAASjD,MAAOR,EAASkC,IAAKlC,EAAQU,SAIlFC,EAAAC,EAAAC,cAAC4B,EAAD,CAAkBG,SAdH,SAACc,GAChBC,IAAQC,WAAWpC,EAAQkC,EAAKG,gBAChCC,YAAY,MAAOJ,EAAKG,gBACxBR,EAASU,YAAM,qBAejBC,EAAc,WAEhB,OAAOrD,EAAAC,EAAAC,cAAA,OAAKoD,MAAO,CAACC,QAAS,OAAQC,QAAS,SAC1CxD,EAAAC,EAAAC,cAAA,OAAKuD,IAAKC,IAAUC,IAAI,QAAQL,MAAO,CAACM,MAAM,QAASC,WAAY,aAI5DnD,2BCrEAoD,sBACXC,IACAC,IAFWF,CAL+B,SAACjE,GAE3C,OAAOG,EAAAC,EAAAC,cAAC+D,EAAD,CAASpD,OAAUhB,EAAMqE,MAAMC,OAAOtD","file":"static/js/2.3de2ee70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1lBg5\",\"dialogsItems\":\"Dialogs_dialogsItems__2Jte3\",\"dialog\":\"Dialogs_dialog__10vfi\",\"active\":\"Dialogs_active__RhJkg\",\"messages\":\"Dialogs_messages__1va2R\",\"message\":\"Dialogs_message__KeJPv\",\"even\":\"Dialogs_even__3eURk\",\"inputArea\":\"Dialogs_inputArea__3M-e9\",\"input\":\"Dialogs_input__36n46\"};","module.exports = __webpack_public_path__ + \"static/media/mailMain.ff7f2d1d.svg\";","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    props: {\r\n        id: number\r\n        name: string\r\n    }\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = ({props}) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path} activeClassName={s.active}> {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\n\r\ntype PropsType = {\r\n    props: {\r\n        message: string\r\n        id: number\r\n    }\r\n}\r\nconst Message: React.FC<PropsType> = ({props}) => {\r\n    return (\r\n        <div className={s.message  + ' ' + s[props.id % 2 === 0 ? \"even\" : \"odd\"]}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm, InjectedFormProps, reset} from \"redux-form\";\r\nimport {maxLengthCreater, required} from \"../utils/Validators/validators\";\r\nimport {Element} from \"../common/FormControl/FormControl\";\r\nimport mailMain from \"../../img/mailMain.svg\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sendMessage } from './../../redux/dialogs_reducer';\r\nimport { actions } from './../../redux/dialogs_reducer';\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\nconst Dialogs: React.FC<PropsType> = React.memo(({userId}) => {\r\n\r\n    const dialogsState = useSelector((state: AppStateType) => state.dialogPage)\r\n\r\n    return (\r\n        <>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsState.userData.map((user) =>\r\n                        <DialogItem props={user} key={user.id}/>\r\n                    )}\r\n                </div>\r\n                \r\n                {\r\n                    userId \r\n                        ? <DialogsWindow  userId = {userId}/> \r\n                        : <DialogsMain />\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n})\r\n\r\nlet maxLength15 = maxLengthCreater(15);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst DialogsForm: React.FC<InjectedFormProps<DialogFormValuesType>> = (props) => {\r\n    return (\r\n        <form className={s.inputArea} onSubmit={props.handleSubmit}>\r\n            <Field placeholder='Enter message...' className={s.input} name='newMessageText' validate={[required, maxLength15]} component={Textarea}/>\r\n            <button className=\"btn\">Send</button>\r\n        </form>\r\n    )\r\n}\r\nconst DialogsFormRedux = reduxForm<DialogFormValuesType>({form: 'DialogsForm'})(DialogsForm)\r\n\r\nconst DialogsWindow: React.FC<DialogsWindowType> = ({userId}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const messageData = useSelector((state: AppStateType) => state.dialogPage.messageData)\r\n\r\n    let onAddMessage = (data: {newMessageText: string}) => {\r\n        actions.addMessage(userId, data.newMessageText);\r\n        sendMessage(11009, data.newMessageText)\r\n        dispatch(reset('DialogsForm'))\r\n    }\r\n\r\n    return <div className={s.messages}>\r\n        {\r\n            messageData.map((message) => {\r\n                return message.id === Number(userId) &&\r\n                    message.messages.map(message => <Message props={message} key={message.id}/>\r\n                )\r\n            })\r\n        }\r\n        <DialogsFormRedux onSubmit={onAddMessage}/>\r\n    </div>\r\n}\r\n\r\nconst DialogsMain = () => {\r\n\r\n    return <div style={{display: 'flex', padding: \"10px\"}}>\r\n        <img src={mailMain} alt=\"Photo\" style={{width:\"200px\", marginLeft: \"100px\"}}/>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\ntype DialogFormValuesType = {\r\n    newMessageText: string\r\n}\r\ntype PropsType = {\r\n    userId: number\r\n}\r\ntype DialogsWindowType = {\r\n    userId: number\r\n}","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst DialogsContainer: React.FC<PropsType> = (props) => {\r\n\r\n    return <Dialogs userId = {props.match.params.userId}/>\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    withRouter\r\n)(DialogsContainer)\r\n\r\n\r\ntype PropsType = {\r\n    match: {\r\n        params: {\r\n            userId: number\r\n        }\r\n    }\r\n}"],"sourceRoot":""}