{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","redux/dialogs_reducer.ts","components/News/News.module.css","Footer.module.css","img/logo.png","components/common/Preloader/Preloader.module.css","components/Profile/Profile.module.css","api/api.ts","img/next.svg","img/back.svg","components/News/Stories/Stories.module.css","components/Login/Login.module.css","components/common/FormControl/FormControl.tsx","components/common/Preloader/Preloader.tsx","serviceWorker.js","components/Navbar/FriendsBar/FreindsBar.tsx","components/Navbar/Navbar.tsx","Footer.jsx","redux/profile_reducer.ts","redux/header_reducer.ts","redux/music_reducer.ts","components/Header/MusicPlayer.tsx","components/Header/HeaderSearchForm.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/app_reducer.ts","redux/navbar_reducer.ts","redux/news_reducer.ts","redux/store-redux.ts","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/utils/Validators/cropImgFunctions.ts","components/Profile/ProfileInfo/DropzoneAva.tsx","components/Profile/ProfileInfo/AvatarPhoto.tsx","components/Profile/ProfileInfo/ProfileData.tsx","components/Profile/ProfileInfo/ProfilInfo.tsx","components/Profile/MyPosts/Post/CommentsArea.tsx","components/Profile/MyPosts/Post/ReviewArea.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Music/Playlist.tsx","components/Music/Controls.tsx","components/Music/Music.tsx","components/Settings/Settings.jsx","components/News/newsItem/NewsItem.tsx","components/News/Stories/StoriesItem.tsx","components/News/Stories/Stories.tsx","components/News/News.tsx","components/News/NewsContainer.tsx","components/Login/Login.tsx","components/HOC/withSuspens.tsx","components/Chat/Chat.tsx","components/Chat/ChatPage.tsx","componentsDataArr.js","App.tsx","index.js","img/user.svg","img/user(1).svg","redux/users_reducer.ts","components/Navbar/Navbar.module.css","components/Header/Header.module.css","components/common/FormControl/FormControl.module.css","components/utils/Validators/validators.ts","components/News/newsItem/NewsItem.module.css","img/heart.svg","img/heart_active.svg","components/Navbar/FriendsBar/FreindsBar.module.css","components/HOC/withAuthRedirect.tsx","img/user22.jpg","img/comment2.svg","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","descriptionBlock","avaArea","avaHover","avaImg","contact","btn","editBtn","inputPhoto","profileData","infoKey","postImg","dropzone","btnFollow","btnBlue","btnRed","BigModeArea","rightContent","closeBig","initialState","userData","id","name","messageData","messages","message","newMessages","actions","addMessage","newMessageText","type","sendNewMessage","data","sendMessage","_ref","Object","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","wrap","_context","prev","next","DialogsAPI","sendMessagesToUser","then","sent","stop","_x","apply","this","arguments","dialogs_reducer","state","length","undefined","action","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","map","item","concat","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","story","footer","__webpack_require__","p","ldsDualRing","content","d","__webpack_exports__","ResultCodeEnum","CaptchaEnum","UsersAPI","AuthAPI","ProfileAPI","LoginAPI","SecurityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","n","axios","create","withCredentials","baseURL","headers","api-key","getUsers","currentPage","pageSize","term","friends","get","response","follow","userId","post","unfollow","delete","getFriends","res","checkAuthMe","checkAuth","getStatus","updateStatus","status","put","updateMainPhoto","photo","formData","FormData","append","Content-Type","saveProfile","profile","checkLogin","email","password","rememberMe","captcha","logout","getCaptcha","viewAllDialogs","startDialog","getMessagesWUser","body","storiesArea","storiesItem","storiesImg","form","Element","input","meta","props","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","error","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","className","style","inputArea","assign","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_1__","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_1___default","Preloader","Boolean","window","location","hostname","match","FriendsBar","useSelector","usersPage","react_default","textAlign","FriendsBarContent","i","key","react_router_dom","to","photos","large","src","width","alt","userPhoto","itemName","display","fontSize","Navbar","navState","navbar","navData","s","nav","href","itemLink","linkWrap","navbarItemImg","toLowerCase","toString","linkName","FreindsBar","Footer","postsData","title","comments","commentId","fullName","text","likesCount","CommentsCount","liked","isFetching","addPost","newPostText","profileInfo","myProfileInfo","toggleIsFetching","setStatus","setPhoto","photoUrl","addNewComment","newCommentText","updateLikeCount","updateCommentCount","check_auth","asyncToGenerator","regenerator_default","updatePhoto","_ref4","_callee4","_context4","resultCode","Success","_x4","check_auth_me","_ref6","_callee6","getState","myId","_context6","auth","_x7","_x8","profile_reducer","objectSpread","toConsumableArray","avatar","login","isAuth","_response$data","url","header_reducer","songs","currentSong","currentTime","repeat","random","playing","audio","time","music_reducer","MusicPlayer","useDispatch","music","currentTimeState","useRef","_useState","useState","_useState2","slicedToArray","statevolum","_useState3","_useState4","setDur","_useState5","_useState6","setCurrentTime","SetCurrent","nextSong","toggleAudio","current","paused","play","pause","useEffect","volume","justifyContent","onTimeUpdate","e","target","handleUpdateTime","onCanPlay","duration","onEnded","Math","ref","preload","onClick","react_fontawesome_index_es","icon","faStepBackward","faPlay","faPause","faStepForward","HeaderSearchForm","searchFriends","setSearchFriends","isFocuced","setIsFocused","toggleFocus","document","addEventListener","elem","accountDrop","getElementById","outsideClickListener","event","contains","offsetWidth","offsetHeight","getClientRects","isVisible","removeEventListener","position","formik_esm","initialValues","onSubmit","values","setSubmitting","filter","includes","console","log","_ref2","handleChange","submitForm","autoComplete","onFocus","placeholder","value","onChange","setTimeout","borderRadius","border","outline","height","padding","faSearch","top","right","color","flexDirection","background","zIndex","index","marginTop","photoUser","margin","marginLeft","Header","profilePage","isLogInfoMode","setLogInfoMode","header","logoImg","Header_HeaderSearchForm","Header_MusicPlayer","authArea","accountInfo","userImg","_ref3","_callee3","_context3","_x3","HeaderContainer","components_Header_Header","initialized","app_reducer","navbar_reducer","news","stories","viewed","news_reducer","reducers","combineReducers","dialogPage","newsPage","users_reducer","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","ProfileStatusWithHooks","statusWord","editMode","setEditMode","toggleEditMode","autoFocus","onBlur","onDoubleClick","cursor","Input","Textarea1","Textarea2","Checkbox","ProfileDataFormRedux","reduxForm","handleSubmit","commonError","Field","component","contacts","keys","getCroppedImg","image","crop","fileName","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","reader","FileReader","readAsDataURL","onload","croppedImageFile","base64String","filename","arr","split","mime","bstr","atob","u8arr","Uint8Array","charCodeAt","File","base64StringtoFile","result","croppedImageUrl","URL","createObjectURL","DropzoneAva","setIsLoadImg","setSrc","dist_es","onDrop","files","rejectedFiles","multiple","accept","maxSize","getRootProps","getInputProps","AvatarBigMode","isBigMode","setBigMode","avatarPhoto","isOwner","imageRef","setImageRef","isLoadImg","_useState7","_useState8","_useState9","_useState10","croppedObject","setCroppedObject","_useState11","unit","aspect","_useState12","setCrop","makeClientCrop","_croppedObject","refreshInputArea","alignItems","borderBottom","user","ProfileInfo_DropzoneAva","ReactCrop_min_default","ruleOfThirds","onImageLoaded","onComplete","maxWidth","AvatarPhoto","classList","add","remove","AvatarPhoto_AvatarBigMode","Contact","contactTitle","contactValue","ProfileData","objectWithoutProperties","onEditMode","faStickyNote","infoValue","aboutMe","faCheck","lookingForAJob","faBriefcase","lookingForAJobDescription","faAddressBook","ProfileData_Contact","ProfileInfo","toggleProgressArr","switch_follow","followed","ProfileInfo_AvatarPhoto","ProfileInfo_ProfileStatusWithHooks","_ref5","_callee5","_context5","Error","stopSubmit","_error","abrupt","_x5","_x6","ProfileInfo_ProfileData","some","disabled","CommentsArea","sNews","commentsArea","commentsItem","commentPhoto","commentUserPhoto","paddingLeft","ReviewArea","onAddLike","reviewCount","likesPhotoActive","reviewIcon","likesPhoto","CommentFormRedux","inputComment","Post","newsItem","newsTitle","Post_ReviewArea","addComment","reset","Post_CommentsArea","maxLength255","maxLengthCreater","Textarea","myPostForm","sendText","validate","required","React","Component","MyPostFormRedux","MyPosts","addPostArea","newMyPostText","posts","reverse","MyPosts_Post_Post","MyPostsContainer","connect","Profile","ProfilInfo","MyPosts_MyPostsContainer","withAuthRedirect","params","useParams","authId","refreshProfile","_callee2","_context2","_x2","components_Profile_Profile","Playlist","faListUl","song","faMusic","Controls","setStateVolum","dur","fmtMSS","faVolumeDown","round","q","compute","faRandom","faRedoAlt","Music","Fragment","Music_Controls","Music_Playlist","Settings","NewsItemBigMode","onAddComment","NewsItem_CommentFormRedux","NewsItem_NewsCommentsArea","NewsCommentsArea","NewsItem","newsItemContent","NewsItem_NewsItemBigMode","StoriesItem","memo","setStoryViewed","storyPhoto","setStoryPhoto","storyIndex","setStoryIndex","imgStyle","onStoryClick","storyTime","setInterval","changeStoryPhoto","direction","clearInterval","left","defaultUserPhoto","StoryBigMode","storyId","centerStory","backPhoto","nextPhoto","Stories","Stories_StoriesItem","News","newsState","newsWrap","News_Stories_Stories","postArea","newsItem_NewsItem","ReduxForm","htmlFor","checkLoginMe","Captcha","react_router","inputData","withSuspens","Suspense","fallback","Chat","_React$useState","_React$useState2","socketChanel","setSocketChanel","ws","tryToConnect","createChanel","WebSocket","close","Chat_Messages","Chat_AddMessageForm","Messages","messageWrapper","_React$useState3","_React$useState4","setMessages","addMessageEventListener","messagesData","JSON","parse","prevState","maxHeight","overflowY","Chat_Message","Message","userName","AddMessageForm","_React$useState5","_React$useState6","setMessage","_React$useState7","_React$useState8","readyState","setReadyState","addOpenEventListener","currentTarget","cols","rows","send","ChatPage","Chat_Chat","UsersContainer","lazy","bind","WithSuspensDialogs","WithSuspensUsers","componentsData","path","exact","NewsContainer","ChatPage_ChatPage","Profile_ProfileContainer","components_Music_Music","components_Settings_Settings","components_Login_Login","App","promise","all","Header_HeaderContainer","components_Navbar_Navbar","render","src_Footer","MyWayApp","es","App_App","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","usersData","pageCount","users","count","items","totalCount","u","active","itemSettings","settings","maxLength","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","myPostWrap"],"mappings":"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","file":"static/js/main.c4bd73b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3IQY5\",\"avaArea\":\"ProfileInfo_avaArea__18DAX\",\"avaHover\":\"ProfileInfo_avaHover__3nvcH\",\"avaImg\":\"ProfileInfo_avaImg__2N24i\",\"contact\":\"ProfileInfo_contact__3sfQm\",\"btn\":\"ProfileInfo_btn__2kxrB\",\"editBtn\":\"ProfileInfo_editBtn__3eBuS\",\"inputPhoto\":\"ProfileInfo_inputPhoto__2hIBc\",\"profileData\":\"ProfileInfo_profileData__1UrmR\",\"infoKey\":\"ProfileInfo_infoKey__2chCu\",\"postImg\":\"ProfileInfo_postImg__2kEd0\",\"dropzone\":\"ProfileInfo_dropzone__1CZls\",\"btnFollow\":\"ProfileInfo_btnFollow__2_-TK\",\"btnBlue\":\"ProfileInfo_btnBlue__1CYGR\",\"btnRed\":\"ProfileInfo_btnRed__1z1AG\",\"BigModeArea\":\"ProfileInfo_BigModeArea__SSov4\",\"rightContent\":\"ProfileInfo_rightContent__2khK0\",\"closeBig\":\"ProfileInfo_closeBig__16rkQ\"};","import { InferActionsTypes, ThunkType } from \"./store-redux\";\r\nimport { DialogsAPI } from \"../api/api\";\r\n\r\nlet id = 4;\r\n\r\ntype UserDataType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\ntype MessageDataType = {\r\n    id: number\r\n    messages: Array<MessagesType>\r\n}\r\n\r\nlet initialState = {\r\n    userData: [\r\n        {\"id\": 1, \"name\": \"Dmitri\"},\r\n        {\"id\": 2, \"name\": \"Svetlana\"},\r\n        {\"id\": 3, \"name\": \"Nauryz\"},\r\n        {\"id\": 4, \"name\": \"Dinmukhamed\"},\r\n        {\"id\": 5, \"name\": \"Mukhit\"}\r\n    ] as Array<UserDataType>,\r\n    messageData: [\r\n            {\r\n                id: 1,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"Yo\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"How are you\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 2,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"hello. how are you?\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"im good\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 3,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"hi\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"what we get in home work\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 4,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"drop our phootos\"},\r\n                    {\"id\": 2, \"message\": \"which?\"},\r\n                    {\"id\": 1, \"message\": \"from zerendy\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 5,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"Hello classmates\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"wourld you like have hang out with me?\"},\r\n                    {\"id\": 2, \"message\": \"yes, go!\"}\r\n                ]\r\n            }\r\n        ] as Array<MessageDataType>,\r\n    newMessages: []\r\n}\r\n\r\nexport type DialogsInitialStateType = typeof initialState\r\n\r\nlet dialogs_reducer = (state = initialState, action: ActionsType): DialogsInitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Dialogs/ADD_NEW_MESSAGE': {\r\n\r\n            if (action.newMessageText.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    messageData: state.messageData.map(item => {\r\n                        if(+action.id == item.id){\r\n                            item.messages = [...item.messages, {\"id\": 2, \"message\": action.newMessageText}]\r\n                            return item\r\n                        }\r\n                        return item\r\n                    })\r\n                }\r\n            }\r\n            id += 2;\r\n            return state\r\n        }\r\n\r\n        case 'SN/Dialogs/SEND_NEW_MESSAGE': {\r\n\r\n            return {\r\n                ...state,\r\n                newMessages: action.data\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addMessage: (id: number, newMessageText: string) => ({type: 'SN/Dialogs/ADD_NEW_MESSAGE', id, newMessageText} as const),\r\n    sendNewMessage: (data: any) => ({type: 'SN/Dialogs/SEND_NEW_MESSAGE', data} as const)\r\n}\r\n\r\ntype getThunkType = ThunkType<ActionsType>\r\n\r\nexport const sendMessage = (id: number, message: string): getThunkType => async (dispatch) => {\r\n    debugger\r\n    let data = await DialogsAPI.sendMessagesToUser(id, message).then(() => {\r\n        dispatch(actions.sendNewMessage(data))\r\n    })\r\n}\r\n    \r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport default dialogs_reducer\r\n\r\n\r\n// [\r\n//     {\r\n//         id: 1,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"Yo\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"How are you\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"hello. how are you?\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"im good\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"hi\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"what we get in home work\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 4,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"drop our phootos\"},\r\n//             {\"id\": 2, \"message\": \"which?\"},\r\n//             {\"id\": 1, \"message\": \"from zerendy\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 5,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"Hello classmates\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"wourld you like have hang out with me?\"},\r\n//             {\"id\": 2, \"message\": \"yes, go!\"}\r\n//         ]\r\n//     }\r\n// ]","// extracted by mini-css-extract-plugin\nmodule.exports = {\"story\":\"News_story__LJLNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3ogKW\"};","module.exports = __webpack_public_path__ + \"static/media/logo.3fa434f6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__1cBAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__Lj4Bi\"};","import axios from \"axios\";\r\nimport {ProfileType, UserType, PhotosType, SaveProfileType} from \"../Types/Types\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"api-key\": \"201fbca2-9214-4c3c-bd7a-b698236c954c\"\r\n    }\r\n})\r\n\r\nexport enum ResultCodeEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum CaptchaEnum {\r\n    Captcha = 10\r\n}\r\n\r\nexport const UsersAPI = {\r\n\r\n    getUsers(currentPage: number = 1, pageSize: number = 10, term: string = '', friends: boolean | null = null) {\r\n        return instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friends === null ? '' : `&friend=${friends}`))\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    follow(userId: number) {\r\n        return instance.post<CommonApiType>(`follow/${userId}`, {})\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    unfollow(userId: number | null) {\r\n        return instance.delete<CommonApiType>(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    getFriends() {\r\n        return instance.get<GetUsersType>(`users?count=100&friend=true`)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n\r\n    checkAuthMe() {\r\n        return instance.get<AuthMeType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n\r\n    checkAuth(userId: number | null) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonApiType>(`profile/status`, {status})\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateMainPhoto(photo: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n        return instance.put<UpdatePhotoType>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    saveProfile(profile: SaveProfileType) {\r\n        return instance.put<CommonApiType>(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const LoginAPI = {\r\n    \r\n    checkLogin(email: string | null, password: string | null, rememberMe: boolean, captcha: string | null = null) {\r\n        return instance.post<PostLoginType>(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete<DeleteLoginType>(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const SecurityAPI = {\r\n    getCaptcha() {\r\n        return instance.get<GetCaptchaType>(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\n\r\nexport const DialogsAPI = {\r\n\r\n    viewAllDialogs() {\r\n        return instance.get<CommonApiType>(`dialogs`)\r\n    },\r\n    startDialog(userId: number) {\r\n        return instance.put<CommonApiType>(`dialogs/${userId}`)\r\n    },\r\n    getMessagesWUser(userId: number) {\r\n        return instance.get<CommonApiType>(`dialogs/${userId}/messages`)\r\n    },\r\n    sendMessagesToUser(userId: number, message: string) {\r\n        return instance.post<CommonApiType>(`dialogs/${userId}/messages`, {\r\n            body: '' + message\r\n        }).then((res) => {\r\n            return res.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\ntype CommonApiType = DeleteLoginType\r\n\r\ntype GetUsersType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: null | string\r\n}\r\n\r\n\r\ntype AuthMeType = {\r\n    data: { id: number | null, login: string | null, email: string | null }\r\n    resultCode: ResultCodeEnum | CaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\n\r\ntype UpdatePhotoType = {\r\n    data: {\r\n        photos: PhotosType\r\n    }\r\n    messages: Array<string>\r\n    resultCode: ResultCodeEnum | CaptchaEnum\r\n}\r\n\r\n\r\ntype DeleteLoginType = {\r\n    data: {}\r\n    resultCode: ResultCodeEnum | CaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\ntype PostLoginType = {\r\n    data: { userId: number }\r\n    resultCode: ResultCodeEnum | CaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\n\r\ntype GetCaptchaType = {\r\n    url: string\r\n}","module.exports = __webpack_public_path__ + \"static/media/next.a6dfbed7.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.87e27296.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"storiesArea\":\"Stories_storiesArea__2G9qc\",\"storiesItem\":\"Stories_storiesItem__3jXBQ\",\"storiesImg\":\"Stories_storiesImg__gvng1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2n2g0\"};","import React, { EventHandler, DragEvent, FocusEvent, ChangeEvent } from 'react'\r\nimport style from './FormControl.module.css'\r\nimport { WrappedFieldProps, EventOrValueHandler } from 'redux-form'\r\n\r\ntype FormControlType = (params: WrappedFieldProps) => React.ReactNode\r\n\r\ntype ElementType = {\r\n    checked?: boolean\r\n    value: any\r\n    onBlur: EventOrValueHandler<FocusEvent<any>>\r\n    onChange: EventOrValueHandler<ChangeEvent<any>>\r\n    onDragStart: EventHandler<DragEvent<any>>\r\n    onDrop: EventHandler<DragEvent<any>>\r\n    onFocus: EventHandler<FocusEvent<any>>\r\n}\r\n\r\nexport function Element(Element: any): FormControlType{\r\n    \r\n    return function( {input, meta, ...props} ) {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return <div className={style.inputArea + \" \" + (hasError ? style.error : \"\")}>\r\n        \r\n            <Element {...input} {...props} />\r\n            <span>{hasError && meta.error}</span>\r\n        </div>\r\n}}\r\n","import React from 'react'\r\nimport style from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return <div className={style.ldsDualRing}></div>\r\n}\r\n\r\nexport default Preloader","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport style from '../FriendsBar/FreindsBar.module.css'\r\nimport userPhoto from '../../../img/user(1).svg'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../../redux/store-redux'\r\n\r\nconst FriendsBar: React.FC = () => {\r\n\r\n    const friends = useSelector((state: AppStateType) => state.usersPage.friends)\r\n\r\n    return <div className={style.FriendsBar}>\r\n        <h3 style={{textAlign: 'center'}}>Friends</h3>\r\n        <div className={style.FriendsBarContent}>\r\n        {\r\n            friends.map((item, i) => {\r\n                if(i<5){\r\n                    return <div key={item.id}><NavLink to={`/profile/${item.id}`} className={style.item}>\r\n                        {\r\n                        item.photos.large \r\n                            ? <img src={item.photos.large as string | undefined} style={{width: '40px'}} alt=\"User\"/>\r\n                            : <img src={userPhoto} style={{width: '40px'}} alt=\"User\"/>\r\n                        }\r\n                        <span className={style.itemName} style={{display: 'block', fontSize: '13px'}}>\r\n                            {item.name}\r\n                        </span>\r\n                    </NavLink>\r\n                    </div>\r\n                }\r\n            })\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default FriendsBar","import React, { Props } from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {useSelector} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { AppStateType } from '../../redux/store-redux';\r\nimport FriendsBar from './FriendsBar/FreindsBar';\r\n\r\nconst Navbar: React.FC = () => {\r\n\r\n    const navState = useSelector((state: AppStateType) => state.navbar.navData)\r\n\r\n    return <nav className={s.nav}>\r\n        {navState.map((data) => (\r\n            <div className={s.item} key={data.id}>\r\n                <NavLink to={'/' + data.href} className={s.itemLink}>\r\n                    <span className={s.linkWrap}>\r\n                        <span className={s.navbarItemImg + ' ' + s[data.name.toLowerCase().toString()]}/>\r\n                        <span className={s.linkName}>{data.name}</span>\r\n                    </span>\r\n                </NavLink>\r\n            </div>\r\n        ))}\r\n        <FriendsBar />\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Footer.module.css'\r\n\r\nconst Footer = () => {\r\n  return (<footer className={s.footer}>\r\n   <p>&copy; all right reserves, 2020</p>\r\n  </footer>);\r\n}\r\n\r\nexport default Footer;","import {ProfileAPI, ResultCodeEnum} from \"../api/api\";\r\nimport { stopSubmit, FormAction } from \"redux-form\";\r\nimport {CommentsType, SaveProfileType, ProfileType} from './../Types/Types';\r\nimport { ThunkType, InferActionsTypes } from \"./store-redux\";\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            title: \"Hello everyone. it is my first news post!\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"React makes it painless to create interactive UIs.\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Build encapsulated components that manage their own state, then compose them to make complex UIs.\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Declarative views make your code more predictable and easier to debug.\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        }\r\n    ] as Array<PostItemType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    isFetching: false,\r\n    photos: null as PhotosType | null\r\n}\r\n\r\nexport type ProfileInitialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nlet profile_reducer = (state = initialState, action: ActionsType): ProfileInitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Profile/ADD_NEW_POST': {\r\n\r\n            if (action.newPostText.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    postsData: [...state.postsData, {\r\n                        id: 5,\r\n                        fullName: '',\r\n                        title: action.newPostText,\r\n                        photo: '',\r\n                        avatar: '',\r\n                        comments: [],\r\n                        likesCount: 0,\r\n                        CommentsCount: 0,\r\n                        liked: false\r\n                    }]\r\n                }\r\n            }\r\n\r\n            return state\r\n\r\n        }\r\n\r\n        case 'SN/Profile/PROFILE_INFO': {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        case 'SN/Profile/My_PROFILE_INFO': {\r\n\r\n            return {\r\n                ...state,\r\n                profile: {...action.profile},\r\n                photos: action.profile.photos\r\n            }\r\n        }\r\n        case 'SN/Profile/TOGGLE_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/Profile/SET_STATUS': {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SN/Profile/SET_PHOTO': {\r\n\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photoUrl } as ProfileType,\r\n                photos: action.photoUrl\r\n            }\r\n        }\r\n\r\n        case 'SN/Profile/ADD_NEW_COMMENT': {\r\n            if (action.newCommentText.length > 0){\r\n                return {\r\n                    ...state,\r\n                    postsData: state.postsData.map(item => {\r\n                        if(item.id === action.id)\r\n                            item.comments = [...item.comments, {userId: 5, fullName: 'dikushan00', commentId: 5, text: action.newCommentText, photo: ''}]\r\n                        return item\r\n                    })\r\n                }\r\n            }\r\n            return state\r\n        }\r\n\r\n        case 'SN/Profile/UPDATE_LIKE_COUNT': {\r\n            \r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.map(item => {\r\n                    if(item.id === action.id && !item.liked){\r\n                        item.likesCount = item.likesCount + 1\r\n                        item.liked = !item.liked \r\n                    } else if(item.id === action.id && item.liked) {\r\n                        item.likesCount = item.likesCount - 1 \r\n                        item.liked = !item.liked \r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        case 'SN/Profile/UPDATE_COMMENT_COUNT': {\r\n\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.map(item => {\r\n                    if(item.id === action.id)\r\n                        item.CommentsCount++\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addPost: (newPostText: string) => ({type: 'SN/Profile/ADD_NEW_POST', newPostText} as const),\r\n    profileInfo: (profile: ProfileType) => ({type: 'SN/Profile/PROFILE_INFO', profile} as const),\r\n    myProfileInfo: (profile: ProfileType) => ({type: 'SN/Profile/My_PROFILE_INFO', profile} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/Profile/TOGGLE_FETCHING', isFetching} as const),\r\n    setStatus: (status: string) => ({type: 'SN/Profile/SET_STATUS', status} as const),\r\n    setPhoto: (photoUrl: PhotosType) => ({type: 'SN/Profile/SET_PHOTO', photoUrl} as const),\r\n    addNewComment: (id: number, newCommentText: string) => ({type: 'SN/Profile/ADD_NEW_COMMENT', id, newCommentText} as const),\r\n    updateLikeCount: (id: number) => ({type: 'SN/Profile/UPDATE_LIKE_COUNT', id} as const),\r\n    updateCommentCount: (id: number) => ({type: 'SN/Profile/UPDATE_COMMENT_COUNT', id} as const)\r\n}\r\n\r\nexport const check_auth = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const data = await ProfileAPI.checkAuth(userId)\r\n    dispatch(actions.profileInfo(data))\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\nexport const getStatus = (userId: number): getThunkType => async (dispatch) => {\r\n    \r\n    const data = await ProfileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status:string): getThunkType => async (dispatch) => {\r\n    const data = await ProfileAPI.updateStatus(status)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(actions.setStatus(status));\r\n        }\r\n}\r\n\r\nexport const updatePhoto = (photo: File): getThunkType => async (dispatch) => {\r\n    const data = await ProfileAPI.updateMainPhoto(photo)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(actions.setPhoto(data.data.photos));\r\n        }\r\n}\r\n\r\nexport const saveProfile = (profile: SaveProfileType): getThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const response = await ProfileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === ResultCodeEnum.Success) {\r\n        if(userId)\r\n            dispatch(check_auth(userId));\r\n        else throw new Error\r\n    } else {\r\n        dispatch(stopSubmit(\"editProfileData\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport const check_auth_me = (): getThunkType => async (dispatch, getState) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const myId = getState().auth.id;\r\n    const data = await ProfileAPI.checkAuth(myId)\r\n    dispatch(actions.myProfileInfo(data))\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\n\r\nexport default profile_reducer\r\n\r\nexport type PostItemType = {\r\n    id: number,\r\n    fullName: string,\r\n    title: string,\r\n    avatar: string,\r\n    photo: string | null,\r\n    comments: Array<CommentsType>\r\n    likesCount: number,\r\n    CommentsCount: number,\r\n    liked: boolean\r\n}\r\n\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\ntype getThunkType = ThunkType<ActionsType | FormAction>\r\n\r\n","import {AuthAPI, LoginAPI, SecurityAPI, CaptchaEnum, ResultCodeEnum} from \"../api/api\";\r\nimport {stopSubmit, FormAction} from \"redux-form\";\r\nimport { check_auth_me } from \"./profile_reducer\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType, InferActionsTypes, ThunkType } from \"./store-redux\";\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    login: null as string | null,\r\n    email: null as string | null,\r\n    isAuth: false,\r\n    captcha: null as string | null\r\n}\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nlet header_reducer = (state = initialState, action : ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Header/SET_NEW_AUTH':\r\n        case 'SN/Header/SET_NEW_CAPTCHA': {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setNewAuth: (id :number | null, login : string | null, email : string | null, isAuth: boolean) => ({type: 'SN/Header/SET_NEW_AUTH', data: {id, login, email, isAuth}} as const),\r\n    setNewCaptcha: (captcha: string) => ({type: 'SN/Header/SET_NEW_CAPTCHA', data: {captcha}} as const)\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\ntype GetThunkType = ThunkType<ActionsType | FormAction>\r\n\r\nexport const checkAuthMe = (): GetThunkType => async (dispatch) => {\r\n    const response = await AuthAPI.checkAuthMe()\r\n    if (response.resultCode === ResultCodeEnum.Success) {\r\n        let {id, login, email} = response.data\r\n        dispatch(actions.setNewAuth(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const checkLoginMe = (email: string | null, password: string | null, rememberMe: boolean, captcha : string | null):GetThunkType => async (dispatch) => {\r\n    const response = await LoginAPI.checkLogin(email, password, rememberMe, captcha)\r\n\r\n    if (response.data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(checkAuthMe());\r\n        dispatch(check_auth_me());\r\n    } else {\r\n        if(response.data.resultCode === CaptchaEnum.Captcha){\r\n            dispatch(getCaptcha())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error!'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logoutMe = (): GetThunkType => async (dispatch) => {\r\n    const response = await LoginAPI.logout()\r\n    if (response.data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(actions.setNewAuth(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptcha = (): GetThunkType => async (dispatch) => {\r\n    const response = await SecurityAPI.getCaptcha()\r\n    dispatch(actions.setNewCaptcha(response.data.url))\r\n}\r\n\r\nexport default header_reducer","import {InferActionsTypes} from \"./store-redux\";\r\n\r\nlet initialState = {\r\n    songs: [\r\n        [\r\n            \"Homeroad\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_09_-_Homeroad.mp3\"\r\n        ],\r\n        [\r\n            \"Interception\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_07_-_Interception.mp3\"\r\n        ],\r\n        [\r\n            \"Sentinel\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_04_-_Sentinel.mp3\"\r\n        ],\r\n        [\r\n            \"Great Expectations\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_05_-_Great_Expectations.mp3\"\r\n        ],\r\n        [\r\n            \"Downfall\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_08_-_Downfall.mp3\"\r\n        ],\r\n        [\r\n            \"Augmentations\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_01_-_Augmentations.mp3\"\r\n        ],\r\n        [\r\n            \"Illumination\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Kai_Engel/Satin/Kai_Engel_-_02_-_Illumination.mp3\"\r\n        ],\r\n        [\r\n            \"Cabaret\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_10_-_Cabaret.mp3\"\r\n        ],\r\n        [\r\n            \"Contention\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_03_-_Contention.mp3\"\r\n        ],\r\n        [\r\n            \"Dark Alleys\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_06_-_Dark_Alleys.mp3\"\r\n        ],\r\n        [\r\n            \"Climb\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_01_-_Climb.mp3\"\r\n        ],\r\n        [\r\n            \"Adventure\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_03_-_Adventure.mp3\"\r\n        ],\r\n        [\r\n            \"Lullaby\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_04_-_Lullaby.mp3\"\r\n        ]\r\n    ],\r\n    currentSong: 0,\r\n    currentTime: 0,\r\n    repeat: false,\r\n    random: false,\r\n    playing: false,\r\n    audio: null\r\n}\r\n\r\nexport type MusicInitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nlet music_reducer = (state = initialState, action: ActionsType):MusicInitialStateType => {\r\n        switch (action.type) {\r\n            case 'SET_CURRENT_SONG':\r\n                return {\r\n                    ...state,\r\n                    currentSong: action.data,\r\n                    playing: true\r\n                }\r\n            case 'UPDATE_CURRENT_TIME':\r\n                return {\r\n                    ...state,\r\n                    currentTime: action.time\r\n                }\r\n            case 'TOGGLE_RANDOM':\r\n                return {\r\n                    ...state,\r\n                    random: !state.random\r\n                }\r\n            case 'TOGGLE_REPEAT':\r\n                return {\r\n                    ...state,\r\n                    repeat: !state.playing\r\n                }\r\n            case 'TOGGLE_PLAYING':\r\n                return {\r\n                    ...state,\r\n                    playing: !state.playing\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    return state\r\n}\r\n\r\nexport const actions = {\r\n    SetCurrent: (id: number) => ({ type: 'SET_CURRENT_SONG', data: id } as const),\r\n    updateCurrentTime: (time: any) => ({ type: 'UPDATE_CURRENT_TIME', time } as const),\r\n    togglePlaying: () => ({ type: 'TOGGLE_PLAYING' } as const),\r\n    toggleRepeat: () => ({ type: 'TOGGLE_REPEAT' } as const),\r\n    toggleRandom: () => ({ type: 'TOGGLE_RANDOM' } as const),\r\n}\r\n\r\nexport default music_reducer","import { faPause, faPlay, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../redux/store-redux'\r\nimport { actions } from './../../redux/music_reducer';\r\nimport './../Music/Music.css'\r\n\r\nconst MusicPlayer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const playing = useSelector((state: AppStateType) => state.music.playing)\r\n    const currentSong = useSelector((state: AppStateType) => state.music.currentSong)\r\n    const random = useSelector((state: AppStateType) => state.music.random)\r\n    const songs = useSelector((state: AppStateType) => state.music.songs)\r\n    const repeat = useSelector((state: AppStateType) => state.music.repeat)\r\n    const currentTimeState = useSelector((state: AppStateType) => state.music.currentTime)\r\n\r\n    const audio = useRef('audio_tag');\r\n\r\n    const [statevolum, setStateVolum] = useState(0.3)\r\n    const [dur, setDur] = useState(0)\r\n    const [currentTime, setCurrentTime] = useState(currentTimeState)\r\n\r\n    const SetCurrent = (id: number) => {\r\n        dispatch(actions.SetCurrent(id))\r\n    }\r\n    // Prev song\r\n    const prevSong = () => {\r\n        if (currentSong === 0) {\r\n            SetCurrent(songs.length - 1)\r\n        } else {\r\n            SetCurrent(currentSong - 1)\r\n        }\r\n    }\r\n    // Next song\r\n    const nextSong = () => {\r\n        if (currentSong === songs.length - 1) {\r\n            SetCurrent(0)\r\n        } else {\r\n            SetCurrent(currentSong + 1)\r\n        }\r\n    }\r\n\r\n    const handleEnd = () => {\r\n        // Check for random and repeat options\r\n        if (random) {\r\n            return dispatch({ type: 'SET_CURRENT_SONG', data: ~~(Math.random() * songs.length) })\r\n        } else {\r\n            if (repeat) {\r\n                nextSong()\r\n            } else if ((currentSong === songs.length - 1)) {\r\n                return\r\n            } else {\r\n                nextSong();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUpdateTime = (e: any) => {\r\n        setCurrentTime(e.target.currentTime)\r\n        dispatch(actions.updateCurrentTime(currentTime))\r\n    }\r\n\r\n    const togglePlaying = () => {\r\n        dispatch(actions.togglePlaying())\r\n    }\r\n    //@ts-ignore\r\n    const toggleAudio = () => audio.current.paused ? audio.current.play() : audio.current.pause();\r\n\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        audio.current.volume = statevolum;\r\n        //@ts-ignore\r\n        audio.current.currentTime = currentTime\r\n        if (playing) { toggleAudio() }\r\n    }, [currentSong])\r\n\r\n    useEffect(() => {\r\n        setCurrentTime(currentTimeState)\r\n        //@ts-ignore\r\n        audio.current.currentTime = currentTime\r\n    }, [currentTimeState])\r\n\r\n    return <div style = {{display: \"flex\", justifyContent: \"left\"}}>\r\n        <audio\r\n                //@ts-ignore\r\n                onTimeUpdate={(e) => handleUpdateTime(e)}\r\n                //@ts-ignore\r\n                onCanPlay={(e) => setDur(e.target.duration)}\r\n                onEnded={handleEnd}\r\n                //@ts-ignore\r\n                ref={audio}\r\n                type=\"audio/mpeg\"\r\n                preload='true'\r\n                src={songs[currentSong][1]} />\r\n        <div className=\"musicControls\">\r\n                <span className=\"prev\" onClick={prevSong}><FontAwesomeIcon icon={faStepBackward} /></span>\r\n                <span className=\"play\" onClick={() => { togglePlaying(); toggleAudio(); }}>\r\n                    <span className={!playing ? '' : 'hide'}><FontAwesomeIcon icon={faPlay} /></span>\r\n                    <span className={!playing ? 'hide' : ''}><FontAwesomeIcon icon={faPause} /></span>\r\n                </span>\r\n\r\n                <span className=\"next\" onClick={nextSong}><FontAwesomeIcon icon={faStepForward} /></span>\r\n        </div>\r\n        <span className=\"song\">{songs[currentSong][0]}</span>\r\n    </div>\r\n}\r\n\r\nexport default MusicPlayer","import {faSearch} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {Field, Form, Formik} from 'formik'\r\nimport React, {useState} from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport photoUser from '../../img/user.svg'\r\nimport {AppStateType} from '../../redux/store-redux'\r\nimport {UserType} from '../../Types/Types'\r\n\r\nconst HeaderSearchForm = () => {\r\n\r\n    const friends = useSelector((state: AppStateType) => state.usersPage.friends)\r\n    const [searchFriends, setSearchFriends] = useState([])\r\n    const [isFocuced, setIsFocused] = useState(false)\r\n\r\n    const submit = (values: FormValuesType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        setSubmitting(false)\r\n        let searchFriends = friends.filter((item: UserType) => {\r\n            return item.name && item.name.toLowerCase().includes(values.fullName)\r\n        }) as Array<UserType>\r\n        //@ts-ignore\r\n        setSearchFriends(searchFriends)\r\n        console.log(values.fullName)\r\n        console.log(searchFriends)\r\n    }\r\n\r\n    const toggleFocus = () => {\r\n        const flag = !isFocuced\r\n        setIsFocused(flag)\r\n    }\r\n\r\n    function onClickClose(elem: HTMLElement) {\r\n        function outsideClickListener(event: any) {\r\n            if (elem && !elem.contains(event.target) && isVisible(elem)) {\r\n                setIsFocused(false)\r\n                document.removeEventListener('click', outsideClickListener);\r\n            }\r\n        }\r\n\r\n        document.addEventListener('click', outsideClickListener)\r\n    }\r\n\r\n    document.addEventListener(\"click\", () => {\r\n        const accountDrop = document.getElementById(\"subResulSearch\");\r\n        //@ts-ignore\r\n        onClickClose(accountDrop)\r\n    })\r\n\r\n    function isVisible(elem: HTMLElement) {\r\n        return !!elem && !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\r\n    }\r\n\r\n    return <div style={{position: \"relative\"}}>\r\n        <Formik\r\n            initialValues={{\r\n                fullName: \"\",\r\n            }}\r\n            onSubmit={submit}>\r\n            {\r\n                ({values, handleChange, submitForm}) => (\r\n                    <Form style={{position: \"relative\"}}>\r\n                        <Field type=\"text\" name=\"fullName\" autoComplete=\"off\" onFocus={toggleFocus}\r\n                               placeholder=\"Enter name...\" value={values.fullName} onChange={(e: any) => {\r\n                            handleChange(e);\r\n                            setTimeout(submitForm, 0)\r\n                        }} style={{\r\n                            borderRadius: \"20px\",\r\n                            border: \"1px\",\r\n                            outline: \"none\",\r\n                            height: \"22px\",\r\n                            padding: \"5px 19px\"\r\n                        }}/>\r\n                        <FontAwesomeIcon icon={faSearch}\r\n                                         style={{position: \"absolute\", top: \"4px\", right: \"12px\", color: \"#4a76a8\"}}/>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        {\r\n            searchFriends.length > 0 && isFocuced &&\r\n            <div id=\"subResultSearch\" onClick={() => setTimeout(() => setIsFocused(false), 100)} style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                border: \"1px solid #ccc\",\r\n                width: \"196px\",\r\n                borderRadius: \"5px\",\r\n                position: \"absolute\",\r\n                top: \"36px\",\r\n                background: \"#fff\",\r\n                padding: \"20px\",\r\n                zIndex: 1005\r\n            }}>\r\n                {searchFriends.map((item, index) => {\r\n                    if (index < 7) {\r\n                        return <div style={{display: \"flex\", height: \"30px\", marginTop: \"10px\"}}>\r\n                            {/*@ts-ignore */}\r\n                            {<NavLink to={`/profile/${item.id}`}>\r\n                                {/*@ts-ignore */}\r\n                                <img src={item.photos.large ? item.photos.large : photoUser}\r\n                                     style={{width: \"25px\", height: \"25px\", margin: 0, borderRadius: \"50%\"}}\r\n                                     alt=\"PHOTOS\"/>\r\n                                {/*@ts-ignore */}\r\n                                <span style={{marginLeft: \"15px\"}}>{item.name}</span>\r\n                            </NavLink>}\r\n                        </div>\r\n                    }\r\n                })}\r\n            </div>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default HeaderSearchForm\r\n\r\ntype FormValuesType = {\r\n    fullName: string\r\n}","import React, { useState } from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from '../../img/user(1).svg'\r\nimport logoImg from '../../img/logo.png'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/store-redux';\r\nimport { logoutMe } from '../../redux/header_reducer';\r\nimport MusicPlayer from './MusicPlayer';\r\nimport HeaderSearchForm from './HeaderSearchForm';\r\n\r\nconst Header: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n    const photos = useSelector((state: AppStateType) => state.profilePage.photos)\r\n    const login = useSelector((state: AppStateType) => state.auth.login)\r\n    const [isLogInfoMode, setLogInfoMode] = useState(false)\r\n\r\n    const logout = () => {\r\n        dispatch(logoutMe())\r\n    }\r\n\r\n    function onClickClose(elem: HTMLElement) {\r\n        function outsideClickListener(event: any) {\r\n            if (elem && !elem.contains(event.target) && isVisible(elem)) { \r\n                setLogInfoMode(false)\r\n                 document.removeEventListener('click', outsideClickListener);\r\n            }\r\n        }\r\n        document.addEventListener('click', outsideClickListener)\r\n    }\r\n    \r\n    document.addEventListener(\"click\", () => {  \r\n        const accountDrop = document.getElementById(\"accountDrop\"); \r\n        //@ts-ignore\r\n        onClickClose(accountDrop)\r\n    })\r\n\r\n    function isVisible(elem: HTMLElement) {\r\n        return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\r\n    }\r\n\r\n    return <header className={s.header}>\r\n        <NavLink className=\"logo\" to='/'><img src={logoImg} /></NavLink>\r\n        <HeaderSearchForm />\r\n        <MusicPlayer />\r\n        <div className={s.authArea} id=\"Drop\" style={{height: \"100%\"}}>\r\n            { isAuth\r\n                ? <div className={s.accountInfo} onClick = {() => setLogInfoMode(true)}>\r\n                    { photos \r\n                        ? photos.large && <img src={photos.large} className={s.userImg}/> \r\n                        : <img src={userPhoto} className={s.userImg}/>}\r\n                    {login}\r\n                    {\r\n                        isLogInfoMode \r\n                        && <div className={s.accountDrop} id=\"accountDrop\">\r\n                            <NavLink to=\"/profile\" className={s.login}>{login}</NavLink>\r\n                            <button onClick={logout} className = \"btn\" style={{marginTop: \"15px\"}}>logout</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : <NavLink to=\"/login\">Login</NavLink> }\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = () => {\r\n\r\n    return <Header />\r\n}\r\n\r\nexport default HeaderContainer","import {checkAuthMe} from \"./header_reducer\";\r\nimport {check_auth_me} from \"./profile_reducer\";\r\nimport {getFriends} from '../redux/users_reducer'\r\nimport { InferActionsTypes, ThunkType } from \"./store-redux\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nlet app_reducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/APP/INIT': {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initialize: () => ({type: 'SN/APP/INIT'} as const)\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype GetThunkType = ThunkType<ActionsType>\r\n\r\nexport const init = (): GetThunkType => async (dispatch) => {\r\n    let promise = dispatch(checkAuthMe())\r\n    let promise2 = dispatch(getFriends)\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(check_auth_me())\r\n        })\r\n        .then(()=> {\r\n            dispatch(getFriends())\r\n            dispatch(actions.initialize());\r\n        })\r\n}\r\n\r\nexport default app_reducer","\r\nlet initialState = {\r\n    navData: [\r\n        {\r\n            \"id\": 1,\r\n            \"href\": \"News\",\r\n            \"name\": \"News\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/3158/3158703.svg\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"href\": \"profile\",\r\n            \"name\": \"Profile\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/1077/1077114.svg\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"href\": \"dialogs\",\r\n            \"name\": \"Message\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/2462/2462719.svg\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"href\": \"music\",\r\n            \"name\": \"Music\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/876/876817.svg\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"href\": \"users\",\r\n            \"name\": \"Users\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/681/681494.svg\"\r\n        },\r\n        {\r\n            \"id\": 6,\r\n            \"href\": \"settings\",\r\n            \"name\": \"Settings\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/889/889744.svg\"\r\n        },\r\n        {\r\n            \"id\": 7,\r\n            \"href\": \"chat\",\r\n            \"name\": \"Chat\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/889/889744.svg\"\r\n        }\r\n    ] as Array<NavDataItemType>\r\n}\r\n\r\nexport type NavbarInitialStateType = typeof initialState\r\n\r\nlet navbar_reducer = (state = initialState, action: any):NavbarInitialStateType => {\r\n\r\n    return state\r\n}\r\n\r\nexport default navbar_reducer\r\n\r\nexport type NavDataItemType = {\r\n    id: number\r\n    href: string\r\n    name: string\r\n    photo: string\r\n}\r\n","import { InferActionsTypes } from \"./store-redux\";\r\nimport { stat } from \"fs\";\r\n\r\nlet id = 3;\r\n\r\nlet initialState = {\r\n    news: [\r\n        {\r\n            id: 1,\r\n            fullName: 'Уютный домик',\r\n            title: \"Hello everyone. it is my first news post!\",\r\n            avatar: \"http://a824.phobos.apple.com/us/r30/Purple3/v4/47/47/e2/4747e282-b06d-8c33-c4d8-b9c22db8abad/pr_source.png?downloadKey=1422036762_0750e892c607d16376f15f0523f383d6\",\r\n            photo: \"https://sites.google.com/site/prirodanaha/_/rsrc/1468741750018/home/%D0%96%D0%B8%D0%B2%D0%B0%D1%8F-%D0%BF%D1%80%D0%B8%D1%80%D0%BE%D0%B4%D0%B0.jpg\",\r\n            comments: [{userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'}, {userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'}],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 2,\r\n            fullName: 'Уютный домик',\r\n            title: \"Today wether is good\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJwu0fvICSBsYl9qzOz1sjoyoxfEP2aPplVF7d9H=s900-c-k-c0xffffffff-no-rj-mo\",\r\n            photo: \"https://content.onliner.by/news/original_size/9b099955c46555811d26c14efdb3af00.jpeg\",\r\n            comments: [{userId: 2, commentId: 2, fullName: 'Бектемисов Тамерлан', text: \"Kazakhstan!!!\", photo: 'https://www.trendsmap.com/ipx/https://pbs.twimg.com/profile_images/926488420645523456/hwKSfqNj.jpg'}],\r\n            likesCount: 13,\r\n            CommentsCount: 1,\r\n            liked: true\r\n        },\r\n        {\r\n            id: 3,\r\n            fullName: 'Приколы за 253',\r\n            title: \"Im go to school\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJwNrBajG2GHjhDoh5dd4Ol6bgmpNmIFCcA8DeLvaA=s900-c-k-c0xffffffff-no-rj-mo\",\r\n            photo: \"https://vsluh.ru/uploads/2020/03/17/154154/fixed_large_b8213f97-e5d7-49ea-8085-2195204a7423.jpg\",\r\n            comments: [{userId: 3, commentId: 3, fullName: 'Байбекова Айдана', text: \"COol!\", photo: 'https://yt3.ggpht.com/a/AATXAJz96SEqjCTeAd4fIKN-cMmEeqGU26eHSkwB9JISgg=s900-c-k-c0xffffffff-no-rj-mo'}],\r\n            likesCount: 12,\r\n            CommentsCount: 1,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 4,\r\n            fullName: 'Мем фром драг дилла',\r\n            title: \"Why he not me?!\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJw0vq_YrFUkbgA2WYAGe0upS4MeD1QJZomS4QaE=s900-c-k-c0xffffffff-no-rj-mo\",\r\n            photo: \"https://s.ura.news/images/news/upload/news/426/025/1052426025/2f82b66cdc059a737ef34fe31281c88e_760x0_700.800.0.0.jpg\",\r\n            comments: [{userId: 4, commentId: 4, fullName: 'Тастемирова Томирис', text: \"Go walk with me>\", photo: 'https://cdn.freelance.ru/img/portfolio/pics/00/3A/2C/3812566.jpg?mt=d239b33b'}],\r\n            likesCount: 1,\r\n            CommentsCount: 1,\r\n            liked: false\r\n        }\r\n    ] as Array<NewsItemType>,\r\n    stories: [\r\n        {id: 1, userId: 1, viewed: false, photo: 'https://avatars.mds.yandex.net/get-pdb/1996997/9c893ac4-b0d0-48ca-ba75-5c79bccf41f8/s375'},\r\n        {id: 2, userId: 2, viewed: false, photo: 'https://photodzen.com/content/images/lines_2_2.jpg'},\r\n        {id: 3, userId: 3, viewed: false, photo: 'https://otvet.imgsmail.ru/download/497424eb0af0d51913941be13c03b052_i-18.jpg'}\r\n    ] as Array<StoriesType>\r\n}\r\n\r\nexport type NewsInitialStateType = typeof initialState\r\n\r\n\r\nlet news_reducer = (state = initialState, action: ActionsType): NewsInitialStateType => {\r\n    \r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/News/ADD_NEW_COMMENT': {\r\n            if (action.newCommentText.length > 0){\r\n                return {\r\n                    ...state,\r\n                    news: state.news.map(item => {\r\n                        if(item.id === action.id)\r\n                            item.comments = [...item.comments, {userId: 5, fullName: 'dikushan00', commentId: 5, text: action.newCommentText, photo: ''}]\r\n                        return item\r\n                    })\r\n                }\r\n                id++;\r\n            }\r\n            return state\r\n        }\r\n\r\n        case 'SN/News/UPDATE_LIKE_COUNT': {\r\n            \r\n            return {\r\n                ...state,\r\n                news: state.news.map(item => {\r\n                    if(item.id === action.id && !item.liked){\r\n                        item.likesCount = item.likesCount + 1\r\n                        item.liked = !item.liked \r\n                    } else if(item.id === action.id && item.liked) {\r\n                        item.likesCount = item.likesCount - 1 \r\n                        item.liked = !item.liked \r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        case 'SN/News/UPDATE_COMMENT_COUNT': {\r\n\r\n            return {\r\n                ...state,\r\n                news: state.news.map(item => {\r\n                    if(item.id === action.id)\r\n                        item.CommentsCount++\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        case 'SN/News/VIEW_STORY': {\r\n\r\n            return {\r\n                ...state,\r\n                stories: state.stories.map((item) => {\r\n                    if(item.id === action.id)\r\n                        item.viewed = true\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addNewComment: (id: number, newCommentText: string) => ({type: 'SN/News/ADD_NEW_COMMENT', id, newCommentText} as const),\r\n    updateLikeCount: (id: number) => ({type: 'SN/News/UPDATE_LIKE_COUNT', id} as const),\r\n    updateCommentCount: (id: number) => ({type: 'SN/News/UPDATE_COMMENT_COUNT', id} as const),\r\n    viewStory: (id: number) => ({type: 'SN/News/VIEW_STORY', id} as const)\r\n} \r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport default news_reducer\r\n\r\n\r\ntype CommentsType = {\r\n    userId: number\r\n    commentId: number\r\n    fullName: string\r\n    text: string\r\n    photo: string\r\n}\r\n\r\nexport type StoriesType = {\r\n    id: number\r\n    userId: number\r\n    viewed: boolean\r\n    photo: string\r\n}\r\n\r\nexport type NewsItemType = {\r\n    id: number,\r\n    fullName: string,\r\n    title: string,\r\n    avatar: string,\r\n    photo: string,\r\n    comments: Array<CommentsType>,\r\n    likesCount: number,\r\n    CommentsCount: number,\r\n    liked: boolean\r\n}","import dialogs_reducer from \"./dialogs_reducer\";\r\nimport profile_reducer from \"./profile_reducer\";\r\nimport navbar_reducer from \"./navbar_reducer\";\r\nimport {applyMiddleware, combineReducers, createStore, compose, Action} from 'redux'\r\nimport news_reducer from \"./news_reducer\";\r\nimport users_reducer from \"./users_reducer\";\r\nimport header_reducer from \"./header_reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport app_reducer from \"./app_reducer\";\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport music_reducer from \"./music_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogPage: dialogs_reducer,\r\n    profilePage: profile_reducer,\r\n    navbar: navbar_reducer,\r\n    newsPage: news_reducer,\r\n    usersPage: users_reducer,\r\n    auth: header_reducer,\r\n    app: app_reducer,\r\n    music: music_reducer,\r\n    form: formReducer\r\n})\r\n\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type InferActionsTypes<T extends {[key: string]: (...args: any[])=>any}> = ReturnType<PropertiesTypes<T>>\r\n\r\nexport type ThunkType<A extends Action> = ThunkAction<Promise<void>, AppStateType, unknown, A >\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nexport default store\r\n\r\n","import React, {useEffect, useState, ChangeEvent} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\nimport { updateStatus } from './../../../redux/profile_reducer';\r\n\r\nconst ProfileStatusWithHooks: React.FC = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const statusWord = useSelector((state: AppStateType) => state.profilePage.status)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(statusWord)\r\n\r\n    useEffect( () => {\r\n        setStatus(status)\r\n    }, [status] )\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!editMode)\r\n        if (editMode) dispatch(updateStatus(status))\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return <div>\r\n        { editMode\r\n            ? <input onChange={onStatusChange} autoFocus={true} onBlur={toggleEditMode} type=\"text\" value={status}/>\r\n            : <span onDoubleClick={toggleEditMode} style = {{cursor: \"pointer\"}}>{status || 'Напишите немного о себе'}</span>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, { useState } from 'react';\r\nimport { reduxForm, Field, InjectedFormProps } from 'redux-form';\r\nimport { Element } from '../../common/FormControl/FormControl';\r\nimport style from '../../common/FormControl/FormControl.module.css'\r\nimport  s from './ProfileInfo.module.css'\r\nimport { SaveProfileType } from '../../../Types/Types';\r\n\r\nconst Input = Element('input')\r\nconst Textarea1 = Element('textarea')\r\nconst Textarea2 = Element('textarea')\r\nconst Checkbox = Element('input')\r\n\r\ntype LoginFormValuesKeys = Extract<keyof ProfileFormValuesType, string>\r\n\r\nconst ProfileDataForm: React.FC<PropsType & InjectedFormProps<ProfileFormValuesType, PropsType>> = (props) => {\r\n    return <form onSubmit = {props.handleSubmit} style={{position:'relative'}}>\r\n        <button className={'btn ' + s.btn}>Save</button>\r\n        {props.error && <div className={style.commonError}>{props.error}</div>}\r\n        <span>{props.profile.fullName}</span>\r\n        <div>\r\n            <b>About me: </b>\r\n            <Field placeholder='about me..' name='aboutMe' component={Textarea1}/>\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            <span><Field placeholder='Looking for a job..' name='lookingForAJob' component={Checkbox} type='checkbox' /></span>\r\n        </div>\r\n        <div>\r\n            <b>My work skills: </b>\r\n            <Field placeholder='description..' name='lookingForAJobDescription' component={Textarea2}/>\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: { props.profile.contacts && Object.keys(props.profile.contacts).map(key => {\r\n                return <Field key={key} placeholder={key} name={'contacts.' + key} component = {Input}/>})}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport const ProfileDataFormRedux = reduxForm<ProfileFormValuesType, PropsType>({form: 'editProfileData'})(ProfileDataForm)\r\n\r\n\r\ntype PropsType = {\r\n    handleSubmit: () => {}\r\n    error: string\r\n    profile: SaveProfileType\r\n}\r\nexport type ProfileFormValuesType = {\r\n    aboutMe: string\r\n    lookingForAJobDescription: string\r\n    lookingForAJob: boolean\r\n}","\r\n\r\nexport const base64StringtoFile = (base64String: string, filename: string) => {\r\n    if(base64String && base64String.length && base64String.length > 0){\r\n        var arr = base64String.split(','),\r\n        //@ts-ignore\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr.length, \r\n        u8arr = new Uint8Array(n)\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n)\r\n      }\r\n      return new File([u8arr], filename, {type: mime})\r\n    }\r\n  }\r\n\r\n    \r\nexport const getCroppedImg = (image: HTMLImageElement, crop: ReactCrop.Crop, fileName: string) => {\r\n  const canvas = document.createElement('canvas');\r\n  const scaleX = image.naturalWidth / image.width;\r\n  const scaleY = image.naturalHeight / image.height;\r\n  canvas.width = crop.width;\r\n  canvas.height = crop.height;\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  ctx && ctx.drawImage(\r\n    image,\r\n    crop.x * scaleX,\r\n    crop.y * scaleY,\r\n    crop.width * scaleX,\r\n    crop.height * scaleY,\r\n    0,\r\n    0,\r\n    crop.width,\r\n    crop.height\r\n  )\r\n\r\n  return new Promise((resolve, reject) => {\r\n      canvas.toBlob(blob => {\r\n        if (!blob) {\r\n          console.error('Canvas is empty');\r\n          return;\r\n        }\r\n        //@ts-ignore\r\n        blob.name = fileName; \r\n        let reader = new FileReader()\r\n        reader.readAsDataURL(blob) \r\n        reader.onload = function() {\r\n        const myFilename = \"previewFile.jpg\"\r\n        //@ts-ignore\r\n        const croppedImageFile = base64StringtoFile(reader.result, myFilename)\r\n        const croppedImageUrl = window.URL.createObjectURL(blob)\r\n        let newCropObject = {\r\n          croppedImageFile,\r\n          croppedImageUrl\r\n        }\r\n        resolve(newCropObject);\r\n        };\r\n      }, 'image/jpeg');\r\n    });\r\n}\r\n\r\nexport const downloadCroppedImg = (url: string) => {\r\n  var a = document.createElement('a')\r\n  a.href = url\r\n  a.download = 'avatar.jpeg'\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n}","import React from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport  s from './ProfileInfo.module.css'\r\n\r\nconst DropzoneAva: React.FC<PropsType> = ({setIsLoadImg, setSrc}) => {\r\n\r\n    const handleDrop = (files: any, rejectedFiles: any) => {\r\n        if(files && files.length > 0){\r\n            setIsLoadImg(true)\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () =>\r\n                setSrc( reader.result )\r\n            );\r\n            reader.readAsDataURL(files[0]);\r\n        }\r\n    }\r\n\r\n    return <Dropzone onDrop={handleDrop} multiple = {false} accept = {\"image/*\"} maxSize={8000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n            <div {...getRootProps()} className = {s.dropzone}>\r\n                <p>Drop files here, or click to select files</p>\r\n                <input {...getInputProps()} />\r\n            </div>\r\n        )}\r\n  </Dropzone>\r\n\r\n}\r\n\r\nexport default DropzoneAva\r\n\r\n\r\ntype PropsType = {\r\n    setIsLoadImg: (b: boolean) => void\r\n    setSrc: (url: string | ArrayBuffer | null) => void\r\n}","import  s from './ProfileInfo.module.css'\r\nimport photoUser from '../../../img/user.svg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport  React, { useState } from 'react';\r\nimport { getCroppedImg } from '../../utils/Validators/cropImgFunctions';\r\nimport  ReactCrop  from 'react-image-crop';\r\nimport DropzoneAva from './DropzoneAva';\r\n\r\nconst AvatarPhoto: React.FC<PropsType> = ({avatar, fullName, isOwner, updatePhoto}) => {\r\n\r\n    const [isBigMode, setBigMode] = useState(false)\r\n\r\n    if(isBigMode) {\r\n        document.body.classList.add('pop_overflow')\r\n    } else {\r\n        document.body.classList.remove('pop_overflow')\r\n    }\r\n\r\n    return <div className={s.avaArea}>\r\n        <img src={ avatar || photoUser } alt=\"photo\" className={s.avaImg} onClick = {() => setBigMode(true)}/>\r\n        <span className = {s.avaHover}>\r\n            <FontAwesomeIcon icon={faSearch} onClick = {() => setBigMode(true)}/> \r\n        </span>\r\n        {\r\n            isBigMode \r\n                && <AvatarBigMode \r\n                    isBigMode = {isBigMode} \r\n                    setBigMode = {setBigMode} \r\n                    avatarPhoto = {avatar} \r\n                    fullName = {fullName} \r\n                    isOwner = {isOwner}\r\n                    updatePhoto = {updatePhoto}/>\r\n        }\r\n    </div>\r\n}\r\n\r\nconst AvatarBigMode: React.FC<BigModeType> = ({ isBigMode, setBigMode, avatarPhoto, fullName, isOwner, updatePhoto}) => {\r\n    \r\n    const [imageRef, setImageRef] = useState(null as null | HTMLImageElement)\r\n    const [isLoadImg, setIsLoadImg] = useState(false)\r\n    const [src, setSrc] = useState(null as string | ArrayBuffer | null)\r\n    const [croppedObject, setCroppedObject] = useState({\r\n            croppedImageFile: null as null | File,\r\n            croppedImageUrl: '',\r\n        } as CroppedImgType | null)\r\n    const [crop, setCrop] = useState({\r\n          unit: \"%\" as \"%\" | \"px\" | undefined,\r\n          width: 30,\r\n          height: 30,\r\n          x: 0,\r\n          y: 0,\r\n          aspect: 1 / 1 as number\r\n        })\r\n\r\n    const onImageLoaded = (image: HTMLImageElement) => {\r\n        setImageRef(image)\r\n      };\r\n    \r\n    const onCropComplete = (crop: ReactCrop.Crop) => {\r\n      makeClientCrop(crop);\r\n    };\r\n  \r\n    const onCropChange = (crop: ReactCrop.Crop) => {\r\n        //@ts-ignore\r\n        setCrop( crop );\r\n      };\r\n    \r\n    const makeClientCrop = async (crop: ReactCrop.Crop) => {\r\n        if (imageRef && crop.width && crop.height) {\r\n          const croppedObject = await getCroppedImg(\r\n            imageRef,\r\n            crop,\r\n            'newFile.jpeg'\r\n          )\r\n          \r\n          //@ts-ignore\r\n          setCroppedObject( croppedObject );\r\n        }\r\n      }\r\n\r\n    const updatePhotoCrop = () => {\r\n        croppedObject && croppedObject.croppedImageFile && updatePhoto(croppedObject.croppedImageFile)\r\n        setIsLoadImg(false)\r\n        refreshInputArea()\r\n    }\r\n\r\n    const refreshInputArea = () => {\r\n      setSrc(null)\r\n      setCroppedObject(null)\r\n      setIsLoadImg(true)\r\n    }\r\n\r\n    return <div>\r\n    <div id=\"overlay\" className = {isBigMode ? \"overlay\" : ''} onClick={() => setBigMode(false)}></div>\r\n    <div className = {isBigMode  ? s.BigModeArea : ''} id = {s.BigModeArea}>\r\n        <div>\r\n            <h3>Текущее фото: </h3>\r\n            <img src={avatarPhoto ? avatarPhoto : photoUser} alt=\"PHOTO\" />\r\n        </div>\r\n        <div className = {s.rightContent} >\r\n            <span style = {{display: \"flex\", alignItems: \"center\", height: \"60px\", borderBottom: \"1px solid #ccc\"}}>\r\n                <img src={avatarPhoto ? avatarPhoto : photoUser} alt=\"PHOTO\" className = {s.postImg} />\r\n                <span className={s.user}>{fullName}</span>\r\n            </span>\r\n            <span className = {s.closeBig} onClick={() => setBigMode(false)}></span>\r\n            {isOwner \r\n                && <div>\r\n                    <span>Изменить фото: </span>\r\n                    <DropzoneAva setIsLoadImg = {setIsLoadImg} setSrc = {setSrc} />\r\n                </div> \r\n            }\r\n            { \r\n                src && isLoadImg && <div>\r\n                    <ReactCrop\r\n                    //@ts-ignore\r\n                        src={src}\r\n                        crop={crop}\r\n                        ruleOfThirds\r\n                        onImageLoaded={onImageLoaded}\r\n                        onComplete={onCropComplete}\r\n                        onChange={onCropChange}\r\n                />\r\n                {   croppedObject && croppedObject.croppedImageUrl && \r\n                    //@ts-ignore\r\n                    <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedObject.croppedImageUrl} />\r\n                }\r\n                <button onClick = {() => updatePhotoCrop()}> Send </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n    </div>\r\n}\r\n\r\nexport default AvatarPhoto\r\n\r\ntype PropsType = {\r\n    avatar: string | null\r\n    fullName: string\r\n    isOwner: boolean\r\n\r\n    updatePhoto: (file: File) => void\r\n}\r\n\r\ntype BigModeType = {\r\n    isBigMode: boolean\r\n    avatarPhoto: string | null | undefined\r\n    fullName: string\r\n    isOwner: boolean\r\n\r\n    setBigMode: (n: boolean) => void\r\n    updatePhoto: (file: File) => void\r\n}\r\n\r\ntype CroppedImgType = {\r\n    croppedImageFile: null | File\r\n    croppedImageUrl: string\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAddressBook } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons'\r\nimport { faBriefcase } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { ProfileType } from '../../../Types/Types'\r\nimport  s from './ProfileInfo.module.css'\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, ...props}) => {\r\n\r\n    return <div style={{position: 'relative'}} className={s.profileData}>\r\n        {props.isOwner && <button onClick = {props.onEditMode} className = {s.editBtn + ' ' + s.btn}/>}\r\n        <div style={{display:'flex'}}>\r\n            <span className={s.infoKey}> \r\n                <FontAwesomeIcon icon={faStickyNote} /> \r\n                About me: \r\n            </span>\r\n            <span className={s.infoValue}>{profile.aboutMe}</span></div>\r\n        <div style={{display:'flex'}}> \r\n            <span className={s.infoKey}> \r\n                <FontAwesomeIcon icon={faCheck} /> \r\n                Looking for a job: \r\n            </span>\r\n            <span className={s.infoValue}>{profile.lookingForAJob ? 'yes' : 'no'}</span>\r\n        </div>\r\n        {profile.lookingForAJob \r\n            && <div style={{display:'flex'}}>\r\n                <span className={s.infoKey}>\r\n                    <FontAwesomeIcon icon={faBriefcase} /> \r\n                    My work skills:\r\n                </span>\r\n                <span className={s.infoValue}>\r\n                {profile.lookingForAJob && profile.lookingForAJobDescription}</span>\r\n            </div>}\r\n        <div>\r\n            <span className={s.infoKey}> <FontAwesomeIcon icon={faAddressBook} /> Contacts </span>: \r\n            {\r\n            profile.contacts && Object\r\n                .keys(profile.contacts)\r\n                .map(key => {\r\n                    //@ts-ignore\r\n                    return profile.contacts[key as keyof ContactsType] \r\n                        && <Contact key={key} \r\n                                    className={s.infoValue} \r\n                                    contactTitle={key} \r\n                                    //@ts-ignore\r\n                                    contactValue={profile.contacts[key as keyof ContactsType]} />\r\n            })\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact: React.FC<ContactType> = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><span className={s.infoKey}>{contactTitle}:</span> <a href={contactValue}>{contactValue}</a></div>\r\n}\r\n\r\nexport default ProfileData\r\n\r\n\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n\r\n    onEditMode: () => void\r\n}\r\n\r\ntype ContactType = { \r\n    contactTitle: string\r\n    contactValue: string\r\n    className: string\r\n}","import React, { useState } from 'react';\r\nimport  s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {ProfileDataFormRedux} from \"./ProfileDataForm\"\r\nimport {SaveProfileType} from '../../../Types/Types';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport AvatarPhoto from './AvatarPhoto';\r\nimport ProfileData from './ProfileData';\r\nimport photoUser from '../../../img/user.svg'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\nimport { saveProfile, updatePhoto } from './../../../redux/profile_reducer';\r\nimport { follow, unfollow } from '../../../redux/users_reducer';\r\n\r\nconst ProfileInfo:React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [editMode, setEditMode] = useState(false)\r\n    const isFetching = useSelector((state: AppStateType) => state.profilePage.isFetching)\r\n    const profile = useSelector((state: AppStateType) => state.profilePage.profile)\r\n    const friends = useSelector((state: AppStateType) => state.usersPage.friends)\r\n    const toggleProgressArr = useSelector((state: AppStateType) => state.usersPage.toggleProgressArr)\r\n\r\n    const onSubmit = (data: SaveProfileType) => {\r\n        dispatch(saveProfile(data))\r\n        setEditMode(false)\r\n    }\r\n        if (!profile || isFetching){\r\n            return <Preloader />\r\n        }\r\n\r\n    const switch_follow = (followed: boolean, userId: number) => {\r\n        if (followed) {\r\n            dispatch(unfollow(userId))\r\n        } else {\r\n            dispatch(follow(userId))\r\n        }\r\n    }\r\n\r\n        return (<div>\r\n            <div className={s.descriptionBlock}>\r\n                <div style={{display:'flex'}}>\r\n                    {\r\n                        props.isOwner \r\n                            ? <AvatarPhoto \r\n                                avatar = {profile.photos.large} \r\n                                fullName = {profile.fullName} \r\n                                isOwner = {props.isOwner}\r\n                                updatePhoto = {updatePhoto}/>\r\n                                //@ts-ignore\r\n                            : <img src = {profile.photos.large ? profile.photos.large : photoUser} className = {s.avaImg} alt=\"PHOTO\"/>\r\n                    }\r\n                    <div style={{marginLeft:\"20px\"}}>\r\n                        <p><b>{profile.fullName || 'unknown user '}</b></p>\r\n                        <ProfileStatusWithHooks />\r\n                    </div>\r\n                </div>\r\n                {\r\n                editMode \r\n                //@ts-ignore\r\n                    ? <ProfileDataFormRedux initialValues = {profile} profile = {profile} onSubmit = {onSubmit}/>\r\n                    : <ProfileData profile = {profile} onEditMode = {() => setEditMode(true)} isOwner={props.isOwner}/>\r\n                }\r\n                {\r\n                    !props.isOwner\r\n                        && friends.some(item => { return profile && item.id === profile.userId})\r\n                        ? <button className={s.btnFollow + ' ' + (s.btnRed)} onClick={() => switch_follow(true, profile && profile.userId)}\r\n                                    disabled={toggleProgressArr.some(id => profile && id === profile.userId)} key = {profile.userId}> Unfollow\r\n                                </button>\r\n                        : !props.isOwner && <button className={s.btnFollow + ' ' + (s.btnBlue)} onClick={() => switch_follow(false, profile && profile.userId)}\r\n                                    disabled={toggleProgressArr.some(id => profile && id === profile.userId)} key = {profile.userId}> Follow\r\n                                </button>\r\n                }\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n}","import React, { useReducer } from 'react'\r\nimport sNews from '../../../News/newsItem/NewsItem.module.css'\r\nimport commentUserPhoto from '../../../../img/user22.jpg'\r\nimport {PostItemType} from \"../../../../redux/profile_reducer\";\r\nimport { AppStateType } from '../../../../redux/store-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\ntype PropsType = {\r\n    post: PostItemType\r\n    avatarPhoto: string | null | undefined\r\n}\r\nconst CommentsArea: React.FC<PropsType> = (props) => {\r\n\r\n    return <div className={sNews.commentsArea}>\r\n    { props.post.comments.map(item => (\r\n        <div className={sNews.commentsItem} key={item.userId}>\r\n            {\r\n            item.photo \r\n                ? <img src={item.photo} alt=\"Photo\" className={sNews.commentPhoto}/>\r\n                : <img src={ props.avatarPhoto ?  props.avatarPhoto : commentUserPhoto} alt=\"Photo\" className={sNews.commentPhoto}/>\r\n            }\r\n            <div>\r\n                <span>{item.fullName}</span>\r\n                <p style={{paddingLeft: '15px', margin: 0}}>{item.text}</p>\r\n            </div>\r\n        </div>\r\n    ))}\r\n</div>\r\n}\r\n\r\nexport default CommentsArea","import React from 'react'\r\nimport sNews from '../../../News/newsItem/NewsItem.module.css'\r\nimport commentPhoto from '../../../../img/comment2.svg'\r\nimport likesPhoto from '../../../../img/heart.svg'\r\nimport likesPhotoActive from '../../../../img/heart_active.svg'\r\nimport {PostItemType} from \"../../../../redux/profile_reducer\";\r\n\r\ntype PropsType = {\r\n    onAddLike: (id: number) => void\r\n    id: number\r\n    post: PostItemType\r\n}\r\nconst ReviewArea: React.FC<PropsType> = ({onAddLike, id, ...props}) => {\r\n\r\n    return <div className={sNews.reviewCount}> \r\n    <span>\r\n        {\r\n        props.post.liked \r\n        ? <img src={likesPhotoActive} alt=\"PHOTO\" className={sNews.reviewIcon} onClick={() => onAddLike(id)}/>\r\n        : <img src={likesPhoto} alt=\"PHOTO\" className={sNews.reviewIcon} onClick={() => onAddLike(id)}/>\r\n    } {props.post.likesCount !== 0 && props.post.likesCount} \r\n    </span>\r\n     <span> \r\n        <img src={commentPhoto} alt=\"PHOTO\" className={sNews.reviewIcon}/>{props.post.CommentsCount !== 0 && props.post.CommentsCount} \r\n     </span> \r\n</div>\r\n}\r\n\r\nexport default ReviewArea","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport sNews from '../../../News/newsItem/NewsItem.module.css'\r\nimport userPhoto from '../../../../img/user.svg'\r\nimport {Element} from '../../../common/FormControl/FormControl';\r\nimport { reduxForm, Field, InjectedFormProps } from 'redux-form';\r\nimport CommentsArea from './CommentsArea';\r\nimport ReviewArea from './ReviewArea';\r\nimport {ProfileInitialStateType, PostItemType} from '../../../../redux/profile_reducer';\r\nimport { ProfileType } from '../../../../Types/Types';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../../redux/store-redux';\r\n\r\nlet id = 5;\r\n\r\ntype PropsType = {\r\n    state: ProfileInitialStateType\r\n    profile: ProfileType | null\r\n    post: PostItemType\r\n    avatarPhoto: string | null | undefined\r\n\r\n    reset: (form: string) => void\r\n    addComment: (id: number, text: string) => void\r\n    updateCommentCount: (id: number) => void\r\n    updateLikeCount: (id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n\r\n  let onAddComment = (data: any) => {\r\n      props.addComment(props.post.id, data['comment' + props.post.id]);\r\n      props.updateCommentCount(props.post.id)\r\n      props.reset('commentFormMyPost')\r\n  }\r\n\r\n  let onAddLike = (id: number) => {\r\n      props.updateLikeCount(id)\r\n  }\r\n\r\n  return (\r\n      <div className={sNews.newsItem}>\r\n          <span style = {{display: \"flex\", alignItems: \"center\"}}>\r\n              <span>\r\n                  {\r\n                  props.state.photos && props.state.photos.large\r\n                      ? <img src={props.state.photos.large} alt=\"PHOTO1\" className={sNews.userImg}/>\r\n                      : <img src={userPhoto} alt=\"PHOTO2\" className={sNews.userImg}/>\r\n                  }\r\n              </span>\r\n              <span className={sNews.user}>{props.profile && props.profile.fullName || ' '}</span>\r\n          </span>\r\n          <span className={sNews.newsTitle}> {props.post.title} </span>\r\n          <div>\r\n            { props.post.photo && <img src={props.post.photo} alt=\"Photo\"/> }\r\n          </div>\r\n          <ReviewArea onAddLike = {onAddLike} id={props.post.id} post={props.post}/>\r\n          <CommentFormRedux onSubmit={onAddComment} id={props.post.id}/>\r\n          <CommentsArea post = {props.post} avatarPhoto = {props.avatarPhoto}/>\r\n      </div>\r\n  );\r\n}\r\n\r\ntype PostFormPropsType = {\r\n    id: number\r\n}\r\n\r\ntype PostFormValuesType = {\r\n    id: number\r\n}\r\n\r\nconst Input = Element('input');\r\n    \r\nconst CommentForm: React.FC<InjectedFormProps<PostFormValuesType, PostFormPropsType> & PostFormPropsType> = (props) => {\r\n    return <form className={sNews.inputComment} onSubmit={props.handleSubmit}>\r\n        <Field placeholder='Write your comment' name = {'comment' + props.id} component = {Input}/>\r\n        <button type = 'submit' className='btn'>Send</button>\r\n    </form>\r\n}\r\n\r\nconst CommentFormRedux = reduxForm<PostFormValuesType, PostFormPropsType>({form: 'commentFormMyPost'})(CommentForm)\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {maxLengthCreater, required} from \"../../utils/Validators/validators\";\r\nimport {Element} from \"../../common/FormControl/FormControl\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport { ProfileInitialStateType } from '../../../redux/profile_reducer';\r\n\r\nconst MyPosts: React.FC<PropsType> = (props) => {\r\n\r\n    let onAddPost = (message: {newMyPostText: string}) => {\r\n        props.addPost(message.newMyPostText);\r\n        props.reset('myPostForm');\r\n    }\r\n\r\n    if (!props.state.profile){\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.addPostArea}>\r\n                <h3>My posts</h3>\r\n                <MyPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {[...props.state.postsData].reverse().map(post =>\r\n                    <Post \r\n                        post = {post} \r\n                        key={post.id}\r\n                        profile = {props.state.profile}\r\n                        addComment={props.addNewComment} \r\n                        updateLikeCount={props.updateLikeCount}\r\n                        updateCommentCount={props.updateCommentCount}\r\n                        avatarPhoto={props.avatarPhoto}\r\n                        reset={props.reset}\r\n                        state={props.state}/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength255 = maxLengthCreater(255);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nclass myPostForm extends React.Component<InjectedFormProps<MyPostFormValuesType> >{\r\n    render() {\r\n        return (\r\n            <form className={s.sendText} onSubmit={this.props.handleSubmit}>\r\n                <Field placeholder='Enter message...' name='newMyPostText' validate={[required, maxLength255]}\r\n                       component={Textarea}/>\r\n                <button className=\"btn\">Add post</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst MyPostFormRedux = reduxForm<MyPostFormValuesType>({form: 'myPostForm'})(myPostForm)\r\n\r\nexport default MyPosts;\r\n\r\n\r\ntype PropsType = {\r\n    state: ProfileInitialStateType\r\n    avatarPhoto: string | null | undefined\r\n\r\n    addPost: (text: string) => void\r\n    reset: (form: string) => void\r\n    addNewComment: (id: number, text: string) => void\r\n    updateCommentCount: (id: number) => void\r\n    updateLikeCount: (id: number) => void\r\n}\r\n\r\n\r\ntype MyPostFormValuesType = {\r\n    newMyPostText: string\r\n}","import React from 'react';\r\nimport {actions} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from 'redux-form';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n\r\n    return {\r\n        state: state.profilePage,\r\n        avatarPhoto: state.profilePage.profile && state.profilePage.profile.photos.large\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { \r\n    addPost: actions.addPost, \r\n    reset, \r\n    addNewComment: actions.addNewComment, \r\n    updateCommentCount: actions.updateCommentCount, \r\n    updateLikeCount: actions.updateLikeCount})(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfilInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n  return (\r\n    <div className={s.content}>\r\n        <ProfileInfo isOwner={props.isOwner} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\ntype PropsType = {\r\n  isOwner: boolean\r\n}","import React, { useEffect } from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport {check_auth, getStatus} from \"../../redux/profile_reducer\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\"\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\nconst ProfileContainer:React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const authId = useSelector((state: AppStateType) => state.auth.id)\r\n\r\n    const refreshProfile = () => {\r\n        //@ts-ignore\r\n        let userId = params.userId;\r\n        if (!userId) userId = authId as number\r\n        dispatch(check_auth(userId))\r\n        dispatch(getStatus(userId))\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshProfile();\r\n        // @ts-ignore\r\n    }, [params.userId])\r\n\r\n        return (\r\n            // @ts-ignore\r\n            <Profile isOwner={!params.userId} />\r\n        )\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store-redux\";\r\nimport {actions} from \"../../redux/music_reducer\";\r\nimport { faListUl, faMusic } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Music.css'\r\n\r\nconst Playlist = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const songs = useSelector((state: AppStateType) => state.music.songs)\r\n    const currentSong = useSelector((state: AppStateType) => state.music.currentSong)\r\n\r\n    const SetCurrent = (id: number) => {\r\n        dispatch(actions.SetCurrent(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"playlist\">\r\n            <div className=\"header\">\r\n            <FontAwesomeIcon icon={faListUl} />\r\n                <span className=\"pltext\">Play List</span>\r\n            </div>\r\n            <div className=\"songlist\">\r\n                <ul className=\"loi\">\r\n                    {\r\n                        songs.map((song, i) =>\r\n                            <li className={'songContainer ' + (currentSong === i ? 'selected' : '')} key={i}\r\n                                onClick={() => {\r\n                                    SetCurrent(i);\r\n                                }}>\r\n                                <div className = 'musicIcon'>\r\n                                    <FontAwesomeIcon icon = {faMusic} />\r\n                                </div>\r\n                                <span className=\"song\">{song[0]}</span>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Playlist","import React, {ChangeEvent, useEffect, useRef, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store-redux\";\r\nimport {actions} from \"../../redux/music_reducer\";\r\nimport { faPause, faPlay, faRandom, faRedoAlt, faStepBackward, faStepForward, faVolumeDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Music.css'\r\n\r\nconst Controls = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const playing = useSelector((state: AppStateType) => state.music.playing)\r\n    const currentSong = useSelector((state: AppStateType) => state.music.currentSong)\r\n    const random = useSelector((state: AppStateType) => state.music.random)\r\n    const songs = useSelector((state: AppStateType) => state.music.songs)\r\n    const repeat = useSelector((state: AppStateType) => state.music.repeat)\r\n    const currentTimeState = useSelector((state: AppStateType) => state.music.currentTime)\r\n\r\n    const audio = useRef('audio_tag');\r\n\r\n    const [statevolum, setStateVolum] = useState(0.3)\r\n    const [dur, setDur] = useState(0)\r\n    const [currentTime, setCurrentTime] = useState(currentTimeState)\r\n\r\n    const fmtMSS = (s: number) => { return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + ~~(s) }\r\n\r\n    //@ts-ignore\r\n    const toggleAudio = () => audio.current.paused ? audio.current.play() : audio.current.pause();\r\n\r\n    const handleVolume = (q: number ) => {\r\n        setStateVolum(q);\r\n        //@ts-ignore\r\n        audio.current.volume = q;\r\n    }\r\n\r\n    const handleProgress = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //@ts-ignore\r\n        let compute = (e.target.value * dur) / 100;\r\n        setCurrentTime(compute);\r\n        //@ts-ignore\r\n        audio.current.currentTime = compute\r\n    }\r\n    // Prev song\r\n    const prevSong = () => {\r\n        if (currentSong === 0) {\r\n            SetCurrent(songs.length - 1)\r\n        } else {\r\n            SetCurrent(currentSong - 1)\r\n        }\r\n    }\r\n    // Next song\r\n    const nextSong = () => {\r\n        if (currentSong === songs.length - 1) {\r\n            SetCurrent(0)\r\n        } else {\r\n            SetCurrent(currentSong + 1)\r\n        }\r\n    }\r\n    const handleEnd = () => {\r\n        // Check for random and repeat options\r\n        if (random) {\r\n            return dispatch({ type: 'SET_CURRENT_SONG', data: ~~(Math.random() * songs.length) })\r\n        } else {\r\n            if (repeat) {\r\n                nextSong()\r\n            } else if ((currentSong === songs.length - 1)) {\r\n                return\r\n            } else {\r\n                nextSong();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUpdateTime = (e: any) => {\r\n        setCurrentTime(e.target.currentTime)\r\n        dispatch(actions.updateCurrentTime(currentTime))\r\n    }\r\n\r\n    const SetCurrent = (id: number) => {\r\n        dispatch(actions.SetCurrent(id))\r\n    }\r\n\r\n    const togglePlaying = () => {\r\n        dispatch(actions.togglePlaying())\r\n    }\r\n\r\n    const toggleRandom = () => {\r\n        dispatch(actions.toggleRandom())\r\n    }\r\n\r\n    const toggleRepeat = () => {\r\n        dispatch(actions.toggleRepeat())\r\n    }\r\n\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        audio.current.volume = statevolum;\r\n        if (playing) { toggleAudio() }\r\n        //@ts-ignore\r\n        audio.current.currentTime = currentTime\r\n    }, [currentSong])\r\n\r\n    useEffect(() => {\r\n        setCurrentTime(currentTimeState)\r\n        //@ts-ignore\r\n        audio.current.currentTime = currentTime\r\n    }, [currentTimeState])\r\n\r\n    return (\r\n        <div className=\"controls\">\r\n            <audio\r\n                //@ts-ignore\r\n                onTimeUpdate={(e) => handleUpdateTime(e)}\r\n                //@ts-ignore\r\n                onCanPlay={(e) => setDur(e.target.duration)}\r\n                onEnded={handleEnd}\r\n                //@ts-ignore\r\n                ref={audio}\r\n                type=\"audio/mpeg\"\r\n                preload='true'\r\n                src={songs[currentSong][1]} \r\n                id=\"audioMusic\"/>\r\n            <div className=\"vlme\">\r\n                <span className=\"volum\"><FontAwesomeIcon icon={faVolumeDown} /></span>\r\n                <input value={Math.round(statevolum * 100)} type=\"range\" name=\"volBar\" id=\"volBar\" onChange={\r\n                    (e) => {\r\n                        //@ts-ignore\r\n                        return handleVolume(e.target.value / 100)\r\n                        }} />\r\n\r\n            </div>\r\n            <div className=\"musicControls\">\r\n                <span className=\"prev\" onClick={prevSong}><FontAwesomeIcon icon={faStepBackward} /></span>\r\n                <span className=\"play\" onClick={() => { togglePlaying(); toggleAudio(); }}>\r\n                    <span className={!playing ? '' : 'hide'}><FontAwesomeIcon icon={faPlay} /></span>\r\n                    <span className={!playing ? 'hide' : ''}><FontAwesomeIcon icon={faPause} /></span>\r\n                </span>\r\n\r\n                <span className=\"next\" onClick={nextSong}><FontAwesomeIcon icon={faStepForward} /></span>\r\n            </div>\r\n            <div className=\"progressb\">\r\n                <span className=\"currentT\">{fmtMSS(currentTime)}</span>\r\n                <input\r\n                    onChange={handleProgress}\r\n                    value={dur ? (currentTime * 100) / dur : 0}\r\n                    type=\"range\" name=\"progresBar\" id=\"prgbar\" />\r\n                <span className=\"totalT\">{fmtMSS(dur)}</span>\r\n\r\n            </div>\r\n            <div className=\"plsoptions\">\r\n\r\n        <span onClick={toggleRandom} className={\"random \" + (random ? 'active' : '')}>\r\n        <FontAwesomeIcon icon={faRandom} />\r\n        </span>\r\n                <span onClick={toggleRepeat} className={\"repeat \" + (repeat ? 'active' : '')}>\r\n                <FontAwesomeIcon icon={faRedoAlt} />\r\n        </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls;","import React from 'react';\r\nimport Playlist from \"./Playlist\";\r\nimport Controls from \"./Controls\";\r\nimport './Music.css'\r\n\r\nconst Music = () => {\r\n    return (<>\r\n        <Controls />\r\n        <div className = \"pageArea\" style = {{marginTop: \"5px\"}}>\r\n        <div className=\"main\">\r\n            <div className=\"top\">\r\n                <Playlist />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>);\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (<div>\r\n        Settings\r\n    </div>);\r\n}\r\n\r\nexport default Settings;","import React, { useState } from 'react';\r\nimport s from './NewsItem.module.css'\r\nimport commentPhoto from '../../../img/comment2.svg'\r\nimport likesPhoto from '../../../img/heart.svg'\r\nimport commentUserPhoto from '../../../img/user22.jpg'\r\nimport likesPhotoActive from '../../../img/heart_active.svg'\r\nimport userPhoto from '../../../img/user(1).svg'\r\nimport {Element} from '../../common/FormControl/FormControl';\r\nimport { reduxForm, Field, InjectedFormProps, reset } from 'redux-form';\r\nimport {NewsItemType} from '../../../redux/news_reducer'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\nimport { actions } from '../../../redux/news_reducer';\r\n\r\nconst NewsItem: React.FC<PropsType> = ({post}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const avatarPhoto = useSelector((state: AppStateType) => state.profilePage.photos && state.profilePage.photos.large)\r\n    const [isBigMode, setBigMode] = useState(false)\r\n\r\n    let onAddComment = (data: any) => {\r\n        if(data['comment' + post.id]){\r\n            dispatch(actions.addNewComment(post.id, data['comment' + post.id]))\r\n            dispatch(actions.updateCommentCount(post.id))\r\n            dispatch(reset('commentForm'))\r\n        }\r\n    }\r\n\r\n    let onAddLike = (id: number) => {\r\n        dispatch(actions.updateLikeCount(id))\r\n    }\r\n\r\n    if(isBigMode) {\r\n        document.body.classList.add('pop_overflow')\r\n    } else {\r\n        document.body.classList.remove('pop_overflow')\r\n    }\r\n\r\n    return (\r\n        <div className={s.newsItem}>\r\n            <div className = {s.newsItemContent} onClick = {() => setBigMode(true)}>\r\n                <span style = {{display: \"flex\", alignItems: \"center\"}}>\r\n                    <span>\r\n                        {\r\n                        post.avatar \r\n                            ? <img src={post.avatar} alt=\"PHOTO\" className={s.userImg}/>\r\n                            : <img src={userPhoto} alt=\"PHOTO\" className={s.userImg}/>\r\n                        }\r\n                    </span>\r\n                    <span className={s.user}>{post.fullName}</span>\r\n                </span>\r\n                <span className={s.newsTitle}> {post.title} </span>\r\n                <div>\r\n                    <img src={post.photo} alt=\"Photo\"/>\r\n                </div>\r\n            </div>\r\n            <div className={s.reviewCount}> \r\n                <span>\r\n                {\r\n                    post.liked \r\n                    ? <img src={likesPhotoActive} alt=\"PHOTO\" className={s.reviewIcon} onClick={() => onAddLike(post.id)}/>\r\n                    : <img src={likesPhoto} alt=\"PHOTO\" className={s.reviewIcon} onClick={() => onAddLike(post.id)}/>\r\n                } {post.likesCount} \r\n                </span>\r\n                 <span> \r\n                    <img src={commentPhoto} alt=\"PHOTO\" className={s.reviewIcon}/>{post.CommentsCount} \r\n                 </span> \r\n            </div>\r\n            <CommentFormRedux onSubmit={onAddComment} id = {post.id}/>\r\n            <NewsCommentsArea post = {post} avatarPhoto = {avatarPhoto}/>\r\n            {\r\n                isBigMode && <NewsItemBigMode post = {post} avatarPhoto = {avatarPhoto} onAddLike = {onAddLike} isBigMode = {isBigMode} setBigMode = {setBigMode} onAddComment = {onAddComment} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst NewsItemBigMode: React.FC<BigModeType> = ({post, onAddLike, isBigMode, setBigMode, onAddComment, avatarPhoto}) => {\r\n\r\n    return <>\r\n    <div id=\"overlay\" className = {isBigMode ? \"overlay\" : ''} onClick={() => setBigMode(false)}></div>\r\n    <div className = {isBigMode  ? s.BigModeArea : ''} id = {s.BigModeArea}>\r\n        <div style = {{ display: \"flex\", alignItems: \"center\"}} >\r\n            <img src={post.photo} alt=\"PHOTO\" className = {s.postImg}/>\r\n        </div>\r\n        <div className = {s.rightContent} >\r\n            <span style = {{display: \"flex\", alignItems: \"center\", height: \"60px\", borderBottom: \"1px solid #ccc\"}}>\r\n                <span>\r\n                    {\r\n                    post.avatar \r\n                        ? <img src={post.avatar} alt=\"PHOTO\" className={s.userImg}/>\r\n                        : <img src={userPhoto} alt=\"PHOTO\" className={s.userImg}/>\r\n                    }\r\n                </span>\r\n                <span className={s.user}>{post.fullName}</span>\r\n            </span>\r\n            <div className={s.reviewCount} style = {{border: 0}}> \r\n                <span>\r\n                    {\r\n                    post.liked \r\n                        ? <img src={likesPhotoActive} alt=\"PHOTO\" className={s.reviewIcon} onClick={() => onAddLike(post.id)}/>\r\n                        : <img src={likesPhoto} alt=\"PHOTO\" className={s.reviewIcon} onClick={() => onAddLike(post.id)}/>\r\n                    } {post.likesCount} \r\n                </span>\r\n            </div>\r\n            <CommentFormRedux onSubmit={ onAddComment } id = {post.id}/>\r\n            <NewsCommentsArea post = {post} avatarPhoto = {avatarPhoto}/>\r\n        </div>\r\n    </div>\r\n    <span className = {s.closeBig} onClick={() => setBigMode(false)}></span>\r\n    </>\r\n}\r\n\r\nconst NewsCommentsArea: React.FC<NewsCommentsAreaType> = ({post, avatarPhoto}) => {\r\n\r\n    return <div className={s.commentsArea}>\r\n    { post.comments.map(item => (\r\n        <div className={s.commentsItem} key={item.userId}>\r\n            {\r\n            item.photo \r\n                ? <img src={item.photo } alt=\"Photo\" className={s.commentPhoto}/>\r\n                : <img src={ avatarPhoto ? avatarPhoto : commentUserPhoto } alt=\"Photo\" className={s.commentPhoto}/>\r\n            }\r\n          <div>\r\n                <span>{item.fullName}</span>\r\n                <p style={{paddingLeft: '15px', margin: 0}}>{item.text}</p>\r\n            </div>\r\n        </div>\r\n    ))}\r\n</div>\r\n}\r\n\r\nconst Input = Element('input');\r\n\r\nconst CommentForm: React.FC<InjectedFormProps<CommentFormValuesType, CommentFormPropsType> & CommentFormPropsType> = (props) => {\r\n    return <form className={s.inputComment} onSubmit={props.handleSubmit}>\r\n        <Field placeholder='Write your comment' name={'comment'  + props.id as CommentFormValuesKeys} component = {Input}/>\r\n        <button type = 'submit' className='btn'>Send</button>\r\n    </form>\r\n}\r\n\r\nconst CommentFormRedux = reduxForm<CommentFormValuesType, CommentFormPropsType>({form: 'commentForm'})(CommentForm)\r\n\r\nexport default NewsItem;\r\n\r\n\r\n\r\ntype CommentFormValuesType = {\r\n    comment: string\r\n}\r\n\r\ntype CommentFormPropsType = {\r\n    id: number\r\n}\r\n\r\ntype NewsCommentsAreaType = {\r\n    post: NewsItemType\r\n    avatarPhoto: string | null | undefined\r\n}\r\n\r\ntype BigModeType = {\r\n    post: NewsItemType\r\n    isBigMode: boolean\r\n    avatarPhoto: string | null | undefined\r\n\r\n    onAddComment: (data: {comment: string}) => void\r\n    setBigMode: (n: boolean) => void\r\n    onAddLike: (id: number) => void\r\n}\r\n\r\ntype PropsType = {\r\n    post: NewsItemType\r\n}\r\n\r\ntype CommentFormValuesKeys = Extract<keyof CommentFormValuesType, string>","import React, { useState } from 'react';\r\nimport {StoriesType} from '../../../redux/news_reducer'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\nimport defaultUserPhoto from '../../../img/user(1).svg'\r\nimport nextPhoto from '../../../img/next.svg'\r\nimport backPhoto from '../../../img/back.svg'\r\nimport { actions } from './../../../redux/news_reducer';\r\nimport style from './Stories.module.css'\r\n\r\nconst StoriesItem: React.FC<PropsType> = React.memo(({story, index, arr}) => {\r\n\r\n    const userPhoto = useSelector((state: AppStateType) => state.profilePage.photos && state.profilePage.photos.large)\r\n    const dispatch = useDispatch()\r\n    const [isBigMode, setBigMode] = useState(false)\r\n    const [isStoryViewed, setStoryViewed] = useState(story.viewed)\r\n    const [storyPhoto, setStoryPhoto] = useState(story.photo)\r\n    const [storyIndex, setStoryIndex] = useState(index)\r\n\r\n    const imgStyles = {width: \"110px\", height: \"185px\", borderRadius: \"5px\", cursor: \"pointer\"}\r\n    const imgStyle = {width: \"43px\", borderRadius: \"50%\", border: story.viewed ? \"4px solid #ccc\" : \"4px solid #4a76a8\", cursor: \"pointer\"}\r\n\r\n    const onStoryClick = () => {\r\n        document.body.classList.add('pop_overflow')\r\n        setBigMode(true)\r\n        setStoryViewed(true)\r\n        dispatch(actions.viewStory(story.id))\r\n    }\r\n\r\n    let storyTime = setInterval(() => {}, 7000);\r\n\r\n    const changeStoryPhoto = (direction: boolean) => {\r\n        clearInterval(storyTime)\r\n        if(direction && storyIndex < arr.length - 1){\r\n            setStoryPhoto(arr[storyIndex + 1].photo)\r\n            dispatch(actions.viewStory(arr[storyIndex + 1].id))\r\n            setStoryIndex(storyIndex + 1)\r\n        } else if(!direction && storyIndex - 1 >= 0) {\r\n            setStoryPhoto(arr[storyIndex - 1].photo)\r\n            dispatch(actions.viewStory(arr[storyIndex - 1].id))\r\n            setStoryIndex(storyIndex - 1)\r\n        } else {\r\n            setBigMode(false)\r\n            setStoryIndex(0)\r\n        }\r\n    }\r\n\r\n    if(isBigMode) {\r\n        document.body.classList.add(\"pop_overflow\")\r\n        storyTime = setInterval(() => {\r\n            if(arr.length === 1 || storyIndex + 1 === arr.length) {\r\n                setBigMode(false)\r\n            } else {\r\n                changeStoryPhoto(true)\r\n            }\r\n        }, 7000)\r\n    } else {\r\n        document.body.classList.remove(\"pop_overflow\")\r\n        storyPhoto !== story.photo && setStoryPhoto(story.photo)\r\n        clearInterval(storyTime)\r\n    } \r\n\r\n    return <div style={{marginLeft: \"15px\", position: \"relative\"}}>\r\n        <img src={story.photo} alt=\"Photo\" style={imgStyles} onClick={onStoryClick} />\r\n        <div style={{position: \"absolute\", top: \"110px\", left: \"30px\"}}>\r\n            <img onClick={onStoryClick} src={userPhoto ? userPhoto : defaultUserPhoto} style = {imgStyle} alt=\"Photo\"/>\r\n        </div>\r\n        {\r\n            isBigMode && <StoryBigMode isBigMode = {isBigMode} \r\n                                        setBigMode = {setBigMode} \r\n                                        storyPhoto = {storyPhoto} \r\n                                        changeStoryPhoto = {changeStoryPhoto}\r\n                                        storyId = {storyIndex} \r\n                                        key={storyIndex} />\r\n        }\r\n    </div>\r\n})\r\n\r\nconst StoryBigMode: React.FC<BigModeType> = React.memo(({isBigMode, setBigMode, storyPhoto, changeStoryPhoto, storyId}) => {\r\n\r\n    return <div>\r\n    <div id=\"overlay\" className = {isBigMode  ? \"overlay\" : ''} onClick={() => setBigMode(false)}></div>\r\n    <div id=\"magnify\" className={isBigMode ? \"magnify\" : ''}>\r\n        <img src={ storyPhoto } alt=\"Photo\" className={style.centerStory} />\r\n        <img src={backPhoto} onClick={() => changeStoryPhoto(false)} alt=\"Back\" style={{width: \"35px\", position: \"fixed\", top: \"50px\", left: \"570px\", zIndex: 10000, cursor: \"pointer\"}} />\r\n        <img src={nextPhoto} onClick={() => changeStoryPhoto(true)} alt=\"Next\" style={{width: \"35px\", position: \"fixed\", top: \"50px\", right: \"560px\", zIndex: 10000, cursor: \"pointer\"}} />\r\n        <span className=\"popupLayer\" id = {'' + storyId}/>\r\n        <div id=\"close-popup\" onClick={() => {setBigMode(false); document.body.classList.remove('pop_overflow')}}><i></i></div>\r\n    </div>\r\n</div>\r\n})\r\n\r\nexport default StoriesItem\r\n\r\n\r\ntype PropsType = {\r\n    story: StoriesType\r\n    index: number\r\n    arr: Array<StoriesType>\r\n    key: number\r\n}\r\n\r\ntype BigModeType = {\r\n    isBigMode: boolean\r\n    storyPhoto: string\r\n    storyId: number\r\n    setBigMode: (isMode: boolean) => void\r\n    changeStoryPhoto: (direction: boolean) => void\r\n}","import React from 'react';\r\nimport StoriesItem from './StoriesItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\n\r\nconst Stories = () => {\r\n    \r\n    const stories = useSelector((state: AppStateType) => state.newsPage.stories)\r\n\r\n    return <div className = \"pageArea\" style ={{display: \"flex\", padding: \"10px 15px\"}}>\r\n        {\r\n            stories.map((item, index, arr) => {\r\n                return <StoriesItem story = {item} index = {index} arr = {arr} key={item.id}/>\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Stories\r\n","import React from 'react';\r\nimport NewsItem from \"./newsItem/NewsItem\";\r\nimport s from './News.module.css'\r\nimport Stories from './Stories/Stories';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\nconst News: React.FC = () => {\r\n\r\n    const newsState = useSelector((state: AppStateType) => state.newsPage)\r\n    \r\n    return (\r\n        <div className={s.newsWrap}>\r\n            <Stories />\r\n            <div className={s.postArea}>\r\n                {newsState.news.map(post => (\r\n                    <NewsItem post={post}\r\n                             key={post.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport News from \"./News\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect\r\n)(News)\r\n\r\n","import React from 'react'\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {checkLoginMe} from \"../../redux/header_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {required} from \"../utils/Validators/validators\";\r\nimport {Element} from \"../common/FormControl/FormControl\";\r\nimport style from \"../common/FormControl/FormControl.module.css\"\r\nimport s from \"./Login.module.css\"\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    captcha: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    checkLoginMe: (email: string | null, password: string | null, rememberMe: boolean, captcha: string | null) => Promise<void>\r\n}\r\n\r\ntype LoginPropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nexport type LoginFormValuesType = {\r\n    captcha: string | null\r\n    rememberMe: boolean\r\n    password: string | null\r\n    email: string | null\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\r\n\r\n\r\n\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n\r\n    const onSubmit = (inputData: LoginFormValuesType) => {\r\n        props.checkLoginMe(inputData.email, inputData.password, inputData.rememberMe, inputData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className='pageArea'>\r\n            <h1>Login</h1>\r\n            <ReduxForm onSubmit={onSubmit} captcha = {props.captcha}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Input = Element(\"input\");\r\n\r\ntype LoginFormPropsType = {\r\n    captcha: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormPropsType> & LoginFormPropsType > = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.form}>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field name={'email'}  placeholder='Email..' component={Input} validate={[required]} id='email'/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"pass\">Password</label>\r\n                <Field name={'password'} placeholder='Password..' component={Input} id='pass' validate={[required]} type='password'/>\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                <label htmlFor=\"remember\">Remember me</label>\r\n                <Field name={'rememberMe'} type={'checkbox'} component={Input} id='remember'/>\r\n            </div>\r\n\r\n            {props.captcha && <img src={props.captcha} alt=\"Captcha\"/>}\r\n            {props.captcha && <Field name={'captcha'} component={Input} id='captcha'/>}\r\n\r\n            <div>\r\n                <button className='btn'>Login</button>\r\n            </div>\r\n            {props.error && <div className={style.commonError}>{props.error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxForm = reduxForm<LoginFormValuesType, LoginFormPropsType>({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha\r\n})\r\n\r\nexport default connect(mapStateToProps, {checkLoginMe})(Login)","import React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspens = (Component: React.ComponentType) => {\r\n\r\n    return (props: any) => {\r\n\r\n        return <React.Suspense fallback={<Preloader />}><Component {...props}/></React.Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport type MessageType = {\r\n    id: number,\r\n    message: string\r\n    userId: number\r\n    userName: string\r\n    photo: string\r\n}\r\n\r\nexport const Chat = () => {\r\n    const [socketChanel, setSocketChanel] = React.useState<WebSocket | null>(null)\r\n    React.useEffect(() => {\r\n        let ws: WebSocket | null = null;\r\n        const tryToConnect = () => {\r\n            setTimeout(() => {\r\n                createChanel()\r\n            }, 3000)\r\n        }\r\n\r\n        function createChanel() {\r\n            ws = new WebSocket(\"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\")\r\n            ws && ws.addEventListener(\"close\", tryToConnect)\r\n            setSocketChanel(ws)\r\n        }\r\n\r\n        createChanel()\r\n        return () => {\r\n            ws && ws.close()\r\n            socketChanel && setSocketChanel(null)\r\n            ws && ws.removeEventListener(\"close\", tryToConnect)\r\n        }\r\n    }, [])\r\n\r\n    if (!socketChanel) return <Preloader/>\r\n    return <>\r\n        <Messages socketChanel={socketChanel}/>\r\n        <AddMessageForm socketChanel={socketChanel}/>\r\n    </>\r\n}\r\n\r\nexport const Messages: React.FC<{ socketChanel: WebSocket | null }> = ({socketChanel}) => {\r\n    const messageWrapper = React.useRef(null)\r\n    const [messages, setMessages] = React.useState([] as MessageType[])\r\n\r\n    React.useEffect(() => {\r\n        let addMessageEventListener = (e: MessageEvent) => {\r\n            let messagesData = JSON.parse(e.data)\r\n            setMessages((prevState) => [...prevState, ...messagesData])\r\n        }\r\n        socketChanel && socketChanel.addEventListener(\"message\", addMessageEventListener)\r\n        return () => {\r\n            socketChanel && socketChanel.removeEventListener(\"message\", addMessageEventListener)\r\n        }\r\n    }, [])\r\n\r\n    if (!socketChanel) return <Preloader/>\r\n    return <div ref={messageWrapper} style={{maxHeight: \"500px\", overflowY: \"scroll\"}}>\r\n        {\r\n            messages ? messages.map((item, i) => {\r\n                    return <Message key={i} message={item}/>\r\n                })\r\n                : \"Сообщений не найдено\"\r\n        }\r\n    </div>\r\n};\r\n\r\ntype MessagePropsType = {\r\n    message: MessageType\r\n}\r\n\r\nexport const Message: React.FC<MessagePropsType> = ({message}) => {\r\n    return <>\r\n        <div style={{display: \"flex\"}}>\r\n            <img src={message.photo}\r\n                 alt=\"avaUser\"\r\n                 style={{marginLeft: \"10px\", borderRadius: \"50%\", width: \"50px\"}}/>\r\n            <span style={{marginLeft: \"10px\"}}>{message.userName}</span>\r\n            <span style={{marginLeft: \"10px\"}}>{message.message}</span>\r\n        </div>\r\n        <hr/>\r\n    </>\r\n};\r\n\r\nexport const AddMessageForm: React.FC<{ socketChanel: WebSocket | null }> = ({socketChanel}) => {\r\n    const [message, setMessage] = React.useState(\"\")\r\n    const [readyState, setReadyState] = React.useState<'pending' | 'ready'>('pending')\r\n\r\n    React.useEffect(() => {\r\n        let addOpenEventListener = () => {\r\n            setReadyState('ready')\r\n        }\r\n        socketChanel && socketChanel.addEventListener(\"open\", addOpenEventListener)\r\n        return () => {\r\n            socketChanel && socketChanel.removeEventListener(\"open\", addOpenEventListener)\r\n        }\r\n    }, [])\r\n    const sendMessage = () => {\r\n        if (!message) return;\r\n        socketChanel && socketChanel.send(message)\r\n        setMessage(\"\")\r\n    }\r\n    if (!socketChanel) return <Preloader/>\r\n    return <>\r\n            <textarea name=\"message\" value={message}\r\n                      onChange={(e) => setMessage(e.currentTarget.value)}\r\n                      id=\"addMessage\" cols={30} rows={10}/>\r\n        <button disabled={readyState !== 'ready'} onClick={() => sendMessage()}>Send</button>\r\n    </>\r\n};","import React from 'react';\r\nimport {Chat} from \"./Chat\";\r\n\r\nexport const ChatPage:React.FC = () => {\r\n    return <>\r\n            <Chat />\r\n        </>\r\n};\r\n","import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport NewsContainer from \"./components/News/NewsContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport React from \"react\";\r\nimport {withSuspens} from \"./components/HOC/withSuspens\";\r\nimport {ChatPage} from \"./components/Chat/ChatPage\";\r\n\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst WithSuspensDialogs = withSuspens(DialogsContainer)\r\nconst WithSuspensUsers = withSuspens(UsersContainer)\r\n\r\nexport const componentsData = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        Component: <NewsContainer/>\r\n    },\r\n    {\r\n        path: '/chat',\r\n        exact: true,\r\n        Component: <ChatPage/>\r\n    },\r\n    {\r\n        path: '/profile/:userId?',\r\n        exact: false,\r\n        Component: <ProfileContainer/>\r\n    },\r\n    {\r\n        path: '/dialogs/:userId?',\r\n        exact: false,\r\n        Component: <WithSuspensDialogs/>\r\n    },\r\n    {\r\n        path: '/music',\r\n        exact: false,\r\n        Component: <Music/>\r\n    },\r\n    {\r\n        path: '/news',\r\n        exact: false,\r\n        Component: <NewsContainer/>\r\n    },\r\n    {\r\n        path: '/users',\r\n        exact: true,\r\n        Component: <WithSuspensUsers/>\r\n    },\r\n    {\r\n        path: '/settings',\r\n        exact: true,\r\n        Component: <Settings/>\r\n    },\r\n    {\r\n        path: '/login',\r\n        exact: true,\r\n        Component: <Login/>\r\n    },\r\n    {\r\n        path: '*',\r\n        exact: false,\r\n        Component: <div>404 - Not found</div>\r\n    }\r\n]\r\n\r\n\r\n//     <Route path='/profile/:userId?' render={() => <ProfileContainer />}/>\r\n// <Route path='/dialogs/:userId?' render={() => <WithSusmensDialogs />}/>\r\n// <Route path='/music' render={() => <Music/>}/>\r\n// <Route path='/settings' render={() => <Settings/>}/>\r\n// <Route path='/news' render={() => <NewsContainer />}/>\r\n// <Route exact path='/' render={() => <NewsContainer />}/>\r\n// <Route path='/users' render={ () => <WithSusmensUsers />}/>\r\n// <Route path='/login' render={() => <Login/>}/>\r\n// <Route path='*' render={() => <div>404 - Not found</div>}/>","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Footer from \"./Footer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {Provider, useDispatch, useSelector} from \"react-redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {init} from \"./redux/app_reducer\";\r\nimport store, {AppStateType} from \"./redux/store-redux\";\r\nimport {componentsData} from \"./componentsDataArr\";\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const initialized = useSelector((state: AppStateType) => state.app.initialized)\r\n\r\n    useEffect(() => {\r\n        dispatch(init())\r\n    }, [])\r\n\r\n    if (!initialized) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    // @ts-ignore\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Switch>\r\n                        {\r\n                            componentsData.map((item, i) => {\r\n                                return <Route key = {i} path={item.path} exact={item.exact} render={() => item.Component}/>\r\n\r\n                            })\r\n                        }\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MyWayApp = () => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default MyWayApp\r\n\r\n//process.env.PUBLIC_URL\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MyWayApp from './App';\r\nimport \"antd/dist/antd.css\";\r\n\r\nReactDOM.render(<MyWayApp />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/user.47be60ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/user(1).7de5e5f7.svg\";","import {UsersAPI} from \"../api/api\";\r\nimport { InferActionsTypes, ThunkType } from \"./store-redux\";\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UsersDataItemType>,\r\n    pageSize: 100,\r\n    currentPage: 1,\r\n    pageCount: 0,\r\n    isFetching: true,\r\n    toggleProgressArr: [] as Array<number>,\r\n    friends: [] as Array<UsersDataItemType>,\r\n    filter: {\r\n        term: '',\r\n        friends: null as null | boolean\r\n    }\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\n\r\nlet users_reducer = (state = initialState, action: ActionsType) : InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Users/SWITCH_FOLLOW': {\r\n\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map( u => {\r\n                        if(u.id === action.userId){\r\n                            return {...u, followed: !u.followed}\r\n                        }\r\n                        return u\r\n                    })\r\n                }\r\n        }\r\n        case 'SN/Users/SET_USERS': {\r\n            return { ...state, usersData: [...action.users]}\r\n        }\r\n        case 'SN/Users/SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/Users/SET_TOTAL_PAGE_COUNT': {\r\n            return { ...state, pageCount: action.count}\r\n        }\r\n        case 'SN/Users/TOGGLE_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/Users/TOGGLE_PROGRESS': {\r\n            let userId = action.id\r\n            return {\r\n                ...state,\r\n                toggleProgressArr: action.isFetching\r\n                    ? [...state.toggleProgressArr, userId]\r\n                    : [...state.toggleProgressArr.filter(id => id !== userId)] \r\n            } \r\n        }\r\n        case 'SN/Users/GET_FRIENDS': {\r\n\r\n            return {\r\n                ...state,\r\n                friends: [...action.friends] as Array<UsersDataItemType>\r\n            }\r\n        }\r\n        case 'SN/Users/GET_FILTER': {\r\n            return {\r\n                ...state,\r\n                filter: {term: action.filter.term, friends: action.filter.friends}\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    switch_follow: (userId: number) => ({type: 'SN/Users/SWITCH_FOLLOW', userId} as const),\r\n    setUsers: (users: Array<UsersDataItemType>) => ({type: 'SN/Users/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/Users/SET_CURRENT_PAGE', currentPage} as const),\r\n    setPageCount: (count: number) => ({type: 'SN/Users/SET_TOTAL_PAGE_COUNT', count} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/Users/TOGGLE_FETCHING', isFetching} as const),\r\n    toggleProgress: (isFetching: boolean, id: number) => ({type: 'SN/Users/TOGGLE_PROGRESS', isFetching, id} as const),\r\n    getFriends: (friends: Array<UsersDataItemType>) => ({type: 'SN/Users/GET_FRIENDS', friends} as const),\r\n    getFilter: (filter: FilterType) => ({type: 'SN/Users/GET_FILTER', filter} as const)\r\n}\r\n\r\n\r\n\r\ntype getThunkType = ThunkType<ActionsType >\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number, filter: FilterType): getThunkType => async (dispatch)  => {\r\n\r\n    dispatch(actions.setCurrentPage(currentPage))\r\n    dispatch(actions.toggleIsFetching(true))\r\n    dispatch(actions.getFilter(filter))\r\n    const data = await UsersAPI.getUsers(currentPage, pageSize, filter.term, filter.friends)\r\n    dispatch(actions.toggleIsFetching(false))\r\n    dispatch(actions.setUsers(data.items))\r\n    dispatch(actions.setPageCount(data.totalCount))\r\n}\r\n\r\nexport const getFriends = (): getThunkType => async (dispatch)  => {\r\n\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const data = await UsersAPI.getFriends()\r\n    dispatch(actions.toggleIsFetching(false))\r\n    dispatch(actions.getFriends(data.items))\r\n}\r\n\r\nexport const follow = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleProgress(true, userId))\r\n    const data = await UsersAPI.follow(userId)\r\n        dispatch(actions.switch_follow(userId))\r\n        dispatch(actions.toggleProgress(false, userId))\r\n        dispatch(getFriends())\r\n}\r\n\r\nexport const unfollow = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleProgress(true, userId))\r\n    const data = await UsersAPI.unfollow(userId)\r\n        dispatch(actions.switch_follow(userId))\r\n        dispatch(actions.toggleProgress(false, userId))\r\n        dispatch(getFriends())\r\n}\r\n\r\nexport default users_reducer\r\n\r\n\r\ntype UsersDataItemType = {\r\n    name: string | null,\r\n    id: number,\r\n    photos: {\r\n        small: string | null,\r\n        large: string | null\r\n    },\r\n    status: string | null,\r\n    followed: boolean\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__38H_L\",\"item\":\"Navbar_item__1o5Mi\",\"active\":\"Navbar_active__3WUce\",\"itemLink\":\"Navbar_itemLink__1jl79\",\"linkWrap\":\"Navbar_linkWrap__3pUpL\",\"linkName\":\"Navbar_linkName__2KkCq\",\"itemSettings\":\"Navbar_itemSettings__3Q9jd\",\"navbarItemImg\":\"Navbar_navbarItemImg__-6Je8\",\"music\":\"Navbar_music__14dvC\",\"settings\":\"Navbar_settings__aAuoQ\",\"profile\":\"Navbar_profile__3Iud4\",\"message\":\"Navbar_message__kO4_Y\",\"news\":\"Navbar_news__1Vmwk\",\"users\":\"Navbar_users__2XIUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3j6Mb\",\"accountInfo\":\"Header_accountInfo__3sZxQ\",\"accountDrop\":\"Header_accountDrop__3Ndw5\",\"userImg\":\"Header_userImg__1L8ZS\",\"login\":\"Header_login__1qApJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputArea\":\"FormControl_inputArea__2zbgv\",\"error\":\"FormControl_error__AgXpc\",\"commonError\":\"FormControl_commonError__nrQlp\"};","export const required = (value: string) => {\r\n    if (value) return undefined\r\n\r\n    return \"Field must be not empty!\"\r\n}\r\n\r\nexport const maxLengthCreater = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength)\r\n        return `Fields max length is ${maxLength}!`\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsItem\":\"NewsItem_newsItem__3oBaT\",\"user\":\"NewsItem_user__243Ud\",\"newsTitle\":\"NewsItem_newsTitle__3mn5I\",\"reviewCount\":\"NewsItem_reviewCount__1II4o\",\"commentsArea\":\"NewsItem_commentsArea__11K9a\",\"commentsItem\":\"NewsItem_commentsItem__2Se2x\",\"inputComment\":\"NewsItem_inputComment__3koUd\",\"reviewIcon\":\"NewsItem_reviewIcon__38uJ3\",\"userImg\":\"NewsItem_userImg__2rCdw\",\"commentPhoto\":\"NewsItem_commentPhoto__1Fg3R\",\"newsItemContent\":\"NewsItem_newsItemContent__2HpPs\",\"postImg\":\"NewsItem_postImg__2rHwC\",\"BigModeArea\":\"NewsItem_BigModeArea__3R6el\",\"rightContent\":\"NewsItem_rightContent__10CKD\",\"closeBig\":\"NewsItem_closeBig__CBiLS\"};","module.exports = __webpack_public_path__ + \"static/media/heart.21b08fee.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart_active.72246e10.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendsBar\":\"FreindsBar_FriendsBar__2-7qg\",\"FriendsBarContent\":\"FreindsBar_FriendsBarContent__3B25l\",\"item\":\"FreindsBar_item__3ddza\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/store-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n\r\n    const RedirectComponent = (props: any) => {\r\n        const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\r\n        if (!isAuth) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    return RedirectComponent\r\n}","module.exports = __webpack_public_path__ + \"static/media/user22.ee08bb2d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/comment2.a93a5733.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendText\":\"MyPosts_sendText__ddk57\",\"btn\":\"MyPosts_btn__1zJ1u\",\"myPostWrap\":\"MyPosts_myPostWrap__38es8\",\"addPostArea\":\"MyPosts_addPostArea__3WQQm\",\"posts\":\"MyPosts_posts__2uC8G\"};"],"sourceRoot":""}