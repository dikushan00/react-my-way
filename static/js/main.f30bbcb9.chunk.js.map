{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/News/News.module.css","Footer.module.css","components/Login/Login.module.css","img/next.svg","img/back.svg","components/News/Stories/Stories.module.css","api/api.ts","img/logo.png","components/common/Preloader/Preloader.module.css","components/Profile/Profile.module.css","components/common/FormControl/FormControl.tsx","serviceWorker.js","redux/music_reducer.ts","components/Music/Playlist.tsx","components/Music/Controls.tsx","components/Music/Music.tsx","components/Settings/Settings.jsx","Footer.js","redux/profile_reducer.ts","redux/header_reducer.ts","components/Login/Login.tsx","redux/news_reducer.ts","components/News/newsItem/NewsItem.tsx","components/News/Stories/StoriesItem.tsx","components/News/Stories/Stories.tsx","components/News/News.tsx","components/News/NewsContainer.tsx","components/Header/MusicPlayer.tsx","components/Header/HeaderSearchForm.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/app_reducer.ts","redux/navbar_reducer.ts","redux/store-redux.ts","components/HOC/withSuspens.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/utils/Validators/cropImgFunctions.ts","components/Profile/ProfileInfo/DropzoneAva.tsx","components/Profile/ProfileInfo/AvatarPhoto.tsx","components/Profile/ProfileInfo/ProfileData.tsx","components/Profile/ProfileInfo/ProfilInfo.tsx","components/Profile/MyPosts/Post/CommentsArea.tsx","components/Profile/MyPosts/Post/ReviewArea.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Navbar/FriendsBar/FreindsBar.tsx","components/Navbar/Navbar.tsx","App.tsx","index.js","img/user.svg","img/user(1).svg","components/common/Preloader/Preloader.tsx","redux/users_reducer.ts","components/Header/Header.module.css","components/Navbar/Navbar.module.css","components/common/FormControl/FormControl.module.css","components/utils/Validators/validators.ts","components/News/newsItem/NewsItem.module.css","img/heart.svg","img/heart_active.svg","components/Navbar/FriendsBar/FreindsBar.module.css","components/HOC/withAuthRedirect.tsx","img/comment2.svg","img/user22.jpg","components/Profile/MyPosts/MyPosts.module.css","redux/dialogs_reducer.ts"],"names":["module","exports","descriptionBlock","avaArea","avaHover","avaImg","contact","btn","editBtn","inputPhoto","profileData","infoKey","postImg","dropzone","btnFollow","btnBlue","btnRed","BigModeArea","rightContent","closeBig","story","footer","form","__webpack_require__","p","storiesArea","storiesItem","storiesImg","d","__webpack_exports__","ResultCodeEnum","CaptchaEnum","UsersAPI","AuthAPI","ProfileAPI","LoginAPI","SecurityAPI","DialogsAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","n","axios","create","withCredentials","baseURL","headers","api-key","getUsers","currentPage","arguments","length","undefined","pageSize","term","friends","get","concat","then","response","data","follow","userId","post","unfollow","delete","getFriends","res","checkAuthMe","checkAuth","getStatus","updateStatus","status","put","updateMainPhoto","photo","formData","FormData","append","Content-Type","saveProfile","profile","checkLogin","email","password","rememberMe","captcha","logout","getCaptcha","viewAllDialogs","startDialog","getMessagesWUser","sendMessagesToUser","message","body","ldsDualRing","content","Element","_ref","input","meta","props","Object","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","error","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","inputArea","assign","Boolean","window","location","hostname","match","initialState","songs","currentSong","currentTime","repeat","random","playing","audio","actions","id","type","time","music_reducer","state","action","objectSpread","Playlist","dispatch","useDispatch","useSelector","music","react_default","react_fontawesome_index_es","icon","faListUl","map","song","i","key","onClick","faMusic","Controls","currentTimeState","useRef","_useState","useState","_useState2","slicedToArray","statevolum","setStateVolum","_useState3","_useState4","dur","setDur","_useState5","_useState6","setCurrentTime","fmtMSS","s","toggleAudio","current","paused","play","pause","nextSong","SetCurrent","useEffect","volume","onTimeUpdate","e","target","handleUpdateTime","onCanPlay","duration","onEnded","Math","ref","preload","src","faVolumeDown","value","round","name","onChange","q","faStepBackward","faPlay","faPause","faStepForward","compute","faRandom","faRedoAlt","Music","Fragment","Music_Controls","marginTop","Music_Playlist","Settings","Footer","postsData","title","comments","commentId","fullName","text","likesCount","CommentsCount","liked","isFetching","photos","addPost","newPostText","profileInfo","myProfileInfo","toggleIsFetching","setStatus","setPhoto","photoUrl","addNewComment","newCommentText","updateLikeCount","updateCommentCount","check_auth","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","_x","apply","this","updatePhoto","_ref4","_callee4","_context4","resultCode","Success","_x4","check_auth_me","_ref6","_callee6","getState","myId","_context6","auth","_x7","_x8","profile_reducer","toConsumableArray","avatar","item","login","isAuth","_data$data","url","header_reducer","Input","ReduxForm","reduxForm","onSubmit","handleSubmit","htmlFor","Field","placeholder","component","validate","required","display","alt","commonError","connect","checkLoginMe","_ref2","_callee2","_context2","Captcha","messages","stopSubmit","_error","_x2","react_router","to","inputData","news","stories","viewed","news_reducer","NewsItemBigMode","onAddLike","isBigMode","setBigMode","onAddComment","avatarPhoto","alignItems","height","borderBottom","userImg","userPhoto","user","reviewCount","border","likesPhotoActive","reviewIcon","likesPhoto","CommentFormRedux","NewsItem_NewsCommentsArea","NewsCommentsArea","_ref3","commentsArea","commentsItem","commentPhoto","commentUserPhoto","paddingLeft","margin","inputComment","NewsItem","profilePage","large","reset","document","classList","add","remove","newsItem","newsItemContent","newsTitle","NewsItem_NewsItemBigMode","StoriesItem","React","memo","index","arr","setStoryViewed","storyPhoto","setStoryPhoto","_useState7","_useState8","storyIndex","setStoryIndex","imgStyle","width","borderRadius","cursor","onStoryClick","storyTime","setInterval","changeStoryPhoto","direction","clearInterval","marginLeft","position","top","left","defaultUserPhoto","StoryBigMode","storyId","centerStory","backPhoto","zIndex","nextPhoto","right","Stories","newsPage","padding","Stories_StoriesItem","News","newsState","newsWrap","News_Stories_Stories","postArea","newsItem_NewsItem","compose","withAuthRedirect","MusicPlayer","justifyContent","HeaderSearchForm","usersPage","searchFriends","setSearchFriends","isFocuced","setIsFocused","toggleFocus","addEventListener","elem","accountDrop","getElementById","outsideClickListener","event","contains","offsetWidth","offsetHeight","getClientRects","isVisible","removeEventListener","formik_esm","initialValues","values","setSubmitting","filter","toLowerCase","includes","console","log","handleChange","submitForm","autocomplete","onFocus","setTimeout","outline","faSearch","color","flexDirection","background","react_router_dom","photoUser","Header","isLogInfoMode","setLogInfoMode","header","logoImg","Header_HeaderSearchForm","Header_MusicPlayer","authArea","accountInfo","_callee3","_context3","_x3","HeaderContainer","components_Header_Header","initialized","app_reducer","navData","href","navbar_reducer","reducers","combineReducers","dialogPage","dialogs_reducer","navbar","users_reducer","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","withSuspens","Component","Suspense","fallback","Preloader","ProfileStatusWithHooks","statusWord","editMode","setEditMode","toggleEditMode","autoFocus","onBlur","onDoubleClick","Textarea1","Textarea2","Checkbox","ProfileDataFormRedux","contacts","keys","getCroppedImg","image","crop","fileName","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","reader","FileReader","readAsDataURL","onload","croppedImageFile","base64String","filename","split","mime","bstr","atob","u8arr","Uint8Array","charCodeAt","File","base64StringtoFile","result","croppedImageUrl","URL","createObjectURL","DropzoneAva","setIsLoadImg","setSrc","dist_es","onDrop","files","rejectedFiles","multiple","accept","maxSize","getRootProps","getInputProps","AvatarBigMode","isOwner","imageRef","setImageRef","isLoadImg","_useState9","_useState10","croppedObject","setCroppedObject","_useState11","unit","aspect","_useState12","setCrop","makeClientCrop","_croppedObject","refreshInputArea","ProfileInfo_DropzoneAva","ReactCrop_min_default","ruleOfThirds","onImageLoaded","onComplete","maxWidth","AvatarPhoto","AvatarPhoto_AvatarBigMode","Contact","contactTitle","contactValue","ProfileData","objectWithoutProperties","onEditMode","faStickyNote","infoValue","aboutMe","faCheck","lookingForAJob","faBriefcase","lookingForAJobDescription","faAddressBook","ProfileData_Contact","ProfileInfo","toggleProgressArr","switch_follow","followed","ProfileInfo_AvatarPhoto","ProfileInfo_ProfileStatusWithHooks","_ref5","_callee5","_context5","Error","abrupt","_x5","_x6","ProfileInfo_ProfileData","some","disabled","CommentsArea","sNews","ReviewArea","Post","Post_ReviewArea","Post_CommentFormRedux","addComment","Post_CommentsArea","maxLength255","maxLengthCreater","Textarea","myPostForm","sendText","MyPostFormRedux","MyPosts","addPostArea","newMyPostText","posts","reverse","MyPosts_Post_Post","MyPostsContainer","Profile","ProfilInfo","MyPosts_MyPostsContainer","params","useParams","authId","refreshProfile","components_Profile_Profile","FriendsBar","textAlign","FriendsBarContent","itemName","fontSize","Navbar","navState","nav","itemLink","linkWrap","navbarItemImg","toString","linkName","FreindsBar","UsersContainer","lazy","bind","WithSusmensDialogs","WithSusmensUsers","App","init","Header_HeaderContainer","components_Navbar_Navbar","path","render","Profile_ProfileContainer","components_Music_Music","components_Settings_Settings","NewsContainer","exact","components_Login_Login","src_Footer","PureComponent","AppContainer","withRouter","promise","all","MyWayApp","es","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_1__","_Preloader_module_css__WEBPACK_IMPORTED_MODULE_1___default","usersData","pageCount","users","count","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","items","totalCount","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","u","I_files_web_practice_react_react_my_way_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","active","itemSettings","settings","maxLength","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","react_redux__WEBPACK_IMPORTED_MODULE_2__","myPostWrap","userData","messageData","newMessages","addMessage","newMessageText","sendNewMessage","sendMessage"],"mappings":"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","file":"static/js/main.f30bbcb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3IQY5\",\"avaArea\":\"ProfileInfo_avaArea__18DAX\",\"avaHover\":\"ProfileInfo_avaHover__3nvcH\",\"avaImg\":\"ProfileInfo_avaImg__2N24i\",\"contact\":\"ProfileInfo_contact__3sfQm\",\"btn\":\"ProfileInfo_btn__2kxrB\",\"editBtn\":\"ProfileInfo_editBtn__3eBuS\",\"inputPhoto\":\"ProfileInfo_inputPhoto__2hIBc\",\"profileData\":\"ProfileInfo_profileData__1UrmR\",\"infoKey\":\"ProfileInfo_infoKey__2chCu\",\"postImg\":\"ProfileInfo_postImg__2kEd0\",\"dropzone\":\"ProfileInfo_dropzone__1CZls\",\"btnFollow\":\"ProfileInfo_btnFollow__2_-TK\",\"btnBlue\":\"ProfileInfo_btnBlue__1CYGR\",\"btnRed\":\"ProfileInfo_btnRed__1z1AG\",\"BigModeArea\":\"ProfileInfo_BigModeArea__SSov4\",\"rightContent\":\"ProfileInfo_rightContent__2khK0\",\"closeBig\":\"ProfileInfo_closeBig__16rkQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"story\":\"News_story__LJLNL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3ogKW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2n2g0\"};","module.exports = __webpack_public_path__ + \"static/media/next.a6dfbed7.svg\";","module.exports = __webpack_public_path__ + \"static/media/back.87e27296.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"storiesArea\":\"Stories_storiesArea__2G9qc\",\"storiesItem\":\"Stories_storiesItem__3jXBQ\",\"storiesImg\":\"Stories_storiesImg__gvng1\"};","import axios from \"axios\";\r\nimport { ProfileType, UserType, PhotosType, SaveProfileType } from \"../Types/Types\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"api-key\": \"201fbca2-9214-4c3c-bd7a-b698236c954c\"\r\n    }\r\n})\r\n\r\nexport enum ResultCodeEnum{\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum CaptchaEnum {\r\n    Captcha = 10\r\n}\r\n\r\nexport const UsersAPI = {\r\n\r\n    getUsers(currentPage: number = 1, pageSize: number = 10, term: string = '', friends: boolean | null = null) {\r\n        return instance.get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}&term=${term}` + (friends === null ? '' : `&friend=${friends}`))\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    follow(userId: number) {\r\n        return instance.post<CommonApiType>(`follow/${userId}`, {})\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    unfollow(userId: number | null) {\r\n        return instance.delete<CommonApiType>(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n\r\n    getFriends() {\r\n        return instance.get<GetUsersType>(`users?count=100&friend=true`)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n\r\n    checkAuthMe() {\r\n        return instance.get<AuthMeType>(`auth/me`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const ProfileAPI = {\r\n\r\n    checkAuth(userId: number | null) {\r\n        return instance.get<ProfileType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<CommonApiType>(`profile/status`, {status})\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    updateMainPhoto(photo: File) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photo)\r\n        return instance.put<UpdatePhotoType>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    saveProfile(profile: SaveProfileType) {\r\n        return instance.put<CommonApiType>(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const LoginAPI = {\r\n    checkLogin(email: string | null, password: string | null, rememberMe: boolean, captcha: string | null = null) {\r\n        return instance.post<PostLoginType>(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete<DeleteLoginType>(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const SecurityAPI = {\r\n    getCaptcha() {\r\n        return instance.get<GetCaptchaType>(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\n\r\nexport const DialogsAPI = {\r\n\r\n    viewAllDialogs() {\r\n        return instance.get<CommonApiType>(`dialogs`)\r\n    },\r\n    startDialog(userId: number) {\r\n        return instance.put<CommonApiType>(`dialogs/${userId}`)\r\n    },\r\n    getMessagesWUser(userId: number) {\r\n        return instance.get<CommonApiType>(`dialogs/${userId}/messages`)\r\n    },\r\n    sendMessagesToUser(userId: number, message: string) {\r\n        return instance.post<CommonApiType>(`dialogs/${userId}/messages`, {\r\n            body: '' + message\r\n        }).then((res) => {\r\n            return res.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\ntype CommonApiType = DeleteLoginType\r\n\r\ntype GetUsersType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: null | string\r\n}\r\n\r\n\r\ntype AuthMeType = {\r\n    data: {id: number | null, login: string | null, email: string | null}\r\n    resultCode: ResultCodeEnum | CaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\n\r\ntype UpdatePhotoType = {\r\n    data: {\r\n        photos: PhotosType\r\n    }\r\n    messages: Array<string>\r\n    resultCode: ResultCodeEnum | CaptchaEnum\r\n}\r\n\r\n\r\ntype DeleteLoginType = {\r\n    data: {}\r\n    resultCode: ResultCodeEnum | CaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\ntype PostLoginType = {\r\n    data: {userId: number}\r\n    resultCode: ResultCodeEnum | CaptchaEnum\r\n    messages: Array<string>\r\n}\r\n\r\n\r\ntype GetCaptchaType = {\r\n    url: string\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.3fa434f6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__1cBAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__Lj4Bi\"};","import React, { EventHandler, DragEvent, FocusEvent, ChangeEvent } from 'react'\r\nimport style from './FormControl.module.css'\r\nimport { WrappedFieldProps, EventOrValueHandler } from 'redux-form'\r\n\r\ntype FormControlType = (params: WrappedFieldProps) => React.ReactNode\r\n\r\ntype ElementType = {\r\n    checked?: boolean\r\n    value: any\r\n    onBlur: EventOrValueHandler<FocusEvent<any>>\r\n    onChange: EventOrValueHandler<ChangeEvent<any>>\r\n    onDragStart: EventHandler<DragEvent<any>>\r\n    onDrop: EventHandler<DragEvent<any>>\r\n    onFocus: EventHandler<FocusEvent<any>>\r\n}\r\n\r\nexport function Element(Element: any): FormControlType{\r\n    \r\n    return function( {input, meta, ...props} ) {\r\n\r\n    const hasError = meta.touched && meta.error\r\n\r\n    return <div className={style.inputArea + \" \" + (hasError ? style.error : \"\")}>\r\n        \r\n            <Element {...input} {...props} />\r\n            <span>{hasError && meta.error}</span>\r\n        </div>\r\n}}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {InferActionsTypes} from \"./store-redux\";\r\n\r\nlet initialState = {\r\n    songs: [\r\n        [\r\n            \"The Beaten Path\",\r\n            \"https://www.youtube.com/audiolibrary_download?vid=e0a7d8421cdacd6f\"\r\n        ],\r\n        [\r\n            \"Homeroad\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_09_-_Homeroad.mp3\"\r\n        ],\r\n        [\r\n            \"Interception\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_07_-_Interception.mp3\"\r\n        ],\r\n        [\r\n            \"Sentinel\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_04_-_Sentinel.mp3\"\r\n        ],\r\n        [\r\n            \"Great Expectations\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_05_-_Great_Expectations.mp3\"\r\n        ],\r\n        [\r\n            \"Downfall\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_08_-_Downfall.mp3\"\r\n        ],\r\n        [\r\n            \"Augmentations\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_01_-_Augmentations.mp3\"\r\n        ],\r\n        [\r\n            \"Illumination\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Kai_Engel/Satin/Kai_Engel_-_02_-_Illumination.mp3\"\r\n        ],\r\n        [\r\n            \"Cabaret\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_10_-_Cabaret.mp3\"\r\n        ],\r\n        [\r\n            \"Contention\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_03_-_Contention.mp3\"\r\n        ],\r\n        [\r\n            \"Dark Alleys\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/ccCommunity/Kai_Engel/Satin/Kai_Engel_-_06_-_Dark_Alleys.mp3\"\r\n        ],\r\n        [\r\n            \"Climb\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_01_-_Climb.mp3\"\r\n        ],\r\n        [\r\n            \"Adventure\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_03_-_Adventure.mp3\"\r\n        ],\r\n        [\r\n            \"Lullaby\",\r\n            \"https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Ziklibrenbib/The_Ghost_in_Your_Piano/The_Ghost_in_your_piano/The_Ghost_in_Your_Piano_-_04_-_Lullaby.mp3\"\r\n        ]\r\n    ],\r\n    currentSong: 0,\r\n    currentTime: 0,\r\n    repeat: false,\r\n    random: false,\r\n    playing: false,\r\n    audio: null\r\n}\r\n\r\nexport type MusicInitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nlet music_reducer = (state = initialState, action: ActionsType):MusicInitialStateType => {\r\n        switch (action.type) {\r\n            case 'SET_CURRENT_SONG':\r\n                return {\r\n                    ...state,\r\n                    currentSong: action.data,\r\n                    playing: true\r\n                }\r\n            case 'UPDATE_CURRENT_TIME':\r\n                return {\r\n                    ...state,\r\n                    currentTime: action.time\r\n                }\r\n            case 'TOGGLE_RANDOM':\r\n                return {\r\n                    ...state,\r\n                    random: !state.random\r\n                }\r\n            case 'TOGGLE_REPEAT':\r\n                return {\r\n                    ...state,\r\n                    repeat: !state.playing\r\n                }\r\n            case 'TOGGLE_PLAYING':\r\n                return {\r\n                    ...state,\r\n                    playing: !state.playing\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    return state\r\n}\r\n\r\nexport const actions = {\r\n    SetCurrent: (id: number) => ({ type: 'SET_CURRENT_SONG', data: id } as const),\r\n    updateCurrentTime: (time: any) => ({ type: 'UPDATE_CURRENT_TIME', time } as const),\r\n    togglePlaying: () => ({ type: 'TOGGLE_PLAYING' } as const),\r\n    toggleRepeat: () => ({ type: 'TOGGLE_REPEAT' } as const),\r\n    toggleRandom: () => ({ type: 'TOGGLE_RANDOM' } as const),\r\n}\r\n\r\nexport default music_reducer","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store-redux\";\r\nimport {actions} from \"../../redux/music_reducer\";\r\nimport { faListUl, faMusic } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Music.css'\r\n\r\nconst Playlist = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const songs = useSelector((state: AppStateType) => state.music.songs)\r\n    const currentSong = useSelector((state: AppStateType) => state.music.currentSong)\r\n\r\n    const SetCurrent = (id: number) => {\r\n        dispatch(actions.SetCurrent(id))\r\n    }\r\n\r\n    return (\r\n        <div className=\"playlist\">\r\n            <div className=\"header\">\r\n            <FontAwesomeIcon icon={faListUl} />\r\n                <span className=\"pltext\">Play List</span>\r\n            </div>\r\n            <div className=\"songlist\">\r\n                <ul className=\"loi\">\r\n                    {\r\n                        songs.map((song, i) =>\r\n                            <li className={'songContainer ' + (currentSong === i ? 'selected' : '')} key={i}\r\n                                onClick={() => {\r\n                                    SetCurrent(i);\r\n                                }}>\r\n                                <div className = 'musicIcon'>\r\n                                    <FontAwesomeIcon icon = {faMusic} />\r\n                                </div>\r\n                                <span className=\"song\">{song[0]}</span>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Playlist","import React, {ChangeEvent, useEffect, useRef, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store-redux\";\r\nimport {actions} from \"../../redux/music_reducer\";\r\nimport { faPause, faPlay, faRandom, faRedoAlt, faStepBackward, faStepForward, faVolumeDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './Music.css'\r\n\r\nconst Controls = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const playing = useSelector((state: AppStateType) => state.music.playing)\r\n    const currentSong = useSelector((state: AppStateType) => state.music.currentSong)\r\n    const random = useSelector((state: AppStateType) => state.music.random)\r\n    const songs = useSelector((state: AppStateType) => state.music.songs)\r\n    const repeat = useSelector((state: AppStateType) => state.music.repeat)\r\n    const currentTimeState = useSelector((state: AppStateType) => state.music.currentTime)\r\n\r\n    const audio = useRef('audio_tag');\r\n\r\n    const [statevolum, setStateVolum] = useState(0.3)\r\n    const [dur, setDur] = useState(0)\r\n    const [currentTime, setCurrentTime] = useState(currentTimeState)\r\n\r\n    const fmtMSS = (s: number) => { return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + ~~(s) }\r\n\r\n    //@ts-ignore\r\n    const toggleAudio = () => audio.current.paused ? audio.current.play() : audio.current.pause();\r\n\r\n    const handleVolume = (q: number ) => {\r\n        setStateVolum(q);\r\n        //@ts-ignore\r\n        audio.current.volume = q;\r\n    }\r\n\r\n    const handleProgress = (e: ChangeEvent<HTMLInputElement>) => {\r\n        //@ts-ignore\r\n        let compute = (e.target.value * dur) / 100;\r\n        setCurrentTime(compute);\r\n        //@ts-ignore\r\n        audio.current.currentTime = compute\r\n    }\r\n    // Prev song\r\n    const prevSong = () => {\r\n        if (currentSong === 0) {\r\n            SetCurrent(songs.length - 1)\r\n        } else {\r\n            SetCurrent(currentSong - 1)\r\n        }\r\n    }\r\n    // Next song\r\n    const nextSong = () => {\r\n        if (currentSong === songs.length - 1) {\r\n            SetCurrent(0)\r\n        } else {\r\n            SetCurrent(currentSong + 1)\r\n        }\r\n    }\r\n    const handleEnd = () => {\r\n        // Check for random and repeat options\r\n        if (random) {\r\n            return dispatch({ type: 'SET_CURRENT_SONG', data: ~~(Math.random() * songs.length) })\r\n        } else {\r\n            if (repeat) {\r\n                nextSong()\r\n            } else if ((currentSong === songs.length - 1)) {\r\n                return\r\n            } else {\r\n                nextSong();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUpdateTime = (e: any) => {\r\n        setCurrentTime(e.target.currentTime)\r\n        dispatch(actions.updateCurrentTime(currentTime))\r\n    }\r\n\r\n    const SetCurrent = (id: number) => {\r\n        dispatch(actions.SetCurrent(id))\r\n    }\r\n\r\n    const togglePlaying = () => {\r\n        dispatch(actions.togglePlaying())\r\n    }\r\n\r\n    const toggleRandom = () => {\r\n        dispatch(actions.toggleRandom())\r\n    }\r\n\r\n    const toggleRepeat = () => {\r\n        dispatch(actions.toggleRepeat())\r\n    }\r\n\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        audio.current.volume = statevolum;\r\n        if (playing) { toggleAudio() }\r\n        //@ts-ignore\r\n        audio.current.currentTime = currentTime\r\n    }, [currentSong])\r\n\r\n    useEffect(() => {\r\n        setCurrentTime(currentTimeState)\r\n        //@ts-ignore\r\n        audio.current.currentTime = currentTime\r\n    }, [currentTimeState])\r\n\r\n    return (\r\n        <div className=\"controls\">\r\n            <audio\r\n                //@ts-ignore\r\n                onTimeUpdate={(e) => handleUpdateTime(e)}\r\n                //@ts-ignore\r\n                onCanPlay={(e) => setDur(e.target.duration)}\r\n                onEnded={handleEnd}\r\n                //@ts-ignore\r\n                ref={audio}\r\n                type=\"audio/mpeg\"\r\n                preload='true'\r\n                src={songs[currentSong][1]} \r\n                id=\"audioMusic\"/>\r\n            <div className=\"vlme\">\r\n                <span className=\"volum\"><FontAwesomeIcon icon={faVolumeDown} /></span>\r\n                <input value={Math.round(statevolum * 100)} type=\"range\" name=\"volBar\" id=\"volBar\" onChange={\r\n                    (e) => {\r\n                        //@ts-ignore\r\n                        return handleVolume(e.target.value / 100)\r\n                        }} />\r\n\r\n            </div>\r\n            <div className=\"musicControls\">\r\n                <span className=\"prev\" onClick={prevSong}><FontAwesomeIcon icon={faStepBackward} /></span>\r\n                <span className=\"play\" onClick={() => { togglePlaying(); toggleAudio(); }}>\r\n                    <span className={!playing ? '' : 'hide'}><FontAwesomeIcon icon={faPlay} /></span>\r\n                    <span className={!playing ? 'hide' : ''}><FontAwesomeIcon icon={faPause} /></span>\r\n                </span>\r\n\r\n                <span className=\"next\" onClick={nextSong}><FontAwesomeIcon icon={faStepForward} /></span>\r\n            </div>\r\n            <div className=\"progressb\">\r\n                <span className=\"currentT\">{fmtMSS(currentTime)}</span>\r\n                <input\r\n                    onChange={handleProgress}\r\n                    value={dur ? (currentTime * 100) / dur : 0}\r\n                    type=\"range\" name=\"progresBar\" id=\"prgbar\" />\r\n                <span className=\"totalT\">{fmtMSS(dur)}</span>\r\n\r\n            </div>\r\n            <div className=\"plsoptions\">\r\n\r\n        <span onClick={toggleRandom} className={\"random \" + (random ? 'active' : '')}>\r\n        <FontAwesomeIcon icon={faRandom} />\r\n        </span>\r\n                <span onClick={toggleRepeat} className={\"repeat \" + (repeat ? 'active' : '')}>\r\n                <FontAwesomeIcon icon={faRedoAlt} />\r\n        </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls;","import React from 'react';\r\nimport Playlist from \"./Playlist\";\r\nimport Controls from \"./Controls\";\r\nimport './Music.css'\r\n\r\nconst Music = () => {\r\n    return (<>\r\n        <Controls />\r\n        <div className = \"pageArea\" style = {{marginTop: \"5px\"}}>\r\n        <div className=\"main\">\r\n            <div className=\"top\">\r\n                <Playlist />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>);\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (<div>\r\n        Settings\r\n    </div>);\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './Footer.module.css'\r\n\r\nconst Footer = () => {\r\n  return (<footer className={s.footer}>\r\n   <p>&copy; all right reserves, 2020</p>\r\n  </footer>);\r\n}\r\n\r\nexport default Footer;","import {ProfileAPI, ResultCodeEnum} from \"../api/api\";\r\nimport { stopSubmit, FormAction } from \"redux-form\";\r\nimport {CommentsType, SaveProfileType, ProfileType} from './../Types/Types';\r\nimport { ThunkType, InferActionsTypes } from \"./store-redux\";\r\n\r\nlet id = 0\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {\r\n            id: 1,\r\n            title: \"Hello everyone. it is my first news post!\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 2,\r\n            title: \"React makes it painless to create interactive UIs.\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 3,\r\n            title: \"Build encapsulated components that manage their own state, then compose them to make complex UIs.\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 4,\r\n            title: \"Declarative views make your code more predictable and easier to debug.\",\r\n            photo: '',\r\n            comments: [\r\n                {\r\n                    userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'\r\n                }, \r\n                {\r\n                    userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'\r\n                }],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        }\r\n    ] as Array<PostItemType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    isFetching: false,\r\n    photos: null as PhotosType | null\r\n}\r\n\r\nexport type ProfileInitialStateType = typeof initialState\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\nlet profile_reducer = (state = initialState, action: ActionsType): ProfileInitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Profile/ADD_NEW_POST': {\r\n\r\n            if (action.newPostText.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    postsData: [...state.postsData, {\r\n                        id: 5,\r\n                        fullName: '',\r\n                        title: action.newPostText,\r\n                        photo: '',\r\n                        avatar: '',\r\n                        comments: [],\r\n                        likesCount: 0,\r\n                        CommentsCount: 0,\r\n                        liked: false\r\n                    }]\r\n                }\r\n            }\r\n\r\n            return state\r\n\r\n        }\r\n\r\n        case 'SN/Profile/PROFILE_INFO': {\r\n\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        case 'SN/Profile/My_PROFILE_INFO': {\r\n\r\n            return {\r\n                ...state,\r\n                profile: {...action.profile},\r\n                photos: action.profile.photos\r\n            }\r\n        }\r\n        case 'SN/Profile/TOGGLE_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/Profile/SET_STATUS': {\r\n\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SN/Profile/SET_PHOTO': {\r\n\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photoUrl } as ProfileType,\r\n                photos: action.photoUrl\r\n            }\r\n        }\r\n\r\n        case 'SN/Profile/ADD_NEW_COMMENT': {\r\n            if (action.newCommentText.length > 0){\r\n                return {\r\n                    ...state,\r\n                    postsData: state.postsData.map(item => {\r\n                        if(item.id === action.id)\r\n                            item.comments = [...item.comments, {userId: 5, fullName: 'dikushan00', commentId: 5, text: action.newCommentText, photo: ''}]\r\n                        return item\r\n                    })\r\n                }\r\n                id++;\r\n            }\r\n            return state\r\n        }\r\n\r\n        case 'SN/Profile/UPDATE_LIKE_COUNT': {\r\n            \r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.map(item => {\r\n                    if(item.id === action.id && !item.liked){\r\n                        item.likesCount = item.likesCount + 1\r\n                        item.liked = !item.liked \r\n                    } else if(item.id === action.id && item.liked) {\r\n                        item.likesCount = item.likesCount - 1 \r\n                        item.liked = !item.liked \r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        case 'SN/Profile/UPDATE_COMMENT_COUNT': {\r\n\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.map(item => {\r\n                    if(item.id === action.id)\r\n                        item.CommentsCount++\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addPost: (newPostText: string) => ({type: 'SN/Profile/ADD_NEW_POST', newPostText} as const),\r\n    profileInfo: (profile: ProfileType) => ({type: 'SN/Profile/PROFILE_INFO', profile} as const),\r\n    myProfileInfo: (profile: ProfileType) => ({type: 'SN/Profile/My_PROFILE_INFO', profile} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/Profile/TOGGLE_FETCHING', isFetching} as const),\r\n    setStatus: (status: string) => ({type: 'SN/Profile/SET_STATUS', status} as const),\r\n    setPhoto: (photoUrl: PhotosType) => ({type: 'SN/Profile/SET_PHOTO', photoUrl} as const),\r\n    addNewComment: (id: number, newCommentText: string) => ({type: 'SN/Profile/ADD_NEW_COMMENT', id, newCommentText} as const),\r\n    updateLikeCount: (id: number) => ({type: 'SN/Profile/UPDATE_LIKE_COUNT', id} as const),\r\n    updateCommentCount: (id: number) => ({type: 'SN/Profile/UPDATE_COMMENT_COUNT', id} as const)\r\n}\r\n\r\nexport const check_auth = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const data = await ProfileAPI.checkAuth(userId)\r\n    dispatch(actions.profileInfo(data))\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\nexport const getStatus = (userId: number): getThunkType => async (dispatch) => {\r\n    \r\n    const data = await ProfileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status:string): getThunkType => async (dispatch) => {\r\n    const data = await ProfileAPI.updateStatus(status)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(actions.setStatus(status));\r\n        }\r\n}\r\n\r\nexport const updatePhoto = (photo: File): getThunkType => async (dispatch) => {\r\n    const data = await ProfileAPI.updateMainPhoto(photo)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(actions.setPhoto(data.data.photos));\r\n        }\r\n}\r\n\r\nexport const saveProfile = (profile: SaveProfileType): getThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const response = await ProfileAPI.saveProfile(profile);\r\n\r\n        if (response.data.resultCode === ResultCodeEnum.Success) {\r\n            if(userId)\r\n                dispatch(check_auth(userId));\r\n            else throw new Error\r\n        } else {\r\n            dispatch(stopSubmit(\"editProfileData\", {_error: response.data.messages[0]}));\r\n            return Promise.reject(response.data.messages[0]);\r\n        }\r\n}\r\n\r\nexport const check_auth_me = (): getThunkType => async (dispatch, getState) => {\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const myId = getState().auth.id;\r\n    const data = await ProfileAPI.checkAuth(myId)\r\n    dispatch(actions.myProfileInfo(data))\r\n    dispatch(actions.toggleIsFetching(false))\r\n}\r\n\r\n\r\nexport default profile_reducer\r\n\r\n\r\nexport type PostItemType = {\r\n    id: number,\r\n    fullName: string,\r\n    title: string,\r\n    avatar: string,\r\n    photo: string | null,\r\n    comments: Array<CommentsType>\r\n    likesCount: number,\r\n    CommentsCount: number,\r\n    liked: boolean\r\n}\r\n\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\ntype getThunkType = ThunkType<ActionsType | FormAction>\r\n\r\n","import {AuthAPI, LoginAPI, SecurityAPI, CaptchaEnum, ResultCodeEnum} from \"../api/api\";\r\nimport {stopSubmit, FormAction} from \"redux-form\";\r\nimport { check_auth_me } from \"./profile_reducer\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType, InferActionsTypes, ThunkType } from \"./store-redux\";\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    login: null as string | null,\r\n    email: null as string | null,\r\n    isAuth: false,\r\n    captcha: null as string | null\r\n}\r\n\r\ntype initialStateType = typeof initialState;\r\n\r\nlet header_reducer = (state = initialState, action : ActionsType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Header/SET_NEW_AUTH':\r\n        case 'SN/Header/SET_NEW_CAPTCHA': {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setNewAuth: (id :number | null, login : string | null, email : string | null, isAuth: boolean) => ({type: 'SN/Header/SET_NEW_AUTH', data: {id, login, email, isAuth}} as const),\r\n    setNewCaptcha: (captcha: string) => ({type: 'SN/Header/SET_NEW_CAPTCHA', data: {captcha}} as const)\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\ntype GetThunkType = ThunkType<ActionsType | FormAction>\r\n\r\nexport const checkAuthMe = (): GetThunkType => async (dispatch) => {\r\n    const data = await AuthAPI.checkAuthMe()\r\n    if (data.resultCode === ResultCodeEnum.Success) {\r\n        let {id, login, email} = data.data\r\n        dispatch(actions.setNewAuth(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const checkLoginMe = (email: string | null, password: string | null, rememberMe: boolean, captcha : string | null):GetThunkType => async (dispatch) => {\r\n    const response = await LoginAPI.checkLogin(email, password, rememberMe, captcha)\r\n\r\n    if (response.data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(checkAuthMe());\r\n        dispatch(check_auth_me());\r\n    } else {\r\n        if(response.data.resultCode === CaptchaEnum.Captcha){\r\n            dispatch(getCaptcha())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error!'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\n\r\nexport const logoutMe = (): GetThunkType => async (dispatch) => {\r\n    const response = await LoginAPI.logout()\r\n    if (response.data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(actions.setNewAuth(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptcha = (): GetThunkType => async (dispatch) => {\r\n    const response = await SecurityAPI.getCaptcha()\r\n    dispatch(actions.setNewCaptcha(response.data.url))\r\n}\r\n\r\nexport default header_reducer","import React from 'react'\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {checkLoginMe} from \"../../redux/header_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {required} from \"../utils/Validators/validators\";\r\nimport {Element} from \"../common/FormControl/FormControl\";\r\nimport style from \"../common/FormControl/FormControl.module.css\"\r\nimport s from \"./Login.module.css\"\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    captcha: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    checkLoginMe: (email: string | null, password: string | null, rememberMe: boolean, captcha: string | null) => Promise<void>\r\n}\r\n\r\ntype LoginPropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nexport type LoginFormValuesType = {\r\n    captcha: string | null\r\n    rememberMe: boolean\r\n    password: string | null\r\n    email: string | null\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\r\n\r\n\r\n\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n\r\n    const onSubmit = (inputData: LoginFormValuesType) => {\r\n        props.checkLoginMe(inputData.email, inputData.password, inputData.rememberMe, inputData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className='pageArea'>\r\n            <h1>Login</h1>\r\n            <ReduxForm onSubmit={onSubmit} captcha = {props.captcha}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Input = Element(\"input\");\r\n\r\ntype LoginFormPropsType = {\r\n    captcha: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormPropsType> & LoginFormPropsType > = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.form}>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field name={'email'}  placeholder='Email..' component={Input} validate={[required]} id='email'/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"pass\">Password</label>\r\n                <Field name={'password'} placeholder='Password..' component={Input} id='pass' validate={[required]} type='password'/>\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                <label htmlFor=\"remember\">Remember me</label>\r\n                <Field name={'rememberMe'} type={'checkbox'} component={Input} id='remember'/>\r\n            </div>\r\n\r\n            {props.captcha && <img src={props.captcha} alt=\"Captcha\"/>}\r\n            {props.captcha && <Field name={'captcha'} component={Input} id='captcha'/>}\r\n\r\n            <div>\r\n                <button className='btn'>Login</button>\r\n            </div>\r\n            {props.error && <div className={style.commonError}>{props.error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxForm = reduxForm<LoginFormValuesType, LoginFormPropsType>({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha\r\n})\r\n\r\nexport default connect(mapStateToProps, {checkLoginMe})(Login)","import { InferActionsTypes } from \"./store-redux\";\r\nimport { stat } from \"fs\";\r\n\r\nlet id = 3;\r\n\r\nlet initialState = {\r\n    news: [\r\n        {\r\n            id: 1,\r\n            fullName: 'Уютный домик',\r\n            title: \"Hello everyone. it is my first news post!\",\r\n            avatar: \"http://a824.phobos.apple.com/us/r30/Purple3/v4/47/47/e2/4747e282-b06d-8c33-c4d8-b9c22db8abad/pr_source.png?downloadKey=1422036762_0750e892c607d16376f15f0523f383d6\",\r\n            photo: \"https://lh3.googleusercontent.com/proxy/yFl9OxQlRAYC-qJEgryBrjzKtZ8TDH79j3MymUnAjWppRvFJ6bGigwx5-JdkkqrE1TZJ4T-RFWwxKW4ZPb-Sp_rCzuYNfwAnbNruqfVTfZCCbs616Q\",\r\n            comments: [{userId: 1, commentId: 1, fullName: 'Башаров Максим', text: \"its awesome!\", photo: 'https://i.pinimg.com/736x/8f/f6/08/8ff60864af4b3eebc06a8bbabcf0c21b.jpg'}, {userId: 2, commentId: 2, fullName: 'Башаров Максим', text: \"How are you?\", photo: 'https://avatars.mds.yandex.net/get-zen_doc/229614/pub_5db308ea5ba2b500b6bb0d1d_5db309208d5b5f00afb1fe92/scale_1200'}],\r\n            likesCount: 5,\r\n            CommentsCount: 2,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 2,\r\n            fullName: 'Уютный домик',\r\n            title: \"Today wether is good\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJwu0fvICSBsYl9qzOz1sjoyoxfEP2aPplVF7d9H=s900-c-k-c0xffffffff-no-rj-mo\",\r\n            photo: \"https://content.onliner.by/news/original_size/9b099955c46555811d26c14efdb3af00.jpeg\",\r\n            comments: [{userId: 2, commentId: 2, fullName: 'Бектемисов Тамерлан', text: \"Kazakhstan!!!\", photo: 'https://www.trendsmap.com/ipx/https://pbs.twimg.com/profile_images/926488420645523456/hwKSfqNj.jpg'}],\r\n            likesCount: 13,\r\n            CommentsCount: 1,\r\n            liked: true\r\n        },\r\n        {\r\n            id: 3,\r\n            fullName: 'Приколы за 253',\r\n            title: \"Im go to school\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJwNrBajG2GHjhDoh5dd4Ol6bgmpNmIFCcA8DeLvaA=s900-c-k-c0xffffffff-no-rj-mo\",\r\n            photo: \"https://vsluh.ru/uploads/2020/03/17/154154/fixed_large_b8213f97-e5d7-49ea-8085-2195204a7423.jpg\",\r\n            comments: [{userId: 3, commentId: 3, fullName: 'Байбекова Айдана', text: \"COol!\", photo: 'https://yt3.ggpht.com/a/AATXAJz96SEqjCTeAd4fIKN-cMmEeqGU26eHSkwB9JISgg=s900-c-k-c0xffffffff-no-rj-mo'}],\r\n            likesCount: 12,\r\n            CommentsCount: 1,\r\n            liked: false\r\n        },\r\n        {\r\n            id: 4,\r\n            fullName: 'Мем фром драг дилла',\r\n            title: \"Why he not me?!\",\r\n            avatar: \"https://yt3.ggpht.com/a/AATXAJw0vq_YrFUkbgA2WYAGe0upS4MeD1QJZomS4QaE=s900-c-k-c0xffffffff-no-rj-mo\",\r\n            photo: \"https://s.ura.news/images/news/upload/news/426/025/1052426025/2f82b66cdc059a737ef34fe31281c88e_760x0_700.800.0.0.jpg\",\r\n            comments: [{userId: 4, commentId: 4, fullName: 'Тастемирова Томирис', text: \"Go walk with me>\", photo: 'https://cdn.freelance.ru/img/portfolio/pics/00/3A/2C/3812566.jpg?mt=d239b33b'}],\r\n            likesCount: 1,\r\n            CommentsCount: 1,\r\n            liked: false\r\n        }\r\n    ] as Array<NewsItemType>,\r\n    stories: [\r\n        {id: 1, userId: 1, viewed: false, photo: 'https://avatars.mds.yandex.net/get-pdb/1996997/9c893ac4-b0d0-48ca-ba75-5c79bccf41f8/s375'},\r\n        {id: 2, userId: 2, viewed: false, photo: 'https://photodzen.com/content/images/lines_2_2.jpg'},\r\n        {id: 3, userId: 3, viewed: false, photo: 'https://otvet.imgsmail.ru/download/497424eb0af0d51913941be13c03b052_i-18.jpg'}\r\n    ] as Array<StoriesType>\r\n}\r\n\r\nexport type NewsInitialStateType = typeof initialState\r\n\r\n\r\nlet news_reducer = (state = initialState, action: ActionsType): NewsInitialStateType => {\r\n    \r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/News/ADD_NEW_COMMENT': {\r\n            if (action.newCommentText.length > 0){\r\n                return {\r\n                    ...state,\r\n                    news: state.news.map(item => {\r\n                        if(item.id === action.id)\r\n                            item.comments = [...item.comments, {userId: 5, fullName: 'dikushan00', commentId: 5, text: action.newCommentText, photo: ''}]\r\n                        return item\r\n                    })\r\n                }\r\n                id++;\r\n            }\r\n            return state\r\n        }\r\n\r\n        case 'SN/News/UPDATE_LIKE_COUNT': {\r\n            \r\n            return {\r\n                ...state,\r\n                news: state.news.map(item => {\r\n                    if(item.id === action.id && !item.liked){\r\n                        item.likesCount = item.likesCount + 1\r\n                        item.liked = !item.liked \r\n                    } else if(item.id === action.id && item.liked) {\r\n                        item.likesCount = item.likesCount - 1 \r\n                        item.liked = !item.liked \r\n                    }\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        case 'SN/News/UPDATE_COMMENT_COUNT': {\r\n\r\n            return {\r\n                ...state,\r\n                news: state.news.map(item => {\r\n                    if(item.id === action.id)\r\n                        item.CommentsCount++\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        case 'SN/News/VIEW_STORY': {\r\n\r\n            return {\r\n                ...state,\r\n                stories: state.stories.map((item) => {\r\n                    if(item.id === action.id)\r\n                        item.viewed = true\r\n                    return item\r\n                })\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addNewComment: (id: number, newCommentText: string) => ({type: 'SN/News/ADD_NEW_COMMENT', id, newCommentText} as const),\r\n    updateLikeCount: (id: number) => ({type: 'SN/News/UPDATE_LIKE_COUNT', id} as const),\r\n    updateCommentCount: (id: number) => ({type: 'SN/News/UPDATE_COMMENT_COUNT', id} as const),\r\n    viewStory: (id: number) => ({type: 'SN/News/VIEW_STORY', id} as const)\r\n} \r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport default news_reducer\r\n\r\n\r\ntype CommentsType = {\r\n    userId: number\r\n    commentId: number\r\n    fullName: string\r\n    text: string\r\n    photo: string\r\n}\r\n\r\nexport type StoriesType = {\r\n    id: number\r\n    userId: number\r\n    viewed: boolean\r\n    photo: string\r\n}\r\n\r\nexport type NewsItemType = {\r\n    id: number,\r\n    fullName: string,\r\n    title: string,\r\n    avatar: string,\r\n    photo: string,\r\n    comments: Array<CommentsType>,\r\n    likesCount: number,\r\n    CommentsCount: number,\r\n    liked: boolean\r\n}","import React, { useState } from 'react';\r\nimport s from './NewsItem.module.css'\r\nimport commentPhoto from '../../../img/comment2.svg'\r\nimport likesPhoto from '../../../img/heart.svg'\r\nimport commentUserPhoto from '../../../img/user22.jpg'\r\nimport likesPhotoActive from '../../../img/heart_active.svg'\r\nimport userPhoto from '../../../img/user(1).svg'\r\nimport {Element} from '../../common/FormControl/FormControl';\r\nimport { reduxForm, Field, InjectedFormProps, reset } from 'redux-form';\r\nimport {NewsItemType} from '../../../redux/news_reducer'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\nimport { actions } from '../../../redux/news_reducer';\r\n\r\nconst NewsItem: React.FC<PropsType> = ({post}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const avatarPhoto = useSelector((state: AppStateType) => state.profilePage.photos && state.profilePage.photos.large)\r\n    const [isBigMode, setBigMode] = useState(false)\r\n\r\n    let onAddComment = (data: any) => {\r\n        if(data['comment' + post.id]){\r\n            dispatch(actions.addNewComment(post.id, data['comment' + post.id]))\r\n            dispatch(actions.updateCommentCount(post.id))\r\n            dispatch(reset('commentForm'))\r\n        }\r\n    }\r\n\r\n    let onAddLike = (id: number) => {\r\n        dispatch(actions.updateLikeCount(id))\r\n    }\r\n\r\n    if(isBigMode) {\r\n        document.body.classList.add('pop_overflow')\r\n    } else {\r\n        document.body.classList.remove('pop_overflow')\r\n    }\r\n\r\n    return (\r\n        <div className={s.newsItem}>\r\n            <div className = {s.newsItemContent} onClick = {() => setBigMode(true)}>\r\n                <span style = {{display: \"flex\", alignItems: \"center\"}}>\r\n                    <span>\r\n                        {\r\n                        post.avatar \r\n                            ? <img src={post.avatar} alt=\"PHOTO\" className={s.userImg}/>\r\n                            : <img src={userPhoto} alt=\"PHOTO\" className={s.userImg}/>\r\n                        }\r\n                    </span>\r\n                    <span className={s.user}>{post.fullName}</span>\r\n                </span>\r\n                <span className={s.newsTitle}> {post.title} </span>\r\n                <div>\r\n                    <img src={post.photo} alt=\"Photo\"/>\r\n                </div>\r\n            </div>\r\n            <div className={s.reviewCount}> \r\n                <span>\r\n                {\r\n                    post.liked \r\n                    ? <img src={likesPhotoActive} alt=\"PHOTO\" className={s.reviewIcon} onClick={() => onAddLike(post.id)}/>\r\n                    : <img src={likesPhoto} alt=\"PHOTO\" className={s.reviewIcon} onClick={() => onAddLike(post.id)}/>\r\n                } {post.likesCount} \r\n                </span>\r\n                 <span> \r\n                    <img src={commentPhoto} alt=\"PHOTO\" className={s.reviewIcon}/>{post.CommentsCount} \r\n                 </span> \r\n            </div>\r\n            <CommentFormRedux onSubmit={onAddComment} id = {post.id}/>\r\n            <NewsCommentsArea post = {post} avatarPhoto = {avatarPhoto}/>\r\n            {\r\n                isBigMode && <NewsItemBigMode post = {post} avatarPhoto = {avatarPhoto} onAddLike = {onAddLike} isBigMode = {isBigMode} setBigMode = {setBigMode} onAddComment = {onAddComment} />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst NewsItemBigMode: React.FC<BigModeType> = ({post, onAddLike, isBigMode, setBigMode, onAddComment, avatarPhoto}) => {\r\n\r\n    return <>\r\n    <div id=\"overlay\" className = {isBigMode ? \"overlay\" : ''} onClick={() => setBigMode(false)}></div>\r\n    <div className = {isBigMode  ? s.BigModeArea : ''} id = {s.BigModeArea}>\r\n        <div style = {{ display: \"flex\", alignItems: \"center\"}} >\r\n            <img src={post.photo} alt=\"PHOTO\" className = {s.postImg}/>\r\n        </div>\r\n        <div className = {s.rightContent} >\r\n            <span style = {{display: \"flex\", alignItems: \"center\", height: \"60px\", borderBottom: \"1px solid #ccc\"}}>\r\n                <span>\r\n                    {\r\n                    post.avatar \r\n                        ? <img src={post.avatar} alt=\"PHOTO\" className={s.userImg}/>\r\n                        : <img src={userPhoto} alt=\"PHOTO\" className={s.userImg}/>\r\n                    }\r\n                </span>\r\n                <span className={s.user}>{post.fullName}</span>\r\n            </span>\r\n            <div className={s.reviewCount} style = {{border: 0}}> \r\n                <span>\r\n                    {\r\n                    post.liked \r\n                        ? <img src={likesPhotoActive} alt=\"PHOTO\" className={s.reviewIcon} onClick={() => onAddLike(post.id)}/>\r\n                        : <img src={likesPhoto} alt=\"PHOTO\" className={s.reviewIcon} onClick={() => onAddLike(post.id)}/>\r\n                    } {post.likesCount} \r\n                </span>\r\n            </div>\r\n            <CommentFormRedux onSubmit={ onAddComment } id = {post.id}/>\r\n            <NewsCommentsArea post = {post} avatarPhoto = {avatarPhoto}/>\r\n        </div>\r\n    </div>\r\n    <span className = {s.closeBig} onClick={() => setBigMode(false)}></span>\r\n    </>\r\n}\r\n\r\nconst NewsCommentsArea: React.FC<NewsCommentsAreaType> = ({post, avatarPhoto}) => {\r\n\r\n    return <div className={s.commentsArea}>\r\n    { post.comments.map(item => (\r\n        <div className={s.commentsItem} key={item.userId}>\r\n            {\r\n            item.photo \r\n                ? <img src={item.photo } alt=\"Photo\" className={s.commentPhoto}/>\r\n                : <img src={ avatarPhoto ? avatarPhoto : commentUserPhoto } alt=\"Photo\" className={s.commentPhoto}/>\r\n            }\r\n          <div>\r\n                <span>{item.fullName}</span>\r\n                <p style={{paddingLeft: '15px', margin: 0}}>{item.text}</p>\r\n            </div>\r\n        </div>\r\n    ))}\r\n</div>\r\n}\r\n\r\nconst Input = Element('input');\r\n\r\nconst CommentForm: React.FC<InjectedFormProps<CommentFormValuesType, CommentFormPropsType> & CommentFormPropsType> = (props) => {\r\n    return <form className={s.inputComment} onSubmit={props.handleSubmit}>\r\n        <Field placeholder='Write your comment' name={'comment'  + props.id as CommentFormValuesKeys} component = {Input}/>\r\n        <button type = 'submit' className='btn'>Send</button>\r\n    </form>\r\n}\r\n\r\nconst CommentFormRedux = reduxForm<CommentFormValuesType, CommentFormPropsType>({form: 'commentForm'})(CommentForm)\r\n\r\nexport default NewsItem;\r\n\r\n\r\n\r\ntype CommentFormValuesType = {\r\n    comment: string\r\n}\r\n\r\ntype CommentFormPropsType = {\r\n    id: number\r\n}\r\n\r\ntype NewsCommentsAreaType = {\r\n    post: NewsItemType\r\n    avatarPhoto: string | null | undefined\r\n}\r\n\r\ntype BigModeType = {\r\n    post: NewsItemType\r\n    isBigMode: boolean\r\n    avatarPhoto: string | null | undefined\r\n\r\n    onAddComment: (data: {comment: string}) => void\r\n    setBigMode: (n: boolean) => void\r\n    onAddLike: (id: number) => void\r\n}\r\n\r\ntype PropsType = {\r\n    post: NewsItemType\r\n}\r\n\r\ntype CommentFormValuesKeys = Extract<keyof CommentFormValuesType, string>","import React, { useState } from 'react';\r\nimport {StoriesType} from '../../../redux/news_reducer'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\nimport defaultUserPhoto from '../../../img/user(1).svg'\r\nimport nextPhoto from '../../../img/next.svg'\r\nimport backPhoto from '../../../img/back.svg'\r\nimport { actions } from './../../../redux/news_reducer';\r\nimport style from './Stories.module.css'\r\n\r\nconst StoriesItem: React.FC<PropsType> = React.memo(({story, index, arr}) => {\r\n\r\n    const userPhoto = useSelector((state: AppStateType) => state.profilePage.photos && state.profilePage.photos.large)\r\n    const dispatch = useDispatch()\r\n    const [isBigMode, setBigMode] = useState(false)\r\n    const [isStoryViewed, setStoryViewed] = useState(story.viewed)\r\n    const [storyPhoto, setStoryPhoto] = useState(story.photo)\r\n    const [storyIndex, setStoryIndex] = useState(index)\r\n\r\n    const imgStyles = {width: \"110px\", height: \"185px\", borderRadius: \"5px\", cursor: \"pointer\"}\r\n    const imgStyle = {width: \"43px\", borderRadius: \"50%\", border: story.viewed ? \"4px solid #ccc\" : \"4px solid #4a76a8\", cursor: \"pointer\"}\r\n\r\n    const onStoryClick = () => {\r\n        document.body.classList.add('pop_overflow')\r\n        setBigMode(true)\r\n        setStoryViewed(true)\r\n        dispatch(actions.viewStory(story.id))\r\n    }\r\n\r\n    let storyTime = setInterval(() => {}, 7000);\r\n\r\n    const changeStoryPhoto = (direction: boolean) => {\r\n        clearInterval(storyTime)\r\n        if(direction && storyIndex < arr.length - 1){\r\n            setStoryPhoto(arr[storyIndex + 1].photo)\r\n            dispatch(actions.viewStory(arr[storyIndex + 1].id))\r\n            setStoryIndex(storyIndex + 1)\r\n        } else if(!direction && storyIndex - 1 >= 0) {\r\n            setStoryPhoto(arr[storyIndex - 1].photo)\r\n            dispatch(actions.viewStory(arr[storyIndex - 1].id))\r\n            setStoryIndex(storyIndex - 1)\r\n        } else {\r\n            setBigMode(false)\r\n            setStoryIndex(0)\r\n        }\r\n    }\r\n\r\n    if(isBigMode) {\r\n        document.body.classList.add(\"pop_overflow\")\r\n        storyTime = setInterval(() => {\r\n            if(arr.length === 1 || storyIndex + 1 === arr.length) {\r\n                setBigMode(false)\r\n            } else {\r\n                changeStoryPhoto(true)\r\n            }\r\n        }, 7000)\r\n    } else {\r\n        document.body.classList.remove(\"pop_overflow\")\r\n        storyPhoto !== story.photo && setStoryPhoto(story.photo)\r\n        clearInterval(storyTime)\r\n    } \r\n\r\n    return <div style={{marginLeft: \"15px\", position: \"relative\"}}>\r\n        <img src={story.photo} alt=\"Photo\" style={imgStyles} onClick={onStoryClick} />\r\n        <div style={{position: \"absolute\", top: \"110px\", left: \"30px\"}}>\r\n            <img onClick={onStoryClick} src={userPhoto ? userPhoto : defaultUserPhoto} style = {imgStyle} alt=\"Photo\"/>\r\n        </div>\r\n        {\r\n            isBigMode && <StoryBigMode isBigMode = {isBigMode} \r\n                                        setBigMode = {setBigMode} \r\n                                        storyPhoto = {storyPhoto} \r\n                                        changeStoryPhoto = {changeStoryPhoto}\r\n                                        storyId = {storyIndex} \r\n                                        key={storyIndex} />\r\n        }\r\n    </div>\r\n})\r\n\r\nconst StoryBigMode: React.FC<BigModeType> = React.memo(({isBigMode, setBigMode, storyPhoto, changeStoryPhoto, storyId}) => {\r\n\r\n    return <div>\r\n    <div id=\"overlay\" className = {isBigMode  ? \"overlay\" : ''} onClick={() => setBigMode(false)}></div>\r\n    <div id=\"magnify\" className={isBigMode ? \"magnify\" : ''}>\r\n        <img src={ storyPhoto } alt=\"Photo\" className={style.centerStory} />\r\n        <img src={backPhoto} onClick={() => changeStoryPhoto(false)} alt=\"Back\" style={{width: \"35px\", position: \"fixed\", top: \"50px\", left: \"570px\", zIndex: 10000, cursor: \"pointer\"}} />\r\n        <img src={nextPhoto} onClick={() => changeStoryPhoto(true)} alt=\"Next\" style={{width: \"35px\", position: \"fixed\", top: \"50px\", right: \"560px\", zIndex: 10000, cursor: \"pointer\"}} />\r\n        <span className=\"popupLayer\" id = {'' + storyId}/>\r\n        <div id=\"close-popup\" onClick={() => {setBigMode(false); document.body.classList.remove('pop_overflow')}}><i></i></div>\r\n    </div>\r\n</div>\r\n})\r\n\r\nexport default StoriesItem\r\n\r\n\r\ntype PropsType = {\r\n    story: StoriesType\r\n    index: number\r\n    arr: Array<StoriesType>\r\n    key: number\r\n}\r\n\r\ntype BigModeType = {\r\n    isBigMode: boolean\r\n    storyPhoto: string\r\n    storyId: number\r\n    setBigMode: (isMode: boolean) => void\r\n    changeStoryPhoto: (direction: boolean) => void\r\n}","import React from 'react';\r\nimport StoriesItem from './StoriesItem';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\n\r\nconst Stories = () => {\r\n    \r\n    const stories = useSelector((state: AppStateType) => state.newsPage.stories)\r\n\r\n    return <div className = \"pageArea\" style ={{display: \"flex\", padding: \"10px 15px\"}}>\r\n        {\r\n            stories.map((item, index, arr) => {\r\n                return <StoriesItem story = {item} index = {index} arr = {arr} key={item.id}/>\r\n            })\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Stories\r\n","import React from 'react';\r\nimport NewsItem from \"./newsItem/NewsItem\";\r\nimport s from './News.module.css'\r\nimport Stories from './Stories/Stories';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\nconst News: React.FC = () => {\r\n\r\n    const newsState = useSelector((state: AppStateType) => state.newsPage)\r\n    \r\n    return (\r\n        <div className={s.newsWrap}>\r\n            <Stories />\r\n            <div className={s.postArea}>\r\n                {newsState.news.map(post => (\r\n                    <NewsItem post={post}\r\n                             key={post.id}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport News from \"./News\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect\r\n)(News)\r\n\r\n","import { faPause, faPlay, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../redux/store-redux'\r\nimport { actions } from './../../redux/music_reducer';\r\nimport './../Music/Music.css'\r\n\r\nconst MusicPlayer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const playing = useSelector((state: AppStateType) => state.music.playing)\r\n    const currentSong = useSelector((state: AppStateType) => state.music.currentSong)\r\n    const random = useSelector((state: AppStateType) => state.music.random)\r\n    const songs = useSelector((state: AppStateType) => state.music.songs)\r\n    const repeat = useSelector((state: AppStateType) => state.music.repeat)\r\n    const currentTimeState = useSelector((state: AppStateType) => state.music.currentTime)\r\n\r\n    const audio = useRef('audio_tag');\r\n\r\n    const [statevolum, setStateVolum] = useState(0.3)\r\n    const [dur, setDur] = useState(0)\r\n    const [currentTime, setCurrentTime] = useState(currentTimeState)\r\n\r\n    const SetCurrent = (id: number) => {\r\n        dispatch(actions.SetCurrent(id))\r\n    }\r\n    // Prev song\r\n    const prevSong = () => {\r\n        if (currentSong === 0) {\r\n            SetCurrent(songs.length - 1)\r\n        } else {\r\n            SetCurrent(currentSong - 1)\r\n        }\r\n    }\r\n    // Next song\r\n    const nextSong = () => {\r\n        if (currentSong === songs.length - 1) {\r\n            SetCurrent(0)\r\n        } else {\r\n            SetCurrent(currentSong + 1)\r\n        }\r\n    }\r\n\r\n    const handleEnd = () => {\r\n        // Check for random and repeat options\r\n        if (random) {\r\n            return dispatch({ type: 'SET_CURRENT_SONG', data: ~~(Math.random() * songs.length) })\r\n        } else {\r\n            if (repeat) {\r\n                nextSong()\r\n            } else if ((currentSong === songs.length - 1)) {\r\n                return\r\n            } else {\r\n                nextSong();\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleUpdateTime = (e: any) => {\r\n        setCurrentTime(e.target.currentTime)\r\n        dispatch(actions.updateCurrentTime(currentTime))\r\n    }\r\n\r\n    const togglePlaying = () => {\r\n        dispatch(actions.togglePlaying())\r\n    }\r\n    //@ts-ignore\r\n    const toggleAudio = () => audio.current.paused ? audio.current.play() : audio.current.pause();\r\n\r\n    useEffect(() => {\r\n        //@ts-ignore\r\n        audio.current.volume = statevolum;\r\n        //@ts-ignore\r\n        audio.current.currentTime = currentTime\r\n        if (playing) { toggleAudio() }\r\n    }, [currentSong])\r\n\r\n    useEffect(() => {\r\n        setCurrentTime(currentTimeState)\r\n        //@ts-ignore\r\n        audio.current.currentTime = currentTime\r\n    }, [currentTimeState])\r\n\r\n    return <div style = {{display: \"flex\", justifyContent: \"left\"}}>\r\n        <audio\r\n                //@ts-ignore\r\n                onTimeUpdate={(e) => handleUpdateTime(e)}\r\n                //@ts-ignore\r\n                onCanPlay={(e) => setDur(e.target.duration)}\r\n                onEnded={handleEnd}\r\n                //@ts-ignore\r\n                ref={audio}\r\n                type=\"audio/mpeg\"\r\n                preload='true'\r\n                src={songs[currentSong][1]} />\r\n        <div className=\"musicControls\">\r\n                <span className=\"prev\" onClick={prevSong}><FontAwesomeIcon icon={faStepBackward} /></span>\r\n                <span className=\"play\" onClick={() => { togglePlaying(); toggleAudio(); }}>\r\n                    <span className={!playing ? '' : 'hide'}><FontAwesomeIcon icon={faPlay} /></span>\r\n                    <span className={!playing ? 'hide' : ''}><FontAwesomeIcon icon={faPause} /></span>\r\n                </span>\r\n\r\n                <span className=\"next\" onClick={nextSong}><FontAwesomeIcon icon={faStepForward} /></span>\r\n        </div>\r\n        <span className=\"song\">{songs[currentSong][0]}</span>\r\n    </div>\r\n}\r\n\r\nexport default MusicPlayer","import { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport photoUser from '../../img/user.svg'\r\nimport { AppStateType } from '../../redux/store-redux'\r\nimport { UserType } from '../../Types/Types'\r\n\r\nconst HeaderSearchForm = () => {\r\n\r\n    const friends = useSelector((state: AppStateType) => state.usersPage.friends)\r\n    const [searchFriends, setSearchFriends] = useState([])\r\n    const [isFocuced, setIsFocused] = useState(false)\r\n\r\n    const submit = (values: FormValuesType, {setSubmitting} : {setSubmitting: (isSubmitting: boolean) => void}) => {\r\n        setSubmitting(false)\r\n        let searchFriends  = friends.filter((item: UserType) => {\r\n            return item.name && item.name.toLowerCase().includes(values.fullName)\r\n        }) as Array<UserType>\r\n        //@ts-ignore\r\n        setSearchFriends(searchFriends)\r\n        console.log(values.fullName)\r\n        console.log(searchFriends)\r\n    }\r\n\r\n    const toggleFocus = () => {\r\n        const flag = !isFocuced\r\n        setIsFocused(flag)\r\n    }\r\n\r\n    function onClickClose(elem: HTMLElement) {\r\n        function outsideClickListener(event: any) {\r\n            if (elem && !elem.contains(event.target) && isVisible(elem)) { \r\n                setIsFocused(false)\r\n                 document.removeEventListener('click', outsideClickListener);\r\n            }\r\n        }\r\n        document.addEventListener('click', outsideClickListener)\r\n    }\r\n    \r\n    document.addEventListener(\"click\", () => {  \r\n        const accountDrop = document.getElementById(\"subResulSearch\"); \r\n        //@ts-ignore\r\n        onClickClose(accountDrop)\r\n    })\r\n\r\n    function isVisible(elem: HTMLElement) {\r\n        return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\r\n    }\r\n\r\n    return <div style = {{position: \"relative\"}}>\r\n        <Formik\r\n            initialValues =  {{\r\n                fullName: \"\",\r\n            }}\r\n            onSubmit = {submit}>\r\n            {\r\n                ({values, handleChange, submitForm}) => (\r\n                <Form style = {{position: \"relative\"}}>\r\n                    <Field type = \"text\" name = \"fullName\" autocomplete=\"off\" onFocus = {toggleFocus} placeholder = \"Enter name...\" value = {values.fullName} onChange = {(e: any) => {handleChange(e); setTimeout(submitForm, 0)}} style = {{borderRadius: \"20px\", border: \"1px\", outline: \"none\", height: \"22px\", padding: \"5px 19px\"}}/>\r\n                    <FontAwesomeIcon icon = {faSearch} style = {{position: \"absolute\", top: \"8px\", right: \"12px\", color: \"#4a76a8\"}}/>\r\n                </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        {\r\n            searchFriends.length > 0 && isFocuced && \r\n                <div id = \"subResulSearch\" onClick = {() => setTimeout(() => setIsFocused(false), 100) } style = {{display: \"flex\", flexDirection: \"column\", border: \"1px solid #ccc\", width: \"196px\", borderRadius: \"5px\", position: \"absolute\", top: \"36px\", background: \"#fff\", padding: \"20px\", zIndex: 1005}}>\r\n                        {searchFriends.map((item, index) => {\r\n                            if(index < 7){\r\n                                return <div style = {{display: \"flex\", height: \"30px\", marginTop: \"10px\"}}>\r\n                                {/*@ts-ignore */}\r\n                                    {<NavLink to={`/profile/${item.id}`}>\r\n                                        {/*@ts-ignore */}\r\n                                        <img src={item.photos.large ? item.photos.large : photoUser} style = {{width: \"25px\", height: \"25px\", margin: 0, borderRadius: \"50%\"}} alt=\"PHOTOS\"/>\r\n                                        {/*@ts-ignore */}\r\n                                        <span style = {{marginLeft: \"15px\"}}>{item.name}</span>\r\n                                    </NavLink>}\r\n                                </div>}\r\n                        })}\r\n                    </div> \r\n        }    \r\n    </div>\r\n}\r\n\r\nexport default HeaderSearchForm\r\n\r\ntype FormValuesType = {\r\n    fullName: string\r\n}","import React, { useState } from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from '../../img/user(1).svg'\r\nimport logoImg from '../../img/logo.png'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/store-redux';\r\nimport { logoutMe } from '../../redux/header_reducer';\r\nimport MusicPlayer from './MusicPlayer';\r\nimport HeaderSearchForm from './HeaderSearchForm';\r\n\r\nconst Header: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n    const photos = useSelector((state: AppStateType) => state.profilePage.photos)\r\n    const login = useSelector((state: AppStateType) => state.auth.login)\r\n    const [isLogInfoMode, setLogInfoMode] = useState(false)\r\n\r\n    const logout = () => {\r\n        dispatch(logoutMe())\r\n    }\r\n\r\n    function onClickClose(elem: HTMLElement) {\r\n        function outsideClickListener(event: any) {\r\n            if (elem && !elem.contains(event.target) && isVisible(elem)) { \r\n                setLogInfoMode(false)\r\n                 document.removeEventListener('click', outsideClickListener);\r\n            }\r\n        }\r\n        document.addEventListener('click', outsideClickListener)\r\n    }\r\n    \r\n    document.addEventListener(\"click\", () => {  \r\n        const accountDrop = document.getElementById(\"accountDrop\"); \r\n        //@ts-ignore\r\n        onClickClose(accountDrop)\r\n    })\r\n\r\n    function isVisible(elem: HTMLElement) {\r\n        return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\r\n    }\r\n\r\n    return <header className={s.header}>\r\n        <NavLink className=\"logo\" to='/'><img src={logoImg} /></NavLink>\r\n        <HeaderSearchForm />\r\n        <MusicPlayer />\r\n        <div className={s.authArea} id=\"Drop\" style={{height: \"100%\"}}>\r\n            { isAuth\r\n                ? <div className={s.accountInfo} onClick = {() => setLogInfoMode(true)}>\r\n                    { photos \r\n                        ? photos.large && <img src={photos.large} className={s.userImg}/> \r\n                        : <img src={userPhoto} className={s.userImg}/>}\r\n                    {login}\r\n                    {\r\n                        isLogInfoMode \r\n                        && <div className={s.accountDrop} id=\"accountDrop\">\r\n                            <NavLink to=\"/profile\" className={s.login}>{login}</NavLink>\r\n                            <button onClick={logout} className = \"btn\" style={{marginTop: \"15px\"}}>logout</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                : <NavLink to=\"/login\">Login</NavLink> }\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = () => {\r\n\r\n    return <Header />\r\n}\r\n\r\nexport default HeaderContainer","import {checkAuthMe} from \"./header_reducer\";\r\nimport {check_auth_me} from \"./profile_reducer\";\r\nimport {getFriends} from '../redux/users_reducer'\r\nimport { InferActionsTypes, ThunkType } from \"./store-redux\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nlet app_reducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/APP/INIT': {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initialize: () => ({type: 'SN/APP/INIT'} as const)\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\ntype GetThunkType = ThunkType<ActionsType>\r\n\r\nexport const init = (): GetThunkType => async (dispatch) => {\r\n    let promise = dispatch(checkAuthMe())\r\n    let promise2 = dispatch(getFriends)\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(check_auth_me())\r\n        })\r\n        .then(()=> {\r\n            dispatch(getFriends())\r\n            dispatch(actions.initialize());\r\n        })\r\n}\r\n\r\nexport default app_reducer","\r\nlet initialState = {\r\n    navData: [\r\n        {\r\n            \"id\": 1,\r\n            \"href\": \"News\",\r\n            \"name\": \"News\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/3158/3158703.svg\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"href\": \"profile\",\r\n            \"name\": \"Profile\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/1077/1077114.svg\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"href\": \"dialogs\",\r\n            \"name\": \"Message\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/2462/2462719.svg\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"href\": \"music\",\r\n            \"name\": \"Music\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/876/876817.svg\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"href\": \"users\",\r\n            \"name\": \"Users\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/681/681494.svg\"\r\n        },\r\n        {\r\n            \"id\": 6,\r\n            \"href\": \"settings\",\r\n            \"name\": \"Settings\",\r\n            \"photo\": \"https://image.flaticon.com/icons/svg/889/889744.svg\"\r\n        }\r\n    ] as Array<NavDataItemType>\r\n}\r\n\r\nexport type NavbarInitialStateType = typeof initialState\r\n\r\nlet navbar_reducer = (state = initialState, action: any):NavbarInitialStateType => {\r\n\r\n    return state\r\n}\r\n\r\nexport default navbar_reducer\r\n\r\nexport type NavDataItemType = {\r\n    id: number\r\n    href: string\r\n    name: string\r\n    photo: string\r\n}\r\n","import dialogs_reducer from \"./dialogs_reducer\";\r\nimport profile_reducer from \"./profile_reducer\";\r\nimport navbar_reducer from \"./navbar_reducer\";\r\nimport {applyMiddleware, combineReducers, createStore, compose, Action} from 'redux'\r\nimport news_reducer from \"./news_reducer\";\r\nimport users_reducer from \"./users_reducer\";\r\nimport header_reducer from \"./header_reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport thunkMiddleWare from 'redux-thunk'\r\nimport app_reducer from \"./app_reducer\";\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport music_reducer from \"./music_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogPage: dialogs_reducer,\r\n    profilePage: profile_reducer,\r\n    navbar: navbar_reducer,\r\n    newsPage: news_reducer,\r\n    usersPage: users_reducer,\r\n    auth: header_reducer,\r\n    app: app_reducer,\r\n    music: music_reducer,\r\n    form: formReducer\r\n})\r\n\r\ntype RootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type InferActionsTypes<T extends {[key: string]: (...args: any[])=>any}> = ReturnType<PropertiesTypes<T>>\r\n\r\nexport type ThunkType<A extends Action> = ThunkAction<Promise<void>, AppStateType, unknown, A >\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspens = (Component: React.ComponentType) => {\r\n\r\n    return (props: any) => {\r\n\r\n        return <React.Suspense fallback={<Preloader />}><Component {...props}/></React.Suspense>\r\n    }\r\n\r\n}","import React, {useEffect, useState, ChangeEvent} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\nimport { updateStatus } from './../../../redux/profile_reducer';\r\n\r\nconst ProfileStatusWithHooks: React.FC = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const statusWord = useSelector((state: AppStateType) => state.profilePage.status)\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(statusWord)\r\n\r\n    useEffect( () => {\r\n        setStatus(status)\r\n    }, [status] )\r\n\r\n    const toggleEditMode = () => {\r\n        setEditMode(!editMode)\r\n        if (editMode) dispatch(updateStatus(status))\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return <div>\r\n        { editMode\r\n            ? <input onChange={onStatusChange} autoFocus={true} onBlur={toggleEditMode} type=\"text\" value={status}/>\r\n            : <span onDoubleClick={toggleEditMode} style = {{cursor: \"pointer\"}}>{status || 'Напишите немного о себе'}</span>}\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, { useState } from 'react';\r\nimport { reduxForm, Field, InjectedFormProps } from 'redux-form';\r\nimport { Element } from '../../common/FormControl/FormControl';\r\nimport style from '../../common/FormControl/FormControl.module.css'\r\nimport  s from './ProfileInfo.module.css'\r\nimport { SaveProfileType } from '../../../Types/Types';\r\n\r\nconst Input = Element('input')\r\nconst Textarea1 = Element('textarea')\r\nconst Textarea2 = Element('textarea')\r\nconst Checkbox = Element('input')\r\n\r\ntype LoginFormValuesKeys = Extract<keyof ProfileFormValuesType, string>\r\n\r\nconst ProfileDataForm: React.FC<PropsType & InjectedFormProps<ProfileFormValuesType, PropsType>> = (props) => {\r\n    return <form onSubmit = {props.handleSubmit} style={{position:'relative'}}>\r\n        <button className={'btn ' + s.btn}>Save</button>\r\n        {props.error && <div className={style.commonError}>{props.error}</div>}\r\n        <span>{props.profile.fullName}</span>\r\n        <div>\r\n            <b>About me: </b>\r\n            <Field placeholder='about me..' name='aboutMe' component={Textarea1}/>\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            <span><Field placeholder='Looking for a job..' name='lookingForAJob' component={Checkbox} type='checkbox' /></span>\r\n        </div>\r\n        <div>\r\n            <b>My work skills: </b>\r\n            <Field placeholder='description..' name='lookingForAJobDescription' component={Textarea2}/>\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: { props.profile.contacts && Object.keys(props.profile.contacts).map(key => {\r\n                return <Field key={key} placeholder={key} name={'contacts.' + key} component = {Input}/>})}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport const ProfileDataFormRedux = reduxForm<ProfileFormValuesType, PropsType>({form: 'editProfileData'})(ProfileDataForm)\r\n\r\n\r\ntype PropsType = {\r\n    handleSubmit: () => {}\r\n    error: string\r\n    profile: SaveProfileType\r\n}\r\nexport type ProfileFormValuesType = {\r\n    aboutMe: string\r\n    lookingForAJobDescription: string\r\n    lookingForAJob: boolean\r\n}","\r\n\r\nexport const base64StringtoFile = (base64String: string, filename: string) => {\r\n    if(base64String && base64String.length && base64String.length > 0){\r\n        var arr = base64String.split(','),\r\n        //@ts-ignore\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), n = bstr.length, \r\n        u8arr = new Uint8Array(n)\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n)\r\n      }\r\n      return new File([u8arr], filename, {type: mime})\r\n    }\r\n  }\r\n\r\n    \r\nexport const getCroppedImg = (image: HTMLImageElement, crop: ReactCrop.Crop, fileName: string) => {\r\n  const canvas = document.createElement('canvas');\r\n  const scaleX = image.naturalWidth / image.width;\r\n  const scaleY = image.naturalHeight / image.height;\r\n  canvas.width = crop.width;\r\n  canvas.height = crop.height;\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  ctx && ctx.drawImage(\r\n    image,\r\n    crop.x * scaleX,\r\n    crop.y * scaleY,\r\n    crop.width * scaleX,\r\n    crop.height * scaleY,\r\n    0,\r\n    0,\r\n    crop.width,\r\n    crop.height\r\n  )\r\n\r\n  return new Promise((resolve, reject) => {\r\n      canvas.toBlob(blob => {\r\n        if (!blob) {\r\n          console.error('Canvas is empty');\r\n          return;\r\n        }\r\n        //@ts-ignore\r\n        blob.name = fileName; \r\n        let reader = new FileReader()\r\n        reader.readAsDataURL(blob) \r\n        reader.onload = function() {\r\n        const myFilename = \"previewFile.jpg\"\r\n        //@ts-ignore\r\n        const croppedImageFile = base64StringtoFile(reader.result, myFilename)\r\n        const croppedImageUrl = window.URL.createObjectURL(blob)\r\n        let newCropObject = {\r\n          croppedImageFile,\r\n          croppedImageUrl\r\n        }\r\n        resolve(newCropObject);\r\n        };\r\n      }, 'image/jpeg');\r\n    });\r\n}\r\n\r\nexport const downloadCroppedImg = (url: string) => {\r\n  var a = document.createElement('a')\r\n  a.href = url\r\n  a.download = 'avatar.jpeg'\r\n  document.body.appendChild(a);\r\n  a.click();\r\n  document.body.removeChild(a);\r\n}","import React from 'react'\r\nimport Dropzone from 'react-dropzone'\r\nimport  s from './ProfileInfo.module.css'\r\n\r\nconst DropzoneAva: React.FC<PropsType> = ({setIsLoadImg, setSrc}) => {\r\n\r\n    const handleDrop = (files: any, rejectedFiles: any) => {\r\n        if(files && files.length > 0){\r\n            setIsLoadImg(true)\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () =>\r\n                setSrc( reader.result )\r\n            );\r\n            reader.readAsDataURL(files[0]);\r\n        }\r\n    }\r\n\r\n    return <Dropzone onDrop={handleDrop} multiple = {false} accept = {\"image/*\"} maxSize={8000000}>\r\n        {({ getRootProps, getInputProps }) => (\r\n            <div {...getRootProps()} className = {s.dropzone}>\r\n                <p>Drop files here, or click to select files</p>\r\n                <input {...getInputProps()} />\r\n            </div>\r\n        )}\r\n  </Dropzone>\r\n\r\n}\r\n\r\nexport default DropzoneAva\r\n\r\n\r\ntype PropsType = {\r\n    setIsLoadImg: (b: boolean) => void\r\n    setSrc: (url: string | ArrayBuffer | null) => void\r\n}","import  s from './ProfileInfo.module.css'\r\nimport photoUser from '../../../img/user.svg'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\nimport  React, { useState } from 'react';\r\nimport { getCroppedImg } from '../../utils/Validators/cropImgFunctions';\r\nimport  ReactCrop  from 'react-image-crop';\r\nimport DropzoneAva from './DropzoneAva';\r\n\r\nconst AvatarPhoto: React.FC<PropsType> = ({avatar, fullName, isOwner, updatePhoto}) => {\r\n\r\n    const [isBigMode, setBigMode] = useState(false)\r\n\r\n    if(isBigMode) {\r\n        document.body.classList.add('pop_overflow')\r\n    } else {\r\n        document.body.classList.remove('pop_overflow')\r\n    }\r\n\r\n    return <div className={s.avaArea}>\r\n        <img src={ avatar || photoUser } alt=\"photo\" className={s.avaImg} onClick = {() => setBigMode(true)}/>\r\n        <span className = {s.avaHover}>\r\n            <FontAwesomeIcon icon={faSearch} onClick = {() => setBigMode(true)}/> \r\n        </span>\r\n        {\r\n            isBigMode \r\n                && <AvatarBigMode \r\n                    isBigMode = {isBigMode} \r\n                    setBigMode = {setBigMode} \r\n                    avatarPhoto = {avatar} \r\n                    fullName = {fullName} \r\n                    isOwner = {isOwner}\r\n                    updatePhoto = {updatePhoto}/>\r\n        }\r\n    </div>\r\n}\r\n\r\nconst AvatarBigMode: React.FC<BigModeType> = ({ isBigMode, setBigMode, avatarPhoto, fullName, isOwner, updatePhoto}) => {\r\n    \r\n    const [imageRef, setImageRef] = useState(null as null | HTMLImageElement)\r\n    const [isLoadImg, setIsLoadImg] = useState(false)\r\n    const [src, setSrc] = useState(null as string | ArrayBuffer | null)\r\n    const [croppedObject, setCroppedObject] = useState({\r\n            croppedImageFile: null as null | File,\r\n            croppedImageUrl: '',\r\n        } as CroppedImgType | null)\r\n    const [crop, setCrop] = useState({\r\n          unit: \"%\" as \"%\" | \"px\" | undefined,\r\n          width: 30,\r\n          height: 30,\r\n          x: 0,\r\n          y: 0,\r\n          aspect: 1 / 1 as number\r\n        })\r\n\r\n    const onImageLoaded = (image: HTMLImageElement) => {\r\n        setImageRef(image)\r\n      };\r\n    \r\n    const onCropComplete = (crop: ReactCrop.Crop) => {\r\n      makeClientCrop(crop);\r\n    };\r\n  \r\n    const onCropChange = (crop: ReactCrop.Crop) => {\r\n        //@ts-ignore\r\n        setCrop( crop );\r\n      };\r\n    \r\n    const makeClientCrop = async (crop: ReactCrop.Crop) => {\r\n        if (imageRef && crop.width && crop.height) {\r\n          const croppedObject = await getCroppedImg(\r\n            imageRef,\r\n            crop,\r\n            'newFile.jpeg'\r\n          )\r\n          \r\n          //@ts-ignore\r\n          setCroppedObject( croppedObject );\r\n        }\r\n      }\r\n\r\n    const updatePhotoCrop = () => {\r\n        croppedObject && croppedObject.croppedImageFile && updatePhoto(croppedObject.croppedImageFile)\r\n        setIsLoadImg(false)\r\n        refreshInputArea()\r\n    }\r\n\r\n    const refreshInputArea = () => {\r\n      setSrc(null)\r\n      setCroppedObject(null)\r\n      setIsLoadImg(true)\r\n    }\r\n\r\n    return <div>\r\n    <div id=\"overlay\" className = {isBigMode ? \"overlay\" : ''} onClick={() => setBigMode(false)}></div>\r\n    <div className = {isBigMode  ? s.BigModeArea : ''} id = {s.BigModeArea}>\r\n        <div>\r\n            <h3>Текущее фото: </h3>\r\n            <img src={avatarPhoto ? avatarPhoto : photoUser} alt=\"PHOTO\" />\r\n        </div>\r\n        <div className = {s.rightContent} >\r\n            <span style = {{display: \"flex\", alignItems: \"center\", height: \"60px\", borderBottom: \"1px solid #ccc\"}}>\r\n                <img src={avatarPhoto ? avatarPhoto : photoUser} alt=\"PHOTO\" className = {s.postImg} />\r\n                <span className={s.user}>{fullName}</span>\r\n            </span>\r\n            <span className = {s.closeBig} onClick={() => setBigMode(false)}></span>\r\n            {isOwner \r\n                && <div>\r\n                    <span>Изменить фото: </span>\r\n                    <DropzoneAva setIsLoadImg = {setIsLoadImg} setSrc = {setSrc} />\r\n                </div> \r\n            }\r\n            { \r\n                src && isLoadImg && <div>\r\n                    <ReactCrop\r\n                    //@ts-ignore\r\n                        src={src}\r\n                        crop={crop}\r\n                        ruleOfThirds\r\n                        onImageLoaded={onImageLoaded}\r\n                        onComplete={onCropComplete}\r\n                        onChange={onCropChange}\r\n                />\r\n                {   croppedObject && croppedObject.croppedImageUrl && \r\n                    //@ts-ignore\r\n                    <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedObject.croppedImageUrl} />\r\n                }\r\n                <button onClick = {() => updatePhotoCrop()}> Send </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    </div>\r\n    </div>\r\n}\r\n\r\nexport default AvatarPhoto\r\n\r\ntype PropsType = {\r\n    avatar: string | null\r\n    fullName: string\r\n    isOwner: boolean\r\n\r\n    updatePhoto: (file: File) => void\r\n}\r\n\r\ntype BigModeType = {\r\n    isBigMode: boolean\r\n    avatarPhoto: string | null | undefined\r\n    fullName: string\r\n    isOwner: boolean\r\n\r\n    setBigMode: (n: boolean) => void\r\n    updatePhoto: (file: File) => void\r\n}\r\n\r\ntype CroppedImgType = {\r\n    croppedImageFile: null | File\r\n    croppedImageUrl: string\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAddressBook } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons'\r\nimport { faBriefcase } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { ProfileType } from '../../../Types/Types'\r\nimport  s from './ProfileInfo.module.css'\r\n\r\nconst ProfileData: React.FC<ProfileDataType> = ({profile, ...props}) => {\r\n\r\n    return <div style={{position: 'relative'}} className={s.profileData}>\r\n        {props.isOwner && <button onClick = {props.onEditMode} className = {s.editBtn + ' ' + s.btn}/>}\r\n        <div style={{display:'flex'}}>\r\n            <span className={s.infoKey}> \r\n                <FontAwesomeIcon icon={faStickyNote} /> \r\n                About me: \r\n            </span>\r\n            <span className={s.infoValue}>{profile.aboutMe}</span></div>\r\n        <div style={{display:'flex'}}> \r\n            <span className={s.infoKey}> \r\n                <FontAwesomeIcon icon={faCheck} /> \r\n                Looking for a job: \r\n            </span>\r\n            <span className={s.infoValue}>{profile.lookingForAJob ? 'yes' : 'no'}</span>\r\n        </div>\r\n        {profile.lookingForAJob \r\n            && <div style={{display:'flex'}}>\r\n                <span className={s.infoKey}>\r\n                    <FontAwesomeIcon icon={faBriefcase} /> \r\n                    My work skills:\r\n                </span>\r\n                <span className={s.infoValue}>\r\n                {profile.lookingForAJob && profile.lookingForAJobDescription}</span>\r\n            </div>}\r\n        <div>\r\n            <span className={s.infoKey}> <FontAwesomeIcon icon={faAddressBook} /> Contacts </span>: \r\n            {\r\n            profile.contacts && Object\r\n                .keys(profile.contacts)\r\n                .map(key => {\r\n                    //@ts-ignore\r\n                    return profile.contacts[key as keyof ContactsType] \r\n                        && <Contact key={key} \r\n                                    className={s.infoValue} \r\n                                    contactTitle={key} \r\n                                    //@ts-ignore\r\n                                    contactValue={profile.contacts[key as keyof ContactsType]} />\r\n            })\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact: React.FC<ContactType> = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><span className={s.infoKey}>{contactTitle}:</span> <a href={contactValue}>{contactValue}</a></div>\r\n}\r\n\r\nexport default ProfileData\r\n\r\n\r\ntype ProfileDataType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n\r\n    onEditMode: () => void\r\n}\r\n\r\ntype ContactType = { \r\n    contactTitle: string\r\n    contactValue: string\r\n    className: string\r\n}","import React, { useState } from 'react';\r\nimport  s from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {ProfileDataFormRedux} from \"./ProfileDataForm\"\r\nimport {SaveProfileType} from '../../../Types/Types';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport AvatarPhoto from './AvatarPhoto';\r\nimport ProfileData from './ProfileData';\r\nimport photoUser from '../../../img/user.svg'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\nimport { saveProfile, updatePhoto } from './../../../redux/profile_reducer';\r\nimport { follow, unfollow } from '../../../redux/users_reducer';\r\n\r\nconst ProfileInfo:React.FC<PropsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [editMode, setEditMode] = useState(false)\r\n    const isFetching = useSelector((state: AppStateType) => state.profilePage.isFetching)\r\n    const profile = useSelector((state: AppStateType) => state.profilePage.profile)\r\n    const friends = useSelector((state: AppStateType) => state.usersPage.friends)\r\n    const toggleProgressArr = useSelector((state: AppStateType) => state.usersPage.toggleProgressArr)\r\n\r\n    const onSubmit = (data: SaveProfileType) => {\r\n        dispatch(saveProfile(data))\r\n        setEditMode(false)\r\n    }\r\n        if (!profile || isFetching){\r\n            return <Preloader />\r\n        }\r\n\r\n    const switch_follow = (followed: boolean, userId: number) => {\r\n        if (followed) {\r\n            dispatch(unfollow(userId))\r\n        } else {\r\n            dispatch(follow(userId))\r\n        }\r\n    }\r\n\r\n        return (<div>\r\n            <div className={s.descriptionBlock}>\r\n                <div style={{display:'flex'}}>\r\n                    {\r\n                        props.isOwner \r\n                            ? <AvatarPhoto \r\n                                avatar = {profile.photos.large} \r\n                                fullName = {profile.fullName} \r\n                                isOwner = {props.isOwner}\r\n                                updatePhoto = {updatePhoto}/>\r\n                                //@ts-ignore\r\n                            : <img src = {profile.photos.large ? profile.photos.large : photoUser} className = {s.avaImg} alt=\"PHOTO\"/>\r\n                    }\r\n                    <div style={{marginLeft:\"20px\"}}>\r\n                        <p><b>{profile.fullName || 'unknown user '}</b></p>\r\n                        <ProfileStatusWithHooks />\r\n                    </div>\r\n                </div>\r\n                {\r\n                editMode \r\n                //@ts-ignore\r\n                    ? <ProfileDataFormRedux initialValues = {profile} profile = {profile} onSubmit = {onSubmit}/>\r\n                    : <ProfileData profile = {profile} onEditMode = {() => setEditMode(true)} isOwner={props.isOwner}/>\r\n                }\r\n                {\r\n                    !props.isOwner\r\n                        && friends.some(item => { return profile && item.id === profile.userId})\r\n                        ? <button className={s.btnFollow + ' ' + (s.btnRed)} onClick={() => switch_follow(true, profile && profile.userId)}\r\n                                    disabled={toggleProgressArr.some(id => profile && id === profile.userId)} key = {profile.userId}> Unfollow\r\n                                </button>\r\n                        : !props.isOwner && <button className={s.btnFollow + ' ' + (s.btnBlue)} onClick={() => switch_follow(false, profile && profile.userId)}\r\n                                    disabled={toggleProgressArr.some(id => profile && id === profile.userId)} key = {profile.userId}> Follow\r\n                                </button>\r\n                }\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n}","import React, { useReducer } from 'react'\r\nimport sNews from '../../../News/newsItem/NewsItem.module.css'\r\nimport commentUserPhoto from '../../../../img/user22.jpg'\r\nimport {PostItemType} from \"../../../../redux/profile_reducer\";\r\nimport { AppStateType } from '../../../../redux/store-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\n\r\ntype PropsType = {\r\n    post: PostItemType\r\n    avatarPhoto: string | null | undefined\r\n}\r\nconst CommentsArea: React.FC<PropsType> = (props) => {\r\n\r\n    return <div className={sNews.commentsArea}>\r\n    { props.post.comments.map(item => (\r\n        <div className={sNews.commentsItem} key={item.userId}>\r\n            {\r\n            item.photo \r\n                ? <img src={item.photo} alt=\"Photo\" className={sNews.commentPhoto}/>\r\n                : <img src={ props.avatarPhoto ?  props.avatarPhoto : commentUserPhoto} alt=\"Photo\" className={sNews.commentPhoto}/>\r\n            }\r\n            <div>\r\n                <span>{item.fullName}</span>\r\n                <p style={{paddingLeft: '15px', margin: 0}}>{item.text}</p>\r\n            </div>\r\n        </div>\r\n    ))}\r\n</div>\r\n}\r\n\r\nexport default CommentsArea","import React from 'react'\r\nimport sNews from '../../../News/newsItem/NewsItem.module.css'\r\nimport commentPhoto from '../../../../img/comment2.svg'\r\nimport likesPhoto from '../../../../img/heart.svg'\r\nimport likesPhotoActive from '../../../../img/heart_active.svg'\r\nimport {PostItemType} from \"../../../../redux/profile_reducer\";\r\n\r\ntype PropsType = {\r\n    onAddLike: (id: number) => void\r\n    id: number\r\n    post: PostItemType\r\n}\r\nconst ReviewArea: React.FC<PropsType> = ({onAddLike, id, ...props}) => {\r\n\r\n    return <div className={sNews.reviewCount}> \r\n    <span>\r\n        {\r\n        props.post.liked \r\n        ? <img src={likesPhotoActive} alt=\"PHOTO\" className={sNews.reviewIcon} onClick={() => onAddLike(id)}/>\r\n        : <img src={likesPhoto} alt=\"PHOTO\" className={sNews.reviewIcon} onClick={() => onAddLike(id)}/>\r\n    } {props.post.likesCount !== 0 && props.post.likesCount} \r\n    </span>\r\n     <span> \r\n        <img src={commentPhoto} alt=\"PHOTO\" className={sNews.reviewIcon}/>{props.post.CommentsCount !== 0 && props.post.CommentsCount} \r\n     </span> \r\n</div>\r\n}\r\n\r\nexport default ReviewArea","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport sNews from '../../../News/newsItem/NewsItem.module.css'\r\nimport userPhoto from '../../../../img/user.svg'\r\nimport {Element} from '../../../common/FormControl/FormControl';\r\nimport { reduxForm, Field, InjectedFormProps } from 'redux-form';\r\nimport CommentsArea from './CommentsArea';\r\nimport ReviewArea from './ReviewArea';\r\nimport {ProfileInitialStateType, PostItemType} from '../../../../redux/profile_reducer';\r\nimport { ProfileType } from '../../../../Types/Types';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../../redux/store-redux';\r\n\r\nlet id = 5;\r\n\r\ntype PropsType = {\r\n    state: ProfileInitialStateType\r\n    profile: ProfileType | null\r\n    post: PostItemType\r\n    avatarPhoto: string | null | undefined\r\n\r\n    reset: (form: string) => void\r\n    addComment: (id: number, text: string) => void\r\n    updateCommentCount: (id: number) => void\r\n    updateLikeCount: (id: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n\r\n  let onAddComment = (data: any) => {\r\n      props.addComment(props.post.id, data['comment' + props.post.id]);\r\n      props.updateCommentCount(props.post.id)\r\n      props.reset('commentFormMyPost')\r\n  }\r\n\r\n  let onAddLike = (id: number) => {\r\n      props.updateLikeCount(id)\r\n  }\r\n\r\n  return (\r\n      <div className={sNews.newsItem}>\r\n          <span style = {{display: \"flex\", alignItems: \"center\"}}>\r\n              <span>\r\n                  {\r\n                  props.state.photos && props.state.photos.large\r\n                      ? <img src={props.state.photos.large} alt=\"PHOTO1\" className={sNews.userImg}/>\r\n                      : <img src={userPhoto} alt=\"PHOTO2\" className={sNews.userImg}/>\r\n                  }\r\n              </span>\r\n              <span className={sNews.user}>{props.profile && props.profile.fullName || ' '}</span>\r\n          </span>\r\n          <span className={sNews.newsTitle}> {props.post.title} </span>\r\n          <div>\r\n            { props.post.photo && <img src={props.post.photo} alt=\"Photo\"/> }\r\n          </div>\r\n          <ReviewArea onAddLike = {onAddLike} id={props.post.id} post={props.post}/>\r\n          <CommentFormRedux onSubmit={onAddComment} id={props.post.id}/>\r\n          <CommentsArea post = {props.post} avatarPhoto = {props.avatarPhoto}/>\r\n      </div>\r\n  );\r\n}\r\n\r\ntype PostFormPropsType = {\r\n    id: number\r\n}\r\n\r\ntype PostFormValuesType = {\r\n    id: number\r\n}\r\n\r\nconst Input = Element('input');\r\n    \r\nconst CommentForm: React.FC<InjectedFormProps<PostFormValuesType, PostFormPropsType> & PostFormPropsType> = (props) => {\r\n    return <form className={sNews.inputComment} onSubmit={props.handleSubmit}>\r\n        <Field placeholder='Write your comment' name = {'comment' + props.id} component = {Input}/>\r\n        <button type = 'submit' className='btn'>Send</button>\r\n    </form>\r\n}\r\n\r\nconst CommentFormRedux = reduxForm<PostFormValuesType, PostFormPropsType>({form: 'commentFormMyPost'})(CommentForm)\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm, InjectedFormProps} from \"redux-form\";\r\nimport {maxLengthCreater, required} from \"../../utils/Validators/validators\";\r\nimport {Element} from \"../../common/FormControl/FormControl\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport { ProfileInitialStateType } from '../../../redux/profile_reducer';\r\n\r\nconst MyPosts: React.FC<PropsType> = (props) => {\r\n\r\n    let onAddPost = (message: {newMyPostText: string}) => {\r\n        props.addPost(message.newMyPostText);\r\n        props.reset('myPostForm');\r\n    }\r\n\r\n    if (!props.state.profile){\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.addPostArea}>\r\n                <h3>My posts</h3>\r\n                <MyPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {[...props.state.postsData].reverse().map(post =>\r\n                    <Post \r\n                        post = {post} \r\n                        key={post.id}\r\n                        profile = {props.state.profile}\r\n                        addComment={props.addNewComment} \r\n                        updateLikeCount={props.updateLikeCount}\r\n                        updateCommentCount={props.updateCommentCount}\r\n                        avatarPhoto={props.avatarPhoto}\r\n                        reset={props.reset}\r\n                        state={props.state}/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength255 = maxLengthCreater(255);\r\nconst Textarea = Element(\"textarea\");\r\n\r\nclass myPostForm extends React.Component<InjectedFormProps<MyPostFormValuesType> >{\r\n    render() {\r\n        return (\r\n            <form className={s.sendText} onSubmit={this.props.handleSubmit}>\r\n                <Field placeholder='Enter message...' name='newMyPostText' validate={[required, maxLength255]}\r\n                       component={Textarea}/>\r\n                <button className=\"btn\">Add post</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst MyPostFormRedux = reduxForm<MyPostFormValuesType>({form: 'myPostForm'})(myPostForm)\r\n\r\nexport default MyPosts;\r\n\r\n\r\ntype PropsType = {\r\n    state: ProfileInitialStateType\r\n    avatarPhoto: string | null | undefined\r\n\r\n    addPost: (text: string) => void\r\n    reset: (form: string) => void\r\n    addNewComment: (id: number, text: string) => void\r\n    updateCommentCount: (id: number) => void\r\n    updateLikeCount: (id: number) => void\r\n}\r\n\r\n\r\ntype MyPostFormValuesType = {\r\n    newMyPostText: string\r\n}","import React from 'react';\r\nimport {actions} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from 'redux-form';\r\nimport { AppStateType } from '../../../redux/store-redux';\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n\r\n    return {\r\n        state: state.profilePage,\r\n        avatarPhoto: state.profilePage.profile && state.profilePage.profile.photos.large\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { \r\n    addPost: actions.addPost, \r\n    reset, \r\n    addNewComment: actions.addNewComment, \r\n    updateCommentCount: actions.updateCommentCount, \r\n    updateLikeCount: actions.updateLikeCount})(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfilInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n\r\n  return (\r\n    <div className={s.content}>\r\n        <ProfileInfo isOwner={props.isOwner} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n\r\n\r\ntype PropsType = {\r\n  isOwner: boolean\r\n}","import React, { useEffect } from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport {check_auth, getStatus} from \"../../redux/profile_reducer\";\r\nimport {withRouter, RouteComponentProps, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../HOC/withAuthRedirect\"\r\nimport { AppStateType } from '../../redux/store-redux';\r\n\r\nconst ProfileContainer:React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n    const authId = useSelector((state: AppStateType) => state.auth.id)\r\n\r\n    const refreshProfile = () => {\r\n        //@ts-ignore\r\n        let userId: number = params.userId;\r\n        if (!userId) userId = authId as number\r\n        dispatch(check_auth(userId))\r\n        dispatch(getStatus(userId))\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshProfile();\r\n        // @ts-ignore\r\n    }, [params.userId])\r\n\r\n        return (\r\n            // @ts-ignore\r\n            <Profile isOwner={!params.userId} />\r\n        )\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react'\r\nimport style from '../FriendsBar/FreindsBar.module.css'\r\nimport userPhoto from '../../../img/user(1).svg'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../../redux/store-redux'\r\n\r\nconst FriendsBar: React.FC = () => {\r\n\r\n    const friends = useSelector((state: AppStateType) => state.usersPage.friends)\r\n\r\n    return <div className={style.FriendsBar}>\r\n        <h3 style={{textAlign: 'center'}}>Friends</h3>\r\n        <div className={style.FriendsBarContent}>\r\n        {\r\n            friends.map((item, i) => {\r\n                if(i<5){\r\n                    return <div key={item.id}><NavLink to={`/profile/${item.id}`} className={style.item}>\r\n                        {\r\n                        item.photos.large \r\n                            ? <img src={item.photos.large as string | undefined} style={{width: '40px'}} alt=\"User\"/>\r\n                            : <img src={userPhoto} style={{width: '40px'}} alt=\"User\"/>\r\n                        }\r\n                        <span className={style.itemName} style={{display: 'block', fontSize: '13px'}}>\r\n                            {item.name}\r\n                        </span>\r\n                    </NavLink>\r\n                    </div>\r\n                }\r\n            })\r\n        }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default FriendsBar","import React, { Props } from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {useSelector} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { AppStateType } from '../../redux/store-redux';\r\nimport FriendsBar from './FriendsBar/FreindsBar';\r\n\r\nconst Navbar: React.FC = () => {\r\n\r\n    const navState = useSelector((state: AppStateType) => state.navbar.navData)\r\n\r\n    return <nav className={s.nav}>\r\n        {navState.map((data) => (\r\n            <div className={s.item} key={data.id}>\r\n                <NavLink to={'/' + data.href} className={s.itemLink}>\r\n                    <span className={s.linkWrap}>\r\n                        <span className={s.navbarItemImg + ' ' + s[data.name.toLowerCase().toString()]}></span>\r\n                        <span className={s.linkName}>{data.name}</span>\r\n                    </span>\r\n                </NavLink>\r\n            </div>\r\n        ))}\r\n        <FriendsBar />\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React, {PureComponent} from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Route, withRouter, BrowserRouter} from \"react-router-dom\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Footer from \"./Footer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport NewsContainer from \"./components/News/NewsContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {compose} from \"redux\";\r\nimport {Provider, connect} from \"react-redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {init} from \"./redux/app_reducer\";\r\nimport {check_auth} from \"./redux/profile_reducer\";\r\nimport store, {AppStateType} from \"./redux/store-redux\";\r\nimport { withSuspens } from './components/HOC/withSuspens';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\n\r\n\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nimport Navbar from './components/Navbar/Navbar';\r\n\r\nconst WithSusmensDialogs = withSuspens(DialogsContainer)\r\nconst WithSusmensUsers= withSuspens(UsersContainer)\r\n\r\nclass App extends PureComponent<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.init()\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.props.initialized){\r\n            return <Preloader />\r\n        }\r\n        \r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer />\r\n                    <Navbar />\r\n                    <div className=\"app-wrapper-content\">\r\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer />}/>\r\n                        <Route path='/dialogs/:userId?' render={() => <WithSusmensDialogs />}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n                        <Route path='/settings' render={() => <Settings/>}/>\r\n                        <Route path='/news' render={() => <NewsContainer />}/>\r\n                        <Route exact path='/' render={() => <NewsContainer />}/>\r\n                        <Route path='/users' render={ () => <WithSusmensUsers />}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                    </div>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized,\r\n    myId: state.auth.id\r\n})\r\n\r\nconst AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {init, check_auth}) \r\n)(App);\r\n\r\nconst MyWayApp = () => {\r\n    return <HashRouter>\r\n                <Provider store={store}>\r\n                    <AppContainer />\r\n                </Provider>\r\n            </HashRouter>\r\n}\r\n\r\nexport default MyWayApp\r\n\r\ntype PropsType = {\r\n    init: () => void\r\n    initialized: boolean\r\n    myId: number\r\n}\r\n\r\n//process.env.PUBLIC_URL\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MyWayApp from './App';\r\n\r\nReactDOM.render(<MyWayApp />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/user.47be60ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/user(1).7de5e5f7.svg\";","import React from 'react'\r\nimport style from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n    return <div className={style.ldsDualRing}></div>\r\n}\r\n\r\nexport default Preloader","import {UsersAPI} from \"../api/api\";\r\nimport { InferActionsTypes, ThunkType } from \"./store-redux\";\r\n\r\nlet initialState = {\r\n    usersData: [] as Array<UsersDataItemType>,\r\n    pageSize: 100,\r\n    currentPage: 1,\r\n    pageCount: 0,\r\n    isFetching: true,\r\n    toggleProgressArr: [] as Array<number>,\r\n    friends: [] as Array<UsersDataItemType>,\r\n    filter: {\r\n        term: '',\r\n        friends: null as null | boolean\r\n    }\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nexport type FilterType = typeof initialState.filter\r\n\r\nlet users_reducer = (state = initialState, action: ActionsType) : InitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Users/SWITCH_FOLLOW': {\r\n\r\n                return {\r\n                    ...state,\r\n                    usersData: state.usersData.map( u => {\r\n                        if(u.id === action.userId){\r\n                            return {...u, followed: !u.followed}\r\n                        }\r\n                        return u\r\n                    })\r\n                }\r\n        }\r\n        case 'SN/Users/SET_USERS': {\r\n            return { ...state, usersData: [...action.users]}\r\n        }\r\n        case 'SN/Users/SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SN/Users/SET_TOTAL_PAGE_COUNT': {\r\n            return { ...state, pageCount: action.count}\r\n        }\r\n        case 'SN/Users/TOGGLE_FETCHING': {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/Users/TOGGLE_PROGRESS': {\r\n            let userId = action.id\r\n            return {\r\n                ...state,\r\n                toggleProgressArr: action.isFetching\r\n                    ? [...state.toggleProgressArr, userId]\r\n                    : [...state.toggleProgressArr.filter(id => id !== userId)] \r\n            } \r\n        }\r\n        case 'SN/Users/GET_FRIENDS': {\r\n\r\n            return {\r\n                ...state,\r\n                friends: [...action.friends] as Array<UsersDataItemType>\r\n            }\r\n        }\r\n        case 'SN/Users/GET_FILTER': {\r\n            return {\r\n                ...state,\r\n                filter: {term: action.filter.term, friends: action.filter.friends}\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    switch_follow: (userId: number) => ({type: 'SN/Users/SWITCH_FOLLOW', userId} as const),\r\n    setUsers: (users: Array<UsersDataItemType>) => ({type: 'SN/Users/SET_USERS', users} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/Users/SET_CURRENT_PAGE', currentPage} as const),\r\n    setPageCount: (count: number) => ({type: 'SN/Users/SET_TOTAL_PAGE_COUNT', count} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/Users/TOGGLE_FETCHING', isFetching} as const),\r\n    toggleProgress: (isFetching: boolean, id: number) => ({type: 'SN/Users/TOGGLE_PROGRESS', isFetching, id} as const),\r\n    getFriends: (friends: Array<UsersDataItemType>) => ({type: 'SN/Users/GET_FRIENDS', friends} as const),\r\n    getFilter: (filter: FilterType) => ({type: 'SN/Users/GET_FILTER', filter} as const)\r\n}\r\n\r\n\r\n\r\ntype getThunkType = ThunkType<ActionsType >\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number, filter: FilterType): getThunkType => async (dispatch)  => {\r\n\r\n    dispatch(actions.setCurrentPage(currentPage))\r\n    dispatch(actions.toggleIsFetching(true))\r\n    dispatch(actions.getFilter(filter))\r\n    const data = await UsersAPI.getUsers(currentPage, pageSize, filter.term, filter.friends)\r\n    dispatch(actions.toggleIsFetching(false))\r\n    dispatch(actions.setUsers(data.items))\r\n    dispatch(actions.setPageCount(data.totalCount))\r\n}\r\n\r\nexport const getFriends = (): getThunkType => async (dispatch)  => {\r\n\r\n    dispatch(actions.toggleIsFetching(true))\r\n    const data = await UsersAPI.getFriends()\r\n    dispatch(actions.toggleIsFetching(false))\r\n    dispatch(actions.getFriends(data.items))\r\n}\r\n\r\nexport const follow = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleProgress(true, userId))\r\n    const data = await UsersAPI.follow(userId)\r\n        dispatch(actions.switch_follow(userId))\r\n        dispatch(actions.toggleProgress(false, userId))\r\n        dispatch(getFriends())\r\n}\r\n\r\nexport const unfollow = (userId: number): getThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleProgress(true, userId))\r\n    const data = await UsersAPI.unfollow(userId)\r\n        dispatch(actions.switch_follow(userId))\r\n        dispatch(actions.toggleProgress(false, userId))\r\n        dispatch(getFriends())\r\n}\r\n\r\nexport default users_reducer\r\n\r\n\r\ntype UsersDataItemType = {\r\n    name: string | null,\r\n    id: number,\r\n    photos: {\r\n        small: string | null,\r\n        large: string | null\r\n    },\r\n    status: string | null,\r\n    followed: boolean\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3j6Mb\",\"accountInfo\":\"Header_accountInfo__3sZxQ\",\"accountDrop\":\"Header_accountDrop__3Ndw5\",\"userImg\":\"Header_userImg__1L8ZS\",\"login\":\"Header_login__1qApJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__38H_L\",\"item\":\"Navbar_item__1o5Mi\",\"active\":\"Navbar_active__3WUce\",\"itemLink\":\"Navbar_itemLink__1jl79\",\"linkWrap\":\"Navbar_linkWrap__3pUpL\",\"linkName\":\"Navbar_linkName__2KkCq\",\"itemSettings\":\"Navbar_itemSettings__3Q9jd\",\"navbarItemImg\":\"Navbar_navbarItemImg__-6Je8\",\"music\":\"Navbar_music__14dvC\",\"settings\":\"Navbar_settings__aAuoQ\",\"profile\":\"Navbar_profile__3Iud4\",\"message\":\"Navbar_message__kO4_Y\",\"news\":\"Navbar_news__1Vmwk\",\"users\":\"Navbar_users__2XIUB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputArea\":\"FormControl_inputArea__2zbgv\",\"error\":\"FormControl_error__AgXpc\",\"commonError\":\"FormControl_commonError__nrQlp\"};","export const required = (value: string) => {\r\n    if (value) return undefined\r\n\r\n    return \"Field must be not empty!\"\r\n}\r\n\r\nexport const maxLengthCreater = (maxLength: number) => (value: string) => {\r\n    if (value.length > maxLength)\r\n        return `Fields max length is ${maxLength}!`\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsItem\":\"NewsItem_newsItem__3oBaT\",\"user\":\"NewsItem_user__243Ud\",\"newsTitle\":\"NewsItem_newsTitle__3mn5I\",\"reviewCount\":\"NewsItem_reviewCount__1II4o\",\"commentsArea\":\"NewsItem_commentsArea__11K9a\",\"commentsItem\":\"NewsItem_commentsItem__2Se2x\",\"inputComment\":\"NewsItem_inputComment__3koUd\",\"reviewIcon\":\"NewsItem_reviewIcon__38uJ3\",\"userImg\":\"NewsItem_userImg__2rCdw\",\"commentPhoto\":\"NewsItem_commentPhoto__1Fg3R\",\"newsItemContent\":\"NewsItem_newsItemContent__2HpPs\",\"postImg\":\"NewsItem_postImg__2rHwC\",\"BigModeArea\":\"NewsItem_BigModeArea__3R6el\",\"rightContent\":\"NewsItem_rightContent__10CKD\",\"closeBig\":\"NewsItem_closeBig__CBiLS\"};","module.exports = __webpack_public_path__ + \"static/media/heart.21b08fee.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart_active.72246e10.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendsBar\":\"FreindsBar_FriendsBar__2-7qg\",\"FriendsBarContent\":\"FreindsBar_FriendsBarContent__3B25l\",\"item\":\"FreindsBar_item__3ddza\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { useSelector} from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/store-redux\";\r\n\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n\r\n    const RedirectComponent = (props: any) => {\r\n        const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\r\n        if (!isAuth) {\r\n            return <Redirect to='/login'/>\r\n        }\r\n\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    return RedirectComponent\r\n}","module.exports = __webpack_public_path__ + \"static/media/comment2.a93a5733.svg\";","module.exports = __webpack_public_path__ + \"static/media/user22.ee08bb2d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendText\":\"MyPosts_sendText__ddk57\",\"btn\":\"MyPosts_btn__1zJ1u\",\"myPostWrap\":\"MyPosts_myPostWrap__38es8\",\"addPostArea\":\"MyPosts_addPostArea__3WQQm\",\"posts\":\"MyPosts_posts__2uC8G\"};","import { InferActionsTypes, ThunkType } from \"./store-redux\";\r\nimport { DialogsAPI } from \"../api/api\";\r\n\r\nlet id = 4;\r\n\r\ntype UserDataType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\ntype MessageDataType = {\r\n    id: number\r\n    messages: Array<MessagesType>\r\n}\r\n\r\nlet initialState = {\r\n    userData: [\r\n        {\"id\": 1, \"name\": \"Dmitri\"},\r\n        {\"id\": 2, \"name\": \"Svetlana\"},\r\n        {\"id\": 3, \"name\": \"Nauryz\"},\r\n        {\"id\": 4, \"name\": \"Dinmukhamed\"},\r\n        {\"id\": 5, \"name\": \"Mukhit\"}\r\n    ] as Array<UserDataType>,\r\n    messageData: [\r\n            {\r\n                id: 1,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"Yo\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"How are you\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 2,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"hello. how are you?\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"im good\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 3,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"hi\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"what we get in home work\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 4,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"drop our phootos\"},\r\n                    {\"id\": 2, \"message\": \"which?\"},\r\n                    {\"id\": 1, \"message\": \"from zerendy\"}\r\n                ]\r\n            },\r\n            {\r\n                id: 5,\r\n                messages: [\r\n                    {\"id\": 1, \"message\": \"Hello classmates\"},\r\n                    {\"id\": 2, \"message\": \"Hello\"},\r\n                    {\"id\": 1, \"message\": \"wourld you like have hang out with me?\"},\r\n                    {\"id\": 2, \"message\": \"yes, go!\"}\r\n                ]\r\n            }\r\n        ] as Array<MessageDataType>,\r\n    newMessages: []\r\n}\r\n\r\nexport type DialogsInitialStateType = typeof initialState\r\n\r\nlet dialogs_reducer = (state = initialState, action: ActionsType): DialogsInitialStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'SN/Dialogs/ADD_NEW_MESSAGE': {\r\n\r\n            if (action.newMessageText.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    messageData: state.messageData.map(item => {\r\n                        if(+action.id == item.id){\r\n                            item.messages = [...item.messages, {\"id\": 2, \"message\": action.newMessageText}]\r\n                            return item\r\n                        }\r\n                        return item\r\n                    })\r\n                }\r\n            }\r\n            id += 2;\r\n            return state\r\n        }\r\n\r\n        case 'SN/Dialogs/SEND_NEW_MESSAGE': {\r\n\r\n            return {\r\n                ...state,\r\n                newMessages: action.data\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addMessage: (id: number, newMessageText: string) => ({type: 'SN/Dialogs/ADD_NEW_MESSAGE', id, newMessageText} as const),\r\n    sendNewMessage: (data: any) => ({type: 'SN/Dialogs/SEND_NEW_MESSAGE', data} as const)\r\n}\r\n\r\ntype getThunkType = ThunkType<ActionsType>\r\n\r\nexport const sendMessage = (id: number, message: string): getThunkType => async (dispatch) => {\r\n    debugger\r\n    let data = await DialogsAPI.sendMessagesToUser(id, message).then(() => {\r\n        dispatch(actions.sendNewMessage(data))\r\n    })\r\n}\r\n    \r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport default dialogs_reducer\r\n\r\n\r\n// [\r\n//     {\r\n//         id: 1,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"Yo\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"How are you\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"hello. how are you?\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"im good\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"hi\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"what we get in home work\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 4,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"drop our phootos\"},\r\n//             {\"id\": 2, \"message\": \"which?\"},\r\n//             {\"id\": 1, \"message\": \"from zerendy\"}\r\n//         ]\r\n//     },\r\n//     {\r\n//         id: 5,\r\n//         messages: [\r\n//             {\"id\": 1, \"message\": \"Hello classmates\"},\r\n//             {\"id\": 2, \"message\": \"Hello\"},\r\n//             {\"id\": 1, \"message\": \"wourld you like have hang out with me?\"},\r\n//             {\"id\": 2, \"message\": \"yes, go!\"}\r\n//         ]\r\n//     }\r\n// ]"],"sourceRoot":""}